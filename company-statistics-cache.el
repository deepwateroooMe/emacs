(setq company-statistics--scores #s(hash-table size 2025 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("Service" (((:file "e:/AndroidService.org") . 1) ((:keyword "return") . 1) (org-mode . 1) (nil . 1)) "onUnbind" (((:file "e:/AndroidService.org") . 1) (org-mode . 1) (nil . 1)) "public" (((:file "c:/Users/blue_/Desktop/tmp.java") . 1) ((:file "e:/Interview_Android_Coding/HelloWorld.java") . 1) ((:file "e:/Interview_Android_Coding/codingQuestions/binarySearch.java") . 1) ((:file "e:/unity/tetris3d/Assets/Scripts/objectpooling/GenericObjectPool.cs") . 1) ((:keyword "public") . 1) (csharp-mode . 13) ((:file "e:/TestApp/app/src/main/java/com/presto/interviewtestapp/MainActivity.java") . 1) (java-mode . 1) ((:keyword "new") . 5) ((:file "h:/leetcodeCoding/heap.java") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) (nil . 14) ((:keyword "private") . 1) ((:file "h:/leetcodeCoding/Trie.java") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:keyword "class") . 4) ((:file "h:/leetcodeCoding/WordDictionary.java") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:file "h:/leetcodeCoding/StreamChecker.java") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:keyword "return") . 4) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/MKAverage.java") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:file "h:/leetcodeCoding/codeforces/codeforcesComp.java") . 1) ((:file "h:/leetcodeCoding/codeforces/mat.java") . 1) ((:file "h:/leetcodeCoding/twoPointers.java") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1) ((:file "h:/andrprac/jtmp.java") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 2) ((:file "h:/leetcodeCoding/mixed.java") . 1) ((:file "h:/andrprac/MultiThread_learning/app/src/main/java/com/example/carson_ho/handler_learning/MainActivity.java") . 1) ((:keyword "this") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 5) ((:file "g:/andrprac/ndk/app/src/main/java/com/me/ndk/NativeHelper.java") . 1) ((:keyword "static") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainActivity.kt") . 1) ((:keyword "super") . 1) (kotlin-mode . 1)) "println" (((:keyword "val") . 1)) "queries" (((:file "h:/leetcodeCoding/graph.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) ((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:symbol "v") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:keyword "continue") . 1) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) ((:keyword "public") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1)) "Array<String>" (((:keyword "fun") . 1)) "builder" (((:file "e:/TestApp/app/src/main/java/com/presto/interviewtestapp/MainActivity.java") . 1) ((:keyword "this") . 1) (java-mode . 1) (nil . 1)) "Student" (((:file "e:/Kotlin/KotlinPrac/src/Main.kt") . 1) (kotlin-mode . 1) (nil . 1)) "student" (((:file "e:/Kotlin/KotlinPrac/src/Main.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "return" (((:keyword "fun") . 1) ((:file "e:/Kotlin/KotlinPrac/src/Main.kt") . 1) (kotlin-mode . 1) ((:file "e:/Interview_Android_Coding/codingQuestions/binarySearch.java") . 1) (java-mode . 1) ((:keyword "else") . 1) ((:file "e:/unity/tetris3d/Assets/Scripts/objectpooling/PoolManager.cs") . 1) ((:keyword "break") . 1) ((:keyword "this") . 1) ((:file "h:/leetcodeCoding/LFUCache.java") . 1) ((:file "h:/leetcodeCoding/SeatManager.java") . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:file "h:/leetcodeCoding/DinnerPlates.java") . 1) ((:file "h:/leetcodeCoding/dynamicProgramming.java") . 1) ((:file "h:/leetcodeCoding/heap.java") . 1) ((:file "h:/leetcodeCoding/nRayTree.java") . 1) ((:file "h:/leetcodeCoding/isSubPath.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:file "h:/leetcodeCoding/CombinationIterator.java") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:file "h:/leetcodeCoding/depthFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) ((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) ((:file "h:/leetcodeCoding/distanceK.java") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:file "h:/leetcodeCoding/prefixSum.java") . 1) ((:keyword "out") . 1) ((:file "h:/leetcodeCoding/NestedIterator.java") . 1) ((:file "h:/leetcodeCoding/NestedInteger.java") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/TimeMap.java") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:file "h:/leetcodeCoding/RangeModule.java") . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/MedianFinder.java") . 1) ((:file "h:/leetcodeCoding/TreeAncestor.java") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:keyword "case") . 1) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . -34) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . -5) ((:file "h:/leetcodeCoding/tree.java") . 1) ((:keyword "continue") . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . -11) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:file "h:/leetcodeCoding/bittwoManipulation.java") . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:keyword "set") . 1) ((:file "h:/leetcodeCoding/MKAverage.java") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/RandomizedCollection.java") . 1) ((:keyword "if") . 1)) "DialogInterface" (((:keyword "public") . 1)) "onClick" (((:file "e:/TestApp/app/src/main/java/com/presto/interviewtestapp/MainActivity.java") . 1) ((:keyword "public") . 1) (java-mode . 1) (nil . 3) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 2) ((:keyword "else") . 2) (kotlin-mode . 2)) "red_edges" (((:file "h:/leetcodeCoding/graph.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "factorial" (((:file "e:/Kotlin/KotlinPrac/src/Main.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1) ((:keyword "return") . 1)) "TestMethod" ((java-mode . 1) (nil . 1)) "setProperty" (((:symbol "System") . 1) ((:keyword "static") . 1) (java-mode . 1) (nil . 1)) "ProxyGenerator" (((:keyword "static") . 1) (java-mode . 1) (nil . 1)) "saveGeneratedFiles" (((:symbol "ProxyGenerator") . 1) ((:keyword "static") . 1) (java-mode . 1) (nil . 1)) "HelloAnnotation" (((:file "e:/Kotlin/JavaAnnotationTest/src/yj/TestMain.java") . 1) (java-mode . 1) (nil . 1)) "contains" (((:file "h:/leetcodeCoding/graph.java") . 1) ((:symbol "vid") . 1) ((:keyword "if") . 2) (csharp-mode . 2) (nil . 2) ((:symbol "res") . 1) ((:symbol "l") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:symbol "t") . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:symbol "ss") . 1) ((:symbol "m") . 1) ((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) ((:symbol "si") . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:symbol "s") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:keyword "while") . 1) ((:symbol "sv") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1) ((:symbol "left") . 1)) "target" (((:file "e:/Interview_Android_Coding/codingQuestions/binarySearch.java") . 1) ((:file "e:/Interview_Android_Coding/codingQuestions/Search2DMatrix.java") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) (csharp-mode . 3) (nil . 3) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:keyword "while") . 1) ((:keyword "out") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:keyword "if") . 1) ((:keyword "new") . 1) ((:symbol "i") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "return") . 3) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:keyword "base") . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:symbol "cur") . 1) ((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/grathreeph.java") . 1) ((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:file "h:/leetcodeCoding/hashtwotable.java") . 1) ((:file "h:/leetcodeCoding/codeforces/two.java") . 1) ((:keyword "add") . 1) ((:file "h:/leetcodeCoding/dpone.java") . 1) ((:file "h:/leetcodeCoding/dpthree.java") . 1) ((:file "h:/leetcodeCoding/dpfour.java") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 2) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) "daggertrial" (((:keyword "package") . 1) ((:file "e:/android/DaggerTrial/app/src/main/java/com/me/daggertrial/module/AndroidModule.java") . 1) ((:symbol "me") . 1) (nil . 1)) "SpawnnextTetromino" (((:file "e:/unity/tetris3d/Assets/Scripts/Game.cs") . 1) (csharp-mode . 1) (nil . 1)) "MAX_VALUE" (((:keyword "new") . 1) ((:file "h:/leetcodeCoding/graph.java") . 1) ((:symbol "Integer") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "if") . 1)) "development" (((:file "e:/documents_self/prepareForInterview_IntroduceYourself.org") . 1) (org-mode . 1) (nil . 1)) "static" (((:file "e:/tmp/2Thread.cs") . 1) ((:keyword "private") . 1) ((:file "g:/andrprac/ndk/app/src/main/java/com/me/ndk/NativeHelper.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "double" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:keyword "else") . 1) (csharp-mode . 5) (nil . 5) ((:keyword "out") . 1) ((:keyword "return") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynasixmicProgramming.java") . 1) ((:keyword "private") . 1) ((:keyword "new") . 2) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/UndergroundSystem.java") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/Cashier.java") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:keyword "if") . 3) ((:keyword "class") . 1) ((:file "h:/leetcodeCoding/dpfour.java") . 1) ((:keyword "public") . 2) ((:file "h:/leetcodeCoding/array.java") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 4)) "Solution" (((:file "e:/Interview_Android_Coding/codingQuestions/binarySearch.java") . 1) (java-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/Trie.java") . 1) (csharp-mode . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/prefixSum.java") . 1) ((:keyword "new") . 1)) "boolean" (((:file "e:/Interview_Android_Coding/codingQuestions/Search2DMatrix.java") . 1) (java-mode . 1) (nil . 3) ((:keyword "private") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:file "h:/leetcodeCoding/depthFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:file "h:/leetcodeCoding/WordDictionary.java") . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:file "h:/leetcodeCoding/StreamChecker.java") . 1) ((:file "h:/leetcodeCoding/graph.java") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:keyword "public") . 2) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/competition.java") . 1) ((:keyword "new") . 2) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) (csharp-mode . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:file "h:/leetcodeCoding/twoPointers.java") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:file "h:/leetcodeCoding/mixed.java") . 1) ((:file "h:/leetcodeCoding/codeforces/four.java") . 1) ((:file "h:/leetcodeCoding/competition_1030_1.java") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:file "h:/leetcodeCoding/dptwo.java") . 1) ((:file "h:/leetcodeCoding/dpthree.java") . 1) ((:file "h:/leetcodeCoding/dpfive.java") . 1) ((:file "h:/leetcodeCoding/dpnine.java") . 1) ((:file "h:/leetcodeCoding/codeforces/six.java") . 1) ((:file "h:/leetcodeCoding/prevCmp/cmp_01_08.java") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1) ((:file "h:/leetcodeCoding/mtwoixed.java") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) "matrix" (((:keyword "public") . 1) ((:keyword "for") . 1) ((:keyword "if") . 1) ((:keyword "else") . 1) ((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1)) "LoadGame" (((:keyword "this") . 1)) "CaptureScreenshot" (((:symbol "ScreenCapture") . 1) (csharp-mode . 1) (nil . 1)) "Collectors" (((:file "h:/leetcodeCoding/heap.java") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:symbol "stream") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:file "h:/leetcodeCoding/Trie.java") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:file "h:/leetcodeCoding/MovieRentingSystem.java") . 1) ((:keyword "return") . 1)) "private" (((:keyword "const") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/graph.java") . 1) ((:file "h:/leetcodeCoding/heap.java") . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:file "h:/leetcodeCoding/dynamicProgramming.java") . 1) ((:file "h:/leetcodeCoding/nRayTree.java") . 1) ((:file "h:/leetcodeCoding/isSubPath.java") . 1) ((:keyword "private") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:keyword "if") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/Trie.java") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/depthFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) ((:file "h:/leetcodeCoding/StreamChecker.java") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:keyword "else") . 2) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:file "h:/leetcodeCoding/TreeAncestor.java") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/competition.java") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:file "h:/leetcodeCoding/twoPointers.java") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:file "h:/leetcodeCoding/dpone.java") . 1) ((:file "h:/leetcodeCoding/bittwoManipulation.java") . 1) ((:file "h:/leetcodeCoding/dpfive.java") . 1) ((:file "h:/leetcodeCoding/dpnine.java") . 1) ((:keyword "continue") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1) ((:file "h:/leetcodeCoding/codeforces/six.java") . 1) ((:file "h:/leetcodeCoding/grathreeph.java") . 1) ((:file "h:/leetcodeCoding/mixed.java") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.java") . 1) ((:keyword "class") . 3) (csharp-mode . 1) (nil . 4) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 2) (kotlin-mode . 3) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/drawer/TriangleDrawer.kt") . 1)) "newObject" (((:file "e:/unity/tetris3d/Assets/Scripts/objectpooling/GenericObjectPool.cs") . 1) ((:keyword "var") . 1) ((:file "e:/unity/tetris3d/Assets/Scripts/objectpooling/ObjectPool.cs") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "gameObject" (((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "ValueThenKeyComparator" (((:file "h:/leetcodeCoding/heap.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "GameObject" (((:file "e:/unity/tetris3d/Assets/Scripts/objectpooling/Singleton.cs") . 1) ((:keyword "new") . 1) ((:symbol "List") . 1) ((:file "e:/unity/tetris3d/Assets/Scripts/objectpooling/PoolManager.cs") . 1) ((:keyword "public") . 1) ((:file "e:/unity/tetris3d/Assets/Scripts/Game.cs") . 1)) "mGobjTag" (((:file "e:/unity/tetris3d/Assets/Scripts/objectpooling/ObjectPool.cs") . 1) (csharp-mode . 1) (nil . 1)) "prefabs" (((:file "e:/unity/tetris3d/Assets/Scripts/objectpooling/ObjectPool.cs") . 1) (csharp-mode . 1) (nil . 1)) "GetFromPool" (((:file "e:/unity/tetris3d/Assets/Scripts/objectpooling/ObjectPool.cs") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "ObjectPool" ((csharp-mode . 1) (nil . 1)) "Vector3" (((:file "e:/unity/tetris3d/Assets/Scripts/objectpooling/ObjectPool.cs") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "position" (((:keyword "if") . 1) ((:symbol "transform") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:symbol "nil") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1)) "transform" (((:symbol "go") . 1)) "rotation" (((:file "e:/unity/tetris3d/Assets/Scripts/objectpooling/ObjectPool.cs") . 1) ((:keyword "if") . 1) ((:file "e:/unity/tetris3d/Assets/Scripts/objectpooling/PoolManager.cs") . 1) ((:keyword "typeof") . 1) (csharp-mode . 1) (nil . 1)) "source" (((:keyword "new") . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1)) "Instacart" (((:file "d:/PersonalInfo/kcwang/readme.org") . 1) (org-mode . 1) (nil . 1)) "PoolManager" (((:file "e:/unity/tetris3d/Assets/Scripts/objectpooling/PoolManager.cs") . 1) (csharp-mode . 1) (nil . 1)) "sorted" (((:file "h:/leetcodeCoding/heap.java") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/CombinationIterator.java") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:keyword "new") . 1)) "listOfPool" (((:keyword "for") . 1) ((:file "e:/unity/tetris3d/Assets/Scripts/objectpooling/PoolManager.cs") . 1) (csharp-mode . 1) (nil . 1)) "objInstance" (((:keyword "if") . 1) ((:keyword "for") . 1) ((:file "e:/unity/tetris3d/Assets/Scripts/objectpooling/PoolManager.cs") . 1) ((:keyword "typeof") . 1) (csharp-mode . 1) (nil . 1)) "selected" (((:keyword "else") . 1)) "bricks" (((:keyword "while") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/heap.java") . 1) (csharp-mode . 1) (nil . 1)) "finally" (((:file "e:/unity/tetris3d/Assets/Scripts/objectpooling/PoolManager.cs") . 1) (csharp-mode . 1) (nil . 1)) "Boolean" (((:file "h:/leetcodeCoding/graph.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:keyword "new") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1) ((:keyword "var") . 1) ((:file "h:/andrprac/snake2/app/src/main/java/com/me/snake/model/Pos.kt") . 1) ((:keyword "constructor") . 1) (kotlin-mode . 1)) "ArrayList" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:file "h:/leetcodeCoding/MajorityChecker.java") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:file "h:/leetcodeCoding/grathreeph.java") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/FreqStack.java") . 1) ((:file "h:/leetcodeCoding/competition.java") . 1) ((:file "h:/leetcodeCoding/dpsix.java") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) "UseRestroomStall" (((:file "e:/tmp/2Thread.cs") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "continue" (((:keyword "if") . 2) (nil . 2) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:file "h:/leetcodeCoding/nRayTree.java") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:symbol "ll") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:file "h:/leetcodeCoding/MyCalendar.java") . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:file "h:/leetcodeCoding/prefixSum.java") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:file "h:/leetcodeCoding/isSubPath.java") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . -2) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/string.java") . 1) ((:file "h:/leetcodeCoding/competition.java") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) ((:file "h:/leetcodeCoding/stack.java") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:file "h:/leetcodeCoding/dptwo.java") . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1) ((:file "h:/leetcodeCoding/array.java") . 1) ((:file "h:/leetcodeCoding/mixed.java") . 1) ((:file "h:/leetcodeCoding/hdsix.java") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 2) ((:file "h:/leetcodeCoding/strthreeing.java") . 1)) "portionResults" (((:file "e:/tmp/2Thread.cs") . 1) (csharp-mode . 1) (nil . 1)) "Environment" (((:file "e:/tmp/2Thread.cs") . 1) (csharp-mode . 1) (nil . 1)) "ProcessorCount" (((:file "e:/tmp/2Thread.cs") . 1) ((:symbol "Environment") . 1) (csharp-mode . 1) (nil . 1)) "portionSize" (((:keyword "new") . 1)) "portionNumberAsInt" (((:file "e:/tmp/2Thread.cs") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "baseIndex" (((:file "e:/tmp/2Thread.cs") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "numToSume" (((:file "e:/tmp/thread.cs") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "numToQueue" (((:file "e:/tmp/thread.cs") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "numbers" (((:keyword "lock") . 1)) "charAt" (((:keyword "for") . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/nRayTree.java") . 1) ((:symbol "res") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:symbol "s") . 1) ((:symbol "target") . 1) ((:symbol "arr") . 1) ((:keyword "return") . 1) ((:symbol "ori") . 1) ((:symbol "val") . 1) ((:symbol "va") . 1) ((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) ((:symbol "word") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "if") . 1) ((:symbol "sb") . 1) ((:file "h:/leetcodeCoding/dynasixmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1)) "Integer" (((:keyword "private") . 1) ((:symbol "Entry") . 2) ((:file "h:/leetcodeCoding/graph.java") . 1) ((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:keyword "public") . 3) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:file "h:/leetcodeCoding/MyCalendar.java") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/depthFirstSearch.java") . 1) ((:file "c:/Users/blue_/AppData/Roaming/.emacs.d/elpa/yasnippet-0.12.2/snippets/csharp-mode/ipi") . 1) (snippet-mode . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:keyword "if") . 3) ((:keyword "new") . 5) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:keyword "out") . 5) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:keyword "for") . 5) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) ((:symbol "ArrayList") . 1) ((:file "h:/leetcodeCoding/tree.java") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/bittwoManipulation.java") . 1) ((:file "h:/leetcodeCoding/grathreeph.java") . 1) ((:file "h:/leetcodeCoding/string.java") . 1) ((:file "h:/leetcodeCoding/DinnerPlates.java") . 1) ((:symbol "Stack") . 1) ((:file "h:/leetcodeCoding/competition.java") . 1) ((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:symbol "List") . 1) ((:file "h:/leetcodeCoding/mixed.java") . 1) ((:file "h:/leetcodeCoding/prefixSum.java") . 1) ((:symbol "Set") . 2) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1) (csharp-mode . 18) (nil . 18) ((:file "h:/leetcodeCoding/hdseven.java") . 7) ((:keyword "else") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 7) ((:file "g:/leetcodeCoding/cmp.java") . 3) ((:symbol "CusMap") . 1) ((:file "h:/leetcodeCoding/strthreeing.java") . 1)) "BathroomStall" (((:file "e:/tmp/thread.cs") . 1) (csharp-mode . 1) (nil . 1)) "stall1" (((:file "e:/tmp/thread.cs") . 1) (csharp-mode . 1) (nil . 1)) "getValue" (((:symbol "prev") . 1) ((:keyword "out") . 2) ((:symbol "cur") . 1) ((:keyword "if") . 1) ((:symbol "tmp") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:symbol "val") . 1) ((:keyword "public") . 1) (csharp-mode . 2) (nil . 2) ((:symbol "entry") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:symbol "en") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:symbol "nil") . 2) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) "StringBuilder" (((:file "h:/leetcodeCoding/unionFind.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "private") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:file "h:/leetcodeCoding/Trie.java") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/trieB.java") . -6) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:file "h:/leetcodeCoding/string.java") . 1) ((:file "h:/leetcodeCoding/CombinationIterator.java") . 1)) "colors" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1)) "compareTo" (((:file "h:/leetcodeCoding/graph.java") . 1) ((:symbol "nil") . 1) (csharp-mode . 1) (nil . 1)) "root" (((:file "h:/leetcodeCoding/removeLeafNodes.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/tree.java") . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:file "h:/leetcodeCoding/MKAverage.java") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1) ((:keyword "if") . 1)) "connections" (((:keyword "if") . 1) ((:keyword "continue") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) (csharp-mode . 1) (nil . 1)) "array" (((:file "e:/Kotlin/KotlinPrac/src/Main.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "dialog" (((:keyword "this") . 1)) "displayMetrics" (((:file "e:/TestApp/app/src/main/java/com/presto/interviewtestapp/MainActivity.java") . 1) ((:keyword "new") . 1) (java-mode . 1) (nil . 1)) "WindowManager" (((:file "e:/TestApp/app/src/main/java/com/presto/interviewtestapp/MainActivity.java") . 1) (java-mode . 1) (nil . 1)) "android" (((:file "e:/TestApp/app/src/main/res/drawable/signup.xml") . 1) (nxml-mode . 2) ((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/MyView.java") . 1) ((:keyword "this") . 1) (csharp-mode . 1) (nil . 2) ((:file "g:/andrprac/opengl/app/src/main/AndroidManifest.xml") . 1)) "inflate" (((:file "e:/TestApp/app/src/main/java/com/presto/interviewtestapp/MainActivity.java") . 1) ((:keyword "this") . 1) (java-mode . 1) (nil . 1)) "bfsCheapest" (((:file "h:/leetcodeCoding/graph.java") . 1) (csharp-mode . 1) (nil . 1)) "nums2" (((:file "h:/leetcodeCoding/heap.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:keyword "for") . 1)) "GhostTetromino" (((:file "e:/unity/tetris3d/Assets/Scripts/Game.cs") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "barcodes" (((:keyword "for") . 1)) "roads" (((:keyword "for") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpsix.java") . 1)) "threadLocker" (((:file "e:/unity/tetris3d/Assets/Scripts/objectpooling/PoolManager.cs") . 1) (csharp-mode . 1) (nil . 1)) "binarySearch" (((:file "e:/Interview_Android_Coding/codingQuestions/binarySearch.java") . 1) ((:keyword "public") . 1) (java-mode . 1) (nil . 1) ((:keyword "private") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/competition.java") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1)) "MoveDown" ((csharp-mode . 1) (nil . 1)) "Firebase" (((:file "e:/unity/tetris3D/Assets/Scripts/GoogleSignIn.cs") . 1) (csharp-mode . 1) (nil . 1)) "graph" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/TreeAncestor.java") . 1) ((:keyword "continue") . 1) ((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) ((:keyword "if") . 1)) "SaveGame" ((csharp-mode . 1) (nil . 1)) "compareByWeight" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "inventory" (((:keyword "public") . 1) ((:keyword "if") . 1) ((:keyword "return") . 1) ((:keyword "while") . 1) ((:keyword "else") . 1)) "petition" (((:file "c:/Users/blue_/Desktop/tmp.org") . 1) (org-mode . 1) (nil . 1)) "relations" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) (csharp-mode . 1) (nil . 1)) "_MainTex" (((:file "e:/unity/TrialTests/Assets/alphaTest.shader") . 1) ((:keyword "struct") . 1) (shader-mode . 1) (nil . 1)) "objectToReturn" (((:file "e:/unity/tetris3d/Assets/Scripts/objectpooling/GenericObjectPool.cs") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "struct" (((:file "e:/unity/TrialTests/Assets/alphaTest.shader") . 1) (csharp-mode . 1) (nil . 1)) "float3" (((:file "e:/unity/TrialTests/Assets/alphaTest.shader") . 1) ((:keyword "struct") . 1) (csharp-mode . 1) (nil . 1)) "currCnt" (((:keyword "else") . 1) ((:keyword "if") . 1) ((:keyword "new") . 1)) "Comparator" (((:file "h:/leetcodeCoding/graph.java") . 1) ((:file "h:/leetcodeCoding/heap.java") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) (csharp-mode . 1) (nil . 1)) "nums" (((:keyword "if") . 1) ((:keyword "else") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/heap.java") . 1) ((:keyword "new") . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) ((:keyword "continue") . 1) ((:keyword "return") . 1) ((:symbol "1000") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . -27) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1)) "getCnt" (((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:symbol "uf") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/codeforces/five.java") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/hdsix.java") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) "stones" (((:file "h:/leetcodeCoding/heap.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "public") . 1) ((:symbol "j") . 1) ((:keyword "if") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dynasixmicProgramming.java") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1)) "打着爱国的旗号" (((:file "c:/Users/blue_/Desktop/tmp.org") . 1) (org-mode . 1) (nil . 1)) "score" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) (csharp-mode . 1) (nil . 1)) "driveway" (((:file "c:/Users/blue_/Desktop/tmp.org") . 1) (org-mode . 1) (nil . 1)) "lamps" (((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "bool" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:keyword "private") . 1) ((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1)) "isWater" (((:keyword "public") . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "Character" (((:file "h:/leetcodeCoding/heap.java") . 1) (csharp-mode . 1) (nil . 1) ((:symbol "List") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/NestedIterator.java") . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:symbol "Set") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:file "h:/leetcodeCoding/string.java") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/mixed.java") . 1)) "headID" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/nRayTree.java") . 1) (csharp-mode . 1) (nil . 1)) "points" (((:file "h:/leetcodeCoding/heap.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "continue") . 1) ((:keyword "new") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "for") . 1)) "getOrDefault" (((:symbol "ma") . 1) ((:keyword "else") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:file "h:/leetcodeCoding/MyCalendar.java") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:symbol "m") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "for") . 1) ((:symbol "fre") . 1) ((:file "h:/leetcodeCoding/strthreeing.java") . 1)) "TreeNode" (((:file "h:/leetcodeCoding/nRayTree.java") . 1) ((:file "h:/leetcodeCoding/distanceK.java") . 1) ((:keyword "for") . 1) ((:symbol "List") . 1) ((:keyword "private") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/MKAverage.java") . 1) ((:file "h:/leetcodeCoding/dpone.java") . 1) ((:keyword "class") . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1)) "beforeItems" (((:keyword "for") . 1)) "我与表哥告别已经离开" (((:file "d:/PersonalInfo/kcwang/backups_plans.org") . 1) (org-mode . 1) (nil . 1)) "trips" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) (csharp-mode . 1) (nil . 1)) "findTheKVal" (((:keyword "return") . 1)) "prerequisites" ((java-mode . 1) ((:file "h:/leetcodeCoding/graph.java") . 1) ((:keyword "for") . 1) (nil . 1)) "isEmpty" (((:symbol "q") . 1) ((:keyword "while") . 1) ((:symbol "s") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/DinnerPlates.java") . 1) ((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/competition.java") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1)) "deque" (((:keyword "if") . 1)) "length" ((csharp-mode . 9) ((:symbol "queries") . 1) ((:symbol "roads") . 1) ((:symbol "stones") . 1) ((:keyword "new") . 2) ((:symbol "z") . 1) ((:file "h:/leetcodeCoding/heap.java") . 1) ((:symbol "tmp") . 1) ((:keyword "if") . 2) ((:symbol "connections") . 1) ((:symbol "times") . 1) ((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:symbol "edges") . 1) ((:symbol "preorder") . 1) ((:symbol "hits") . 1) ((:keyword "out") . 2) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:symbol "allowedSwaps") . 1) ((:symbol "deadends") . 1) ((:symbol "relations") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:symbol "b") . 1) ((:symbol "arr") . 1) ((:symbol "digits") . 1) ((:file "h:/leetcodeCoding/trieProbs.java") . 1) ((:symbol "quantity") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:symbol "s") . 3) ((:symbol "num") . 1) ((:symbol "searchWord") . 1) ((:symbol "products") . 1) ((:file "h:/leetcodeCoding/segmentTree.java") . 1) ((:file "h:/leetcodeCoding/MajorityChecker.java") . 1) ((:symbol "word") . 1) ((:symbol "t") . 2) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:symbol "events") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:symbol "ori") . 1) ((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) ((:symbol "nums") . 1) ((:symbol "vis") . 1) ((:symbol "expression") . 1) ((:symbol "graph") . 1) ((:symbol "words") . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:symbol "bookings") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/prefixSum.java") . 1) ((:keyword "public") . 2) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:symbol "nil") . 2) ((:symbol "envelopes") . 1) ((:symbol "li") . 1) ((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . -4) ((:symbol "sb") . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:keyword "private") . 1) ((:symbol "tt") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:keyword "from") . 1) ((:symbol "dirs") . 1) ((:keyword "while") . 1) ((:symbol "sum") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:symbol "res") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:symbol "prices") . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:symbol "bw") . 1) ((:symbol "books") . 1) ((:file "h:/leetcodeCoding/string.java") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:symbol "cur") . 1) ((:file "h:/leetcodeCoding/twoPointers.java") . 1) ((:symbol "s1") . 1) ((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) ((:keyword "for") . 6) ((:symbol "chars") . 1) ((:symbol "height") . 1) ((:symbol "v") . 1) ((:file "h:/leetcodeCoding/FindSumPairs.java") . 1) ((:keyword "this") . 1) ((:symbol "timePoints") . 1) ((:file "h:/leetcodeCoding/competition.java") . 1) ((:file "h:/leetcodeCoding/Cashier.java") . 1) ((:symbol "a") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:symbol "citations") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:file "h:/leetcodeCoding/codeforces/three.java") . 1) ((:file "h:/leetcodeCoding/codeforces/five.java") . 1) ((:file "h:/leetcodeCoding/StreamChecker.java") . 1) ((:symbol "strs") . 1) ((:file "h:/leetcodeCoding/strthreeing.java") . 1) ((:file "h:/leetcodeCoding/dpone.java") . 1) ((:symbol "parts") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/bittwoManipulation.java") . 1) ((:symbol "ans") . 2) ((:symbol "target") . 1) ((:file "h:/leetcodeCoding/dpfive.java") . 1) ((:symbol "id") . 1) ((:file "h:/leetcodeCoding/dpsix.java") . 1) ((:symbol "req_skills") . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1) ((:file "h:/leetcodeCoding/dpnine.java") . 1) ((:symbol "primes") . 1) ((:symbol "hand") . 1) ((:symbol "balls") . 1) ((:file "h:/leetcodeCoding/codeforces/six.java") . 1) ((:symbol "str") . 1) ((:file "h:/leetcodeCoding/hdsix.java") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1) ((:symbol "pa") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 7) ((:file "g:/leetcodeCoding/mtwoixed.java") . 1) ((:symbol "q") . 1) ((:symbol "par") . 2)) "edges" (((:keyword "return") . 1) (java-mode . 1) ((:file "h:/leetcodeCoding/graph.java") . 1) ((:keyword "for") . 2) (csharp-mode . 2) (nil . 2) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/depthFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:file "h:/leetcodeCoding/isSubPath.java") . 1) ((:file "h:/leetcodeCoding/grathreeph.java") . 1) ((:keyword "continue") . 1) ((:file "h:/leetcodeCoding/dpfive.java") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) "UnionFind" ((java-mode . 1) ((:file "h:/leetcodeCoding/graph.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:keyword "new") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1)) "Arrays" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1)) "getKey" (((:file "h:/leetcodeCoding/graph.java") . 1) ((:symbol "nil") . 2) ((:keyword "out") . 2) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:symbol "ceilingEntry") . 1) ((:keyword "new") . 1) ((:keyword "if") . 1) ((:symbol "entry") . 1) (csharp-mode . 2) (nil . 2) ((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:symbol "en") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:keyword "public") . 1) ((:keyword "continue") . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:file "h:/leetcodeCoding/string.java") . 1) ((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:file "h:/leetcodeCoding/prefixSum.java") . 1) ((:symbol "it") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) "LinkedHashMap" (((:keyword "out") . 1)) "paths" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/grathreeph.java") . 1) ((:keyword "for") . 1)) "capacity" (((:keyword "this") . 3) ((:file "h:/leetcodeCoding/LFUCache.java") . 1) ((:file "h:/leetcodeCoding/heap.java") . 1) (csharp-mode . 6) (nil . 6) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:symbol "this") . 2) ((:file "h:/leetcodeCoding/DinnerPlates.java") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 5) ((:keyword "new") . 1) ((:keyword "public") . 1) ((:keyword "if") . 1)) "index" (((:file "h:/leetcodeCoding/LFUCache.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/DinnerPlates.java") . 1) ((:file "h:/leetcodeCoding/segmentTree.java") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "if") . 1) ((:keyword "return") . 1)) "security" (((:file "c:/Users/blue_/Desktop/tmp.org") . 1) (org-mode . 1) (nil . 1)) "words" (((:keyword "if") . 1) ((:keyword "else") . 1) ((:keyword "new") . 1) ((:symbol "n") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:file "h:/leetcodeCoding/twoPointers.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:file "h:/leetcodeCoding/StreamChecker.java") . 1) ((:file "h:/leetcodeCoding/dptwo.java") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1)) "solve" (((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "aliceValues" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) (csharp-mode . 1) (nil . 1)) "dijkstra" (((:file "h:/leetcodeCoding/graph.java") . 1) (csharp-mode . 1) (nil . 1)) "accounts" (((:keyword "for") . 1)) "group" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1) ((:file "h:/leetcodeCoding/grathreeph.java") . 1) ((:keyword "new") . 1)) "heights" (((:keyword "public") . 1) ((:keyword "for") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/heap.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/depthFirstSearch.java") . 1) ((:keyword "while") . 1) ((:keyword "else") . 1)) "isPossible" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) (csharp-mode . 1) (nil . 1)) "classes" (((:file "h:/leetcodeCoding/heap.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "for") . 1)) "extraStudents" (((:file "h:/leetcodeCoding/heap.java") . 1) ((:keyword "while") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:keyword "for") . 1)) "String" (((:keyword "public") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "private") . 1) ((:symbol "List") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:file "h:/leetcodeCoding/Trie.java") . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) ((:symbol "ArrayList") . 1) ((:keyword "new") . 3) ((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:keyword "return") . 1) ((:keyword "get") . 1) ((:file "h:/leetcodeCoding/TimeMap.java") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 4) (nil . 4) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:keyword "out") . 2) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/heap.java") . 1) ((:keyword "else") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:keyword "continue") . 1) ((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/string.java") . 1) ((:keyword "class") . 1) ((:file "h:/leetcodeCoding/UndergroundSystem.java") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:file "h:/leetcodeCoding/CombinationIterator.java") . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/twoPointers.java") . 1) ((:file "h:/leetcodeCoding/competition.java") . 1) ((:file "h:/leetcodeCoding/hashtwotable.java") . 1) ((:file "h:/leetcodeCoding/codeforces/mat.java") . 1) ((:file "h:/leetcodeCoding/codeforces/one.java") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:file "h:/leetcodeCoding/StreamChecker.java") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:file "h:/leetcodeCoding/strthreeing.java") . 1) ((:symbol "Set") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dpthree.java") . 1) ((:file "h:/leetcodeCoding/dpfour.java") . 1) ((:file "h:/leetcodeCoding/codeforces/three.java") . 1) ((:file "h:/leetcodeCoding/mixed.java") . 1) ((:file "h:/leetcodeCoding/dpsix.java") . 1) ((:file "h:/leetcodeCoding/dpseven.java") . 1) ((:file "h:/leetcodeCoding/dpnine.java") . 1) ((:keyword "in") . 1) ((:file "h:/leetcodeCoding/codeforces/six.java") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 3)) "HashMap" (((:file "h:/leetcodeCoding/AllOne.java") . 1) (csharp-mode . 2) (nil . 2) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:keyword "new") . 2) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:file "h:/leetcodeCoding/grathreeph.java") . 1) ((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dpfive.java") . 1) ((:file "h:/leetcodeCoding/dpnine.java") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) "getTreeSize" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/nRayTree.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "tasks" (((:keyword "new") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "if") . 1) ((:keyword "public") . 1) ((:keyword "for") . 1) ((:keyword "else") . 1) ((:file "h:/leetcodeCoding/heap.java") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1)) "succProb" (((:keyword "for") . 1)) "getLargestGroupCnts" (((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:symbol "uf") . 1) (csharp-mode . 1) (nil . 1)) "orders" (((:keyword "while") . 1) ((:file "h:/leetcodeCoding/heap.java") . 1) (csharp-mode . 1) (nil . 1) ((:symbol "nil") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:file "h:/leetcodeCoding/hashtwotable.java") . 1) ((:keyword "for") . 1)) "events" (((:file "h:/leetcodeCoding/heap.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:keyword "public") . 1) ((:keyword "for") . 1) ((:keyword "return") . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1)) "remove" (((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:keyword "if") . 2) (csharp-mode . 2) (nil . 2) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:symbol "l") . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:symbol "tmp") . 1) ((:symbol "popIdxSet") . 1) ((:file "h:/leetcodeCoding/MKAverage.java") . 1) ((:symbol "mmi") . 1) ((:keyword "else") . 1) ((:keyword "remove") . 1) ((:symbol "s") . 1) ((:keyword "return") . 1) ((:symbol "map") . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1) ((:symbol "one") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1) ((:symbol "nil") . 1)) "manager" (((:keyword "if") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/nRayTree.java") . 1) (csharp-mode . 1) (nil . 1)) "repeat" (((:keyword "while") . 1) ((:file "h:/leetcodeCoding/competition.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "lastKey" (((:keyword "if") . 1) ((:keyword "else") . 1)) "isDigit" (((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:symbol "Character") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:file "h:/leetcodeCoding/NestedIterator.java") . 1) ((:file "h:/leetcodeCoding/string.java") . 1)) "prevRoom" (((:keyword "if") . 1)) "HashSet" (((:file "h:/leetcodeCoding/AllOne.java") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:keyword "new") . 2) (csharp-mode . 2) (nil . 2) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:file "h:/leetcodeCoding/dpsix.java") . 1) ((:file "h:/leetcodeCoding/grathreeph.java") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) "entrance" (((:keyword "if") . 1) ((:keyword "new") . 1)) "children" (((:keyword "for") . 1) ((:symbol "r") . 1) ((:keyword "if") . 1) ((:symbol "node") . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpseven.java") . 1)) "maxTime" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) (csharp-mode . 3) (nil . 3) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 2) ((:keyword "new") . 1) ((:keyword "return") . 1)) "getTreeNode" (((:file "h:/leetcodeCoding/nRayTree.java") . 1) (csharp-mode . 1) (nil . 1)) "result" (((:file "h:/leetcodeCoding/backTracking.java") . 1) (csharp-mode . 1) (nil . 3) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:file "g:/andrprac/ktl/app/src/main/java/com/me/ktl/MainActivity.kt") . 2) ((:keyword "val") . 2) (kotlin-mode . 2)) "helperPermutationM" (((:file "h:/leetcodeCoding/backTracking.java") . 1) (csharp-mode . 1) (nil . 1)) "tarjan" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "keySet" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:symbol "m") . 2) ((:keyword "if") . 2) (csharp-mode . 3) (nil . 3) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:symbol "tmp") . 1) ((:keyword "for") . 2) ((:file "h:/leetcodeCoding/dpsix.java") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 2) ((:symbol "ins") . 1)) "start" (((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/MyCalendar.java") . 1) ((:keyword "public") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:keyword "if") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/hashtable.java") . 1)) "times" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:file "h:/leetcodeCoding/heap.java") . 1) ((:keyword "new") . 1)) "reversedIndex" (((:file "h:/leetcodeCoding/AllOne.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "TreeMap" (((:keyword "new") . 2) (csharp-mode . 2) (nil . 2) ((:file "g:/leetcodeCoding/cmp.java") . 1)) "limit" (((:file "h:/leetcodeCoding/removeLeafNodes.java") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:file "h:/leetcodeCoding/prefixSum.java") . 1) ((:file "h:/leetcodeCoding/dptwo.java") . 1) ((:keyword "continue") . 1) ((:file "h:/leetcodeCoding/dpsix.java") . 1)) "nums1" (((:keyword "public") . 1) ((:file "h:/leetcodeCoding/heap.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1)) "pathSum" (((:keyword "return") . 1)) "value" (((:file "h:/leetcodeCoding/removeLeafNodes.java") . 1) (csharp-mode . 1) (nil . 2) ((:keyword "if") . 1) ((:file "g:/andrprac/ktl/app/src/main/java/com/me/ktl/MainActivity.kt") . 1) ((:keyword "in") . 1) (kotlin-mode . 1)) "isSame" (((:keyword "return") . 1)) "right" (((:file "h:/leetcodeCoding/nRayTree.java") . 1) ((:keyword "if") . 2) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/RangeModule.java") . 1) (csharp-mode . 2) (nil . 2) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:keyword "else") . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dptwo.java") . 1) ((:file "h:/leetcodeCoding/dpfive.java") . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1) ((:symbol "r") . 1)) "longestUnivaluePath" (((:file "h:/leetcodeCoding/isSubPath.java") . 1) (csharp-mode . 1) (nil . 1)) "hasApple" (((:file "h:/leetcodeCoding/nRayTree.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "if") . 1)) "appleCnt" (((:file "h:/leetcodeCoding/nRayTree.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "postOrderTraversal" (((:file "h:/leetcodeCoding/nRayTree.java") . 1) (csharp-mode . 1) (nil . 1)) "preOrderTraversal" (((:file "h:/leetcodeCoding/nRayTree.java") . 1) ((:file "h:/leetcodeCoding/isSubPath.java") . 1) (csharp-mode . 1) (nil . 1)) "peek" (((:keyword "while") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/MedianFinder.java") . 1) ((:symbol "lar") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/tree.java") . 1) ((:symbol "q") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/string.java") . 1) ((:symbol "st") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpfive.java") . 1)) "pathSumtoNodeBottomUp" (((:file "h:/leetcodeCoding/removeLeafNodes.java") . 1) (csharp-mode . 1) (nil . 1)) "passingFees" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "continue") . 1)) "rootG" (((:keyword "return") . 1) ((:file "h:/leetcodeCoding/removeLeafNodes.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "preOrderTraversalCollectingNodes" (((:keyword "if") . 1)) "1000000007" (((:file "h:/leetcodeCoding/distanceK.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:keyword "return") . 1) ((:symbol "nil") . 1) ((:keyword "new") . 1)) "informTime" (((:keyword "new") . 1) ((:keyword "continue") . 1)) "validated" (((:keyword "new") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) (csharp-mode . 1) (nil . 1)) "threshold" (((:file "h:/leetcodeCoding/unionFind.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1)) "edgeSize" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "nodeSize" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "entry0" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) (csharp-mode . 1) (nil . 1)) "findDuplicateSubtreesRecursive" (((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "merge" (((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:symbol "uf") . 1)) "hitBricks" (((:file "h:/leetcodeCoding/unionFind.java") . 1) (csharp-mode . 1) (nil . 1)) "ladders" (((:keyword "while") . 1) ((:keyword "if") . 1)) "piles" (((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "for") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1)) "needtime" (((:symbol "nil") . 1)) "sameGroup" (((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:symbol "uf") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:file "h:/leetcodeCoding/depthFirstSearch.java") . 1)) "grid" (((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "findDuplicateSubtrees" (((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "pathSumtoNodeTopDown" (((:file "h:/leetcodeCoding/removeLeafNodes.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "allUnique" (((:file "h:/leetcodeCoding/backTracking.java") . 1) (csharp-mode . 1) (nil . 1)) "sortGraph" (((:keyword "new") . 1)) "first" (((:symbol "nil") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:symbol "ts") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1)) "entry" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:file "h:/leetcodeCoding/heap.java") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:keyword "continue") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/UndergroundSystem.java") . 1) ((:keyword "public") . 1)) "robRecursive" (((:file "h:/leetcodeCoding/nRayTree.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "shortestBridge" (((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "numTilePossibilities" (((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "issimilar" (((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "hits" (((:keyword "continue") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "allowedSwaps" (((:keyword "out") . 1)) "edgeList" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "for") . 1)) "opportunity" (((:file "h:/leetcodeCoding/summary.org") . 1) (org-mode . 1) (nil . 1)) "maps" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "deadends" (((:keyword "for") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "highestPeak" (((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "digits" (((:keyword "new") . 1) ((:file "h:/leetcodeCoding/dynasixmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "for") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1)) "helper" (((:file "h:/leetcodeCoding/CombinationIterator.java") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "else") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "private") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:file "h:/leetcodeCoding/twoPointers.java") . 1) ((:file "h:/leetcodeCoding/dpfive.java") . 1) ((:file "h:/leetcodeCoding/strthreeing.java") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:file "h:/leetcodeCoding/mtwoixed.java") . 1)) "partitionLabels" (((:file "h:/leetcodeCoding/greedy.java") . 1) (csharp-mode . 1) (nil . 1)) "diffByOneDigit" (((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "toString" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:symbol "tmp") . 1) ((:keyword "out") . 1) ((:symbol "s") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/Trie.java") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "if") . 2) ((:file "h:/leetcodeCoding/recursion.java") . 1) (csharp-mode . 2) (nil . 6) ((:symbol "Character") . 1) ((:symbol "key") . 1) ((:symbol "t") . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) ((:symbol "tb") . 1) ((:file "h:/leetcodeCoding/string.java") . 1) ((:keyword "return") . 2) ((:symbol "sb") . 1) ((:file "h:/leetcodeCoding/CombinationIterator.java") . 1) ((:symbol "a") . 1) ((:symbol "b") . 1) ((:keyword "else") . 2) ((:file "g:/andrprac/VideoEdit/app/src/main/java/com/ringdroid/mediacodec/VideoExtractor.java") . 1) ((:symbol "file") . 1) ((:keyword "try") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainContent.kt") . 3) ((:symbol "uri") . 1) (kotlin-mode . 4) ((:symbol "value") . 1) ((:symbol "imageUri") . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/html/annotatedStringResource.kt") . 1) ((:symbol "spanned") . 1)) "getComponentCnts" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "characters" (((:keyword "public") . 1)) "getCleanCnts" (((:keyword "return") . 1)) "CombinationIterator" (((:file "h:/leetcodeCoding/CombinationIterator.java") . 1) (csharp-mode . 1) (nil . 1)) "addToParent" (((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:symbol "uf") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "append" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:symbol "s") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/Trie.java") . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) ((:symbol "t") . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) ((:symbol "sb") . 1) ((:keyword "for") . 1) ((:symbol "nil") . 1)) "deleteCharAt" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:symbol "s") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "while") . 1)) "generateCntMisplaced" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) (csharp-mode . 1) (nil . 1)) "students" (((:keyword "public") . 1) ((:file "h:/leetcodeCoding/competition.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpthree.java") . 1)) "price" (((:keyword "public") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "while") . 1)) "canPartitionKSubsetsRecursive" (((:file "h:/leetcodeCoding/backTracking.java") . 1) (csharp-mode . 1) (nil . 1)) "MIN_VALUE" (((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:keyword "return") . 1)) "matchsticks" (((:keyword "new") . 1) ((:file "h:/leetcodeCoding/backTracking.java") . 1) (csharp-mode . 1) (nil . 1)) "initial" (((:symbol "nil") . 1) ((:keyword "for") . 1) ((:keyword "out") . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) (csharp-mode . 1) (nil . 1)) "maxIdx" (((:keyword "for") . 1) ((:keyword "if") . 1) ((:symbol "i") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:file "h:/leetcodeCoding/dpthree.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpsix.java") . 1)) "special" (((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "helperGetPermutations" (((:file "h:/leetcodeCoding/backTracking.java") . 1) (csharp-mode . 1) (nil . 1)) "isValid" (((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:file "h:/leetcodeCoding/competition_1030_1.java") . 1) ((:file "h:/leetcodeCoding/dpfive.java") . 1)) "getCosts" (((:file "h:/leetcodeCoding/backTracking.java") . 1) (csharp-mode . 1) (nil . 1)) "isWord" (((:keyword "this") . 1) ((:symbol "cur") . 1) ((:keyword "if") . 1) ((:keyword "public") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:file "h:/leetcodeCoding/StreamChecker.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1) ((:symbol "r") . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1)) "word" (((:file "h:/leetcodeCoding/Trie.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/WordDictionary.java") . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) ((:keyword "else") . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:file "h:/leetcodeCoding/grethreeedy.java") . 1) ((:file "h:/leetcodeCoding/dpone.java") . 1)) "prefix" (((:file "h:/leetcodeCoding/Trie.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "search" (((:file "h:/leetcodeCoding/Trie.java") . 1) ((:symbol "trie") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/WordDictionary.java") . 1) ((:symbol "tri") . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) ((:keyword "if") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1)) "board" (((:file "h:/leetcodeCoding/Trie.java") . 1) ((:file "h:/leetcodeCoding/trieProbs.java") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1)) "quantity" (((:keyword "if") . 1) ((:keyword "for") . 1) ((:symbol "z") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) (csharp-mode . 1) (nil . 1)) "traversalTree" (((:file "h:/leetcodeCoding/trieB.java") . 1) (csharp-mode . 1) (nil . 1)) "sumRange" (((:file "h:/leetcodeCoding/segmentTree.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) ((:symbol "bit") . 1) ((:keyword "while") . 1) ((:symbol "ftwo") . 1)) "containsKey" (((:symbol "next") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:symbol "m") . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) ((:file "h:/leetcodeCoding/dynasixmicProgramming.java") . 1) ((:symbol "jmp") . 1) ((:symbol "map") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:file "h:/leetcodeCoding/bittwoManipulation.java") . 1) ((:file "h:/leetcodeCoding/grathreeph.java") . 1)) "stickers" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:keyword "for") . 1)) "cnts" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "if") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1)) "amount" (((:keyword "if") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/Cashier.java") . 1)) "carryover" (((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "sumRangeFromTree" (((:keyword "return") . 1)) "expression" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "for") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/string.java") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/dpfour.java") . 1) ((:keyword "out") . 1)) "parseInt" (((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:symbol "Integer") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "for") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:keyword "out") . 1)) "toLowerCase" (((:file "h:/leetcodeCoding/backTracking.java") . 1) (csharp-mode . 1) (nil . 1)) "getSumWithPrefix" (((:file "h:/leetcodeCoding/Trie.java") . 1) (csharp-mode . 1) (nil . 1)) "delegate" (((:symbol "s") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1)) "startsWith" (((:file "h:/leetcodeCoding/Trie.java") . 1) ((:symbol "trie") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:symbol "t") . 1) ((:file "h:/leetcodeCoding/dpone.java") . 1)) "dictionary" (((:file "h:/leetcodeCoding/trieB.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "checkIfCanBreak" (((:file "h:/leetcodeCoding/greedy.java") . 1) (csharp-mode . 1) (nil . 1)) "targetFriend" (((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "numberToWords" (((:file "h:/leetcodeCoding/recursion.java") . 1) ((:keyword "if") . 1)) "servers" (((:file "h:/leetcodeCoding/heaptwo.java") . 1) (csharp-mode . 1) (nil . 1)) "helpCntMisplaced" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "isPowerOfTwo" (((:file "h:/leetcodeCoding/recursion.java") . 1) (csharp-mode . 1) (nil . 1)) "waitResidual" (((:file "h:/leetcodeCoding/heaptwo.java") . 1) (csharp-mode . 1) (nil . 1)) "floorEntry" (((:keyword "if") . 1)) "ceilingEntry" (((:keyword "if") . 1)) "ceilingKey" (((:file "h:/leetcodeCoding/MyCalendar.java") . 1) ((:keyword "out") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:symbol "map") . 1) ((:keyword "while") . 1)) "presses" (((:file "h:/leetcodeCoding/depthFirstSearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "coins" (((:keyword "new") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:keyword "if") . 1) ((:keyword "public") . 1)) "findThreeHelper" (((:file "h:/leetcodeCoding/Trie.java") . 1) (csharp-mode . 1) (nil . 1)) "getSearchRes" (((:file "h:/leetcodeCoding/binarySearch.java") . 1) (csharp-mode . 1) (nil . 1)) "TreeSet" (((:file "h:/leetcodeCoding/MyCalendar.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1)) "updateTree" (((:keyword "else") . 1)) "SegNode" (((:file "h:/leetcodeCoding/com/SegNode.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "insertIntoTreeNode" (((:keyword "return") . 1)) "findNumberOfLIS" (((:file "h:/leetcodeCoding/segmentTree.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "levelPrintTree" (((:keyword "public") . 1) ((:file "h:/leetcodeCoding/segmentTree.java") . 1)) "query" (((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 6) (nil . 6) ((:file "h:/leetcodeCoding/StreamChecker.java") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 5) ((:keyword "return") . 5)) "Double" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dpseven.java") . 1) (csharp-mode . 1) (nil . 1)) "dfsCountingOnes" (((:file "h:/leetcodeCoding/trieB.java") . 1) (csharp-mode . 1) (nil . 1)) "searchDiffByOneRecursive" (((:file "h:/leetcodeCoding/trieB.java") . 1) (csharp-mode . 1) (nil . 1)) "parent" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/TreeAncestor.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:keyword "for") . 1)) "char" (((:file "h:/leetcodeCoding/recursion.java") . 1) ((:keyword "if") . 1)) "setCharAt" (((:file "h:/leetcodeCoding/greedy.java") . 1) ((:symbol "res") . 1) (csharp-mode . 1) (nil . 1)) "toCharArray" (((:file "h:/leetcodeCoding/greedy.java") . 1) ((:keyword "while") . 1) (csharp-mode . 1) (nil . 1) ((:symbol "s") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:symbol "t") . 1)) "markIdentical" (((:keyword "private") . 1)) "parseAnd" (((:file "h:/leetcodeCoding/recursion.java") . 1) (csharp-mode . 1) (nil . 1)) "fillUpDupMap" (((:file "h:/leetcodeCoding/trieB.java") . 1) (csharp-mode . 1) (nil . 1)) "parseBoolExpr" (((:file "h:/leetcodeCoding/recursion.java") . 1) (csharp-mode . 1) (nil . 1)) "substring" (((:symbol "s") . 1) ((:symbol "t") . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "for") . 1) ((:keyword "return") . 1) ((:symbol "expression") . 1) ((:keyword "while") . 1) ((:keyword "if") . 1)) "WordFilter" (((:file "h:/leetcodeCoding/trieB.java") . 1) (csharp-mode . 1) (nil . 1)) "fstChar" (((:keyword "for") . 1)) "products" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/Cashier.java") . 1) (csharp-mode . 1) (nil . 1)) "getCntsLessThanOrEqualToK" (((:keyword "return") . 1) ((:symbol "t") . 1)) "searchWord" (((:keyword "for") . 1)) "next" (((:symbol "cur") . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "for") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 3) (nil . 3) ((:keyword "while") . 3) ((:file "h:/leetcodeCoding/dynasixmicProgramming.java") . 1) ((:keyword "continue") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/string.java") . 1) ((:keyword "else") . 1) ((:symbol "rand") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/codeforces/codeforcesComp.java") . 1) ((:file "h:/leetcodeCoding/StreamChecker.java") . 1) ((:symbol "r") . 1) ((:file "h:/leetcodeCoding/dpone.java") . 1) ((:symbol "p") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1) ((:file "h:/leetcodeCoding/mixed.java") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 2)) "isLetter" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:symbol "Character") . 1) (csharp-mode . 1) (nil . 1)) "third" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "isPanlindrome" (((:file "h:/leetcodeCoding/trieB.java") . 1) ((:symbol "t") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "SegTree" (((:keyword "public") . 1)) "rgraph" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "getAllValues" (((:file "h:/leetcodeCoding/Trie.java") . 1) (csharp-mode . 1) (nil . 1)) "getAllValuesRecursive" (((:keyword "for") . 1)) "switch" (((:file "h:/leetcodeCoding/recursion.java") . 1) (csharp-mode . 1) (nil . 1)) "traversal" (((:file "h:/leetcodeCoding/trieB.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1) ((:keyword "private") . 1)) "traversalTreeAndRemoveMarked" (((:keyword "private") . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "traversalTreeAndOutput" (((:file "h:/leetcodeCoding/trieB.java") . 1) (csharp-mode . 1) (nil . 1)) "getKthSmallestNumber" (((:file "h:/leetcodeCoding/trieB.java") . 1) (csharp-mode . 1) (nil . 1)) "decodeString" (((:file "h:/leetcodeCoding/recursion.java") . 1) (csharp-mode . 1) (nil . 1)) "countSubstrings" (((:file "h:/leetcodeCoding/trieB.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1)) "trees" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/distanceK.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "isValidBST" (((:keyword "return") . 1)) "neededApples" (((:file "h:/leetcodeCoding/binarySearch.java") . 1) (csharp-mode . 1) (nil . 1)) "findBall" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "color" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/grathreeph.java") . 1) ((:symbol "1") . 1) ((:keyword "new") . 1)) "Color" (((:keyword "new") . 1) ((:file "h:/leetcodeCoding/gratwoph.java") . 1) (csharp-mode . 1) (nil . 1)) "calculate" (((:file "h:/leetcodeCoding/recursion.java") . 1) (csharp-mode . 1) (nil . 1)) "helperSwap" (((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) (csharp-mode . 1) (nil . 1)) "parseOneChunk" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "return") . 1)) "mergeAnalyse" (((:keyword "return") . 1)) "rating" (((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "public") . 1) ((:keyword "if") . 1)) "rank" (((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) ((:keyword "while") . 1) (csharp-mode . 1) (nil . 1)) "lowBit" (((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) (csharp-mode . 1) (nil . 1)) "minC" (((:file "h:/leetcodeCoding/prefixSum.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "upper" (((:keyword "if") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/strthreeing.java") . 1) (csharp-mode . 1) (nil . 1)) "lower" (((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dynasixmicProgramming.java") . 1) ((:keyword "continue") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:file "h:/leetcodeCoding/prefixSum.java") . 1) ((:file "h:/leetcodeCoding/dpthree.java") . 1) ((:keyword "if") . 1)) "getSum" (((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:file "h:/leetcodeCoding/dpseven.java") . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1)) "update" (((:file "h:/leetcodeCoding/RangeModule.java") . 1)) "grayCode" (((:file "h:/leetcodeCoding/recursion.java") . 1) (csharp-mode . 1) (nil . 1)) "baseCosts" (((:keyword "public") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1)) "toppingCosts" (((:keyword "public") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1)) "insert" (((:file "h:/leetcodeCoding/trieC.java") . 1) (csharp-mode . 6) (nil . 6) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:symbol "s") . 1) ((:file "h:/leetcodeCoding/MKAverage.java") . 1) ((:keyword "if") . 4) ((:file "h:/leetcodeCoding/hdseven.java") . 5) ((:keyword "return") . 1) ((:keyword "else") . 1)) "findTheCloest" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) (csharp-mode . 1) (nil . 1)) "valueOf" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:symbol "String") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "return") . 1)) "getgcd" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) (csharp-mode . 1) (nil . 1)) "preCol" (((:keyword "else") . 1) ((:keyword "break") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "costs" (((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "public") . 1) ((:keyword "if") . 1) ((:symbol "nil") . 1) ((:keyword "for") . 1)) "mergeSortCount" (((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "false" (((:file "h:/leetcodeCoding/recursion.java") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) ((:file "h:/leetcodeCoding/dpone.java") . 1) ((:file "h:/leetcodeCoding/dpfour.java") . 1) ((:keyword "if") . 1)) "instructions" (((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) (csharp-mode . 1) (nil . 1)) "canPartitionKSubsets" (((:symbol "s") . 1) ((:keyword "new") . 1)) "binarySearchinMatrix" (((:keyword "new") . 1) ((:keyword "private") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) (csharp-mode . 1) (nil . 1)) "addRectange" (((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "cntB" (((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "cntA" (((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "stack" (((:keyword "out") . 1) ((:keyword "while") . 1) ((:keyword "if") . 1)) "word2" (((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpone.java") . 1)) "while" (((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) (csharp-mode . 2) (nil . 2) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/string.java") . 1) ((:file "h:/leetcodeCoding/heap.java") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1) ((:keyword "for") . 1)) "delRoots" (((:file "h:/leetcodeCoding/distanceK.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "puzzles" (((:file "h:/leetcodeCoding/trieC.java") . 1) (csharp-mode . 1) (nil . 1)) "equations" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/grathreeph.java") . 1)) "insGroup" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:keyword "else") . 1) (csharp-mode . 1) (nil . 1)) "numSubseq" (((:keyword "if") . 1)) "locMax" (((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "for") . 1) ((:keyword "else") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:keyword "break") . 1) ((:file "h:/leetcodeCoding/dpsix.java") . 1) ((:file "h:/leetcodeCoding/dpseven.java") . 1)) "insItem" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "maxC" (((:file "h:/leetcodeCoding/prefixSum.java") . 1) (csharp-mode . 1) (nil . 1)) "minR" (((:file "h:/leetcodeCoding/prefixSum.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "targetGrid" (((:keyword "public") . 1) ((:keyword "if") . 1)) "topSort" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "maxLength" (((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "secondLen" (((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "lowbit" (((:file "h:/leetcodeCoding/binaryIndexedTree.java") . 1) ((:keyword "while") . 1) (csharp-mode . 1) (nil . 1)) "maxSum" (((:keyword "return") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) (csharp-mode . 1) (nil . 1)) "minSum" (((:keyword "return") . 1)) "pairs" (((:keyword "public") . 1) ((:keyword "return") . 1) ((:keyword "out") . 1) ((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpone.java") . 1) ((:keyword "for") . 1)) "folder" (((:keyword "public") . 1) ((:keyword "for") . 1) ((:keyword "new") . 1)) "letter" ((csharp-mode . 1) (nil . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/StreamChecker.java") . 1) ((:keyword "public") . 1)) "factor" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/competition.java") . 1) ((:keyword "if") . 1)) "fstKey" (((:file "h:/leetcodeCoding/trieC.java") . 1) (csharp-mode . 1) (nil . 1)) "keyList" (((:file "h:/leetcodeCoding/trieC.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "newKey" (((:file "h:/leetcodeCoding/trieC.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "values" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:keyword "new") . 1)) "prices" (((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "new") . 1) ((:keyword "public") . 1) ((:keyword "class") . 1) ((:file "h:/leetcodeCoding/Cashier.java") . 1)) "matrixBlockSum" (((:file "h:/leetcodeCoding/prefixSum.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "maxSize" (((:file "h:/leetcodeCoding/gratwoph.java") . 1) ((:keyword "new") . 1) ((:keyword "while") . 1) ((:keyword "if") . 1) ((:keyword "for") . 1) ((:keyword "this") . 1)) "groupTopSort" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "bookings" (((:file "h:/leetcodeCoding/prefixSum.java") . 1) (csharp-mode . 1) (nil . 1)) "coeff" (((:keyword "private") . 1) ((:symbol "this") . 1) ((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "this") . 1) (csharp-mode . 1) (nil . 1)) "clips" (((:keyword "for") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "public") . 1) ((:keyword "while") . 1)) "binarySearchinSortedArray" (((:keyword "private") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) (csharp-mode . 1) (nil . 1)) "addOperators" (((:file "h:/leetcodeCoding/recursion.java") . 1) (csharp-mode . 1) (nil . 1)) "addOperatorsHelper" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) (csharp-mode . 1) (nil . 1)) "findBallDFS" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "blocked" (((:keyword "if") . 1)) "locMindiff" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) (csharp-mode . 1) (nil . 1)) "toUpperCase" (((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:symbol "Character") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "timestamp" (((:file "h:/leetcodeCoding/TimeMap.java") . 1) (csharp-mode . 1) (nil . 1)) "groupItem" (((:keyword "if") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "groupGraph" (((:keyword "else") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "itemGraph" (((:keyword "for") . 1)) "canMake" (((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) (csharp-mode . 1) (nil . 1)) "befGroupId" (((:keyword "else") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "curGroupId" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "leftoverId" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "isInfected" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "getLongestLength" (((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "NestedInteger" (((:keyword "new") . 1) ((:file "h:/leetcodeCoding/NestedIterator.java") . 1) ((:file "h:/leetcodeCoding/NestedInteger.java") . 1) (csharp-mode . 1) (nil . 1)) "containedBoxes" (((:keyword "for") . 1)) "deserialize" (((:file "h:/leetcodeCoding/NestedIterator.java") . 1) (csharp-mode . 1) (nil . 1)) "boxes" (((:keyword "public") . 1) ((:keyword "for") . 1) ((:keyword "out") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/stack.java") . 1)) "curIdx" (((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "getMaxSumWithSideLengthV" (((:keyword "if") . 1)) "factors" (((:symbol "this") . 1)) "jobs" (((:keyword "if") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dptwo.java") . 1)) "minimumTimeRequired" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) (csharp-mode . 1) (nil . 1)) "minSize" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1)) "minDiff" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:keyword "out") . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1)) "weights" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) (csharp-mode . 1) (nil . 1)) "binarySearchinArray" (((:keyword "return") . 1)) "days" (((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1)) "possible" (((:keyword "return") . 1) ((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) (csharp-mode . 1) (nil . 1)) "candies" (((:keyword "if") . 1)) "this" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) (csharp-mode . 1) (nil . 1)) "couldGetTarget" (((:file "h:/leetcodeCoding/binarySearch.java") . 1) (csharp-mode . 1) (nil . 1)) "maxProfit" (((:file "h:/leetcodeCoding/binarySearch.java") . 1) (csharp-mode . 1) (nil . 1)) "MountainArray" (((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:keyword "private") . 1) (csharp-mode . 1) (nil . 1)) "difficulty" (((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) (csharp-mode . 1) (nil . 1)) "routes" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "worker" (((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) (csharp-mode . 1) (nil . 1)) "MaxSeg" (((:keyword "public") . 1) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1)) "maxKy" (((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) (csharp-mode . 1) (nil . 1)) "chalk" (((:keyword "while") . 1)) "maxSlidingWindow" (((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "citations" (((:keyword "return") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/mixed.java") . 1)) "citationsable" (((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) (csharp-mode . 1) (nil . 1)) "numSubmat" (((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "heaters" (((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1) ((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1)) "houses" (((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:keyword "for") . 1)) "isSubsequence" (((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "isMatch" (((:keyword "return") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "removable" (((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "maxDiff" (((:keyword "for") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) (csharp-mode . 1) (nil . 1)) "maxVal" (((:symbol "v") . 1)) "sumDiff" (((:keyword "if") . 1)) "binarySearchHigh" (((:file "h:/leetcodeCoding/binarySearch.java") . 1) (csharp-mode . 1) (nil . 1)) "maxDistance" (((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1)) "recoverBackToOrder" (((:file "h:/leetcodeCoding/greedy.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "findKthNumber" (((:file "h:/leetcodeCoding/binarySearch.java") . 1) (csharp-mode . 1) (nil . 1)) "envelopes" (((:keyword "new") . 1) ((:keyword "for") . 1)) "initialBoxes" (((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "status" (((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "getMinLengthBef" (((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "packages" (((:keyword "public") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "boxed" (((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "rooms" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "last" (((:symbol "ts") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:keyword "if") . 3) (csharp-mode . 3) (nil . 3) ((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/competition_1030_1.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 2) ((:symbol "m") . 1)) "targetHash" (((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "left" (((:symbol "another") . 1) ((:file "h:/leetcodeCoding/RangeModule.java") . 1) (csharp-mode . 2) (nil . 2) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:keyword "while") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/MKAverage.java") . 1) ((:symbol "r") . 1) ((:file "h:/leetcodeCoding/mixed.java") . 1) ((:file "h:/leetcodeCoding/prefixSum.java") . 1) ((:file "h:/leetcodeCoding/dptwo.java") . 1) ((:file "h:/leetcodeCoding/dpfive.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/dpnine.java") . 1) ((:keyword "if") . 2) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) "another" (((:keyword "return") . 1)) "mountainArr" (((:keyword "public") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "Range" (((:keyword "while") . 1) ((:file "h:/leetcodeCoding/RangeModule.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) ((:keyword "new") . 1) ((:keyword "public") . 1)) "binarySearchTargetIncreasing" (((:keyword "return") . 1)) "obstacles" (((:keyword "if") . 1)) "findLongestIncreasingSequence" (((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "getmax" (((:keyword "for") . 1)) "collect" (((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:symbol "nil") . 1) (csharp-mode . 1) (nil . 1)) "lastday" (((:keyword "new") . 1) ((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "help" (((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "father" (((:file "h:/leetcodeCoding/TreeAncestor.java") . 1) (csharp-mode . 1) (nil . 1)) "preRow" (((:keyword "else") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "getMax" (((:file "h:/leetcodeCoding/segmentTree.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/competition.java") . 1) ((:symbol "ms") . 1) ((:file "h:/leetcodeCoding/dptwo.java") . 1)) "isLowerCase" (((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:symbol "Character") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "difference" (((:file "h:/leetcodeCoding/dynatwomicProgramming.java") . 1) ((:symbol "nil") . 1) (csharp-mode . 1) (nil . 1)) "findMax" (((:keyword "if") . 1)) "distinct" (((:file "h:/leetcodeCoding/trieC.java") . 1) ((:keyword "if") . 1)) "palindrome" (((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:keyword "while") . 1) (csharp-mode . 1) (nil . 1)) "minId" (((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "getLargest" (((:file "h:/leetcodeCoding/sort.java") . 1) (csharp-mode . 1) (nil . 1)) "modArr" (((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "allEven" (((:file "h:/leetcodeCoding/greedy.java") . 1) (csharp-mode . 1) (nil . 1)) "primeFactors" (((:keyword "if") . 1) ((:keyword "return") . 1)) "curBase" (((:file "h:/leetcodeCoding/recursion.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "rangeClosed" (((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:symbol "IntStream") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "intervals" (((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:keyword "new") . 2) ((:keyword "if") . 1) (csharp-mode . 5) (nil . 5) ((:keyword "public") . 2) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:keyword "out") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 4) ((:keyword "while") . 2)) "maxChunksToSorted" (((:file "h:/leetcodeCoding/greedy.java") . 1) (csharp-mode . 1) (nil . 1)) "helper2" (((:file "h:/leetcodeCoding/isSubPath.java") . 1) (csharp-mode . 1) (nil . 1)) "reverse" (((:file "h:/leetcodeCoding/trieC.java") . 1) ((:symbol "nil") . 3) ((:keyword "new") . 3) (csharp-mode . 3) (nil . 3) ((:file "h:/leetcodeCoding/string.java") . 1) ((:file "g:/leetcodeCoding/mtwoixed.java") . 2)) "recover" (((:file "h:/leetcodeCoding/depthFirstSearch.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "mines" (((:keyword "return") . 1)) "appendTwice" (((:file "h:/leetcodeCoding/greedy.java") . 1) (csharp-mode . 1) (nil . 1)) "dfsPoss" (((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "flip" (((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/string.java") . 1) ((:keyword "return") . 1)) "copyArray" (((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "newSum" (((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/competition.java") . 1) ((:keyword "continue") . 1)) "hasZero" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "isFinal" (((:keyword "if") . 1)) "dirs" (((:keyword "while") . 1) ((:symbol "nil") . 1) ((:keyword "return") . 1) ((:symbol "j") . 1) ((:symbol "pi") . 1) ((:symbol "pj") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:file "h:/leetcodeCoding/dptwo.java") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/dpnine.java") . 1)) "balls" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1)) "System" (((:keyword "out") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "new") . 1)) "order" (((:file "h:/leetcodeCoding/sort.java") . 1) (csharp-mode . 1) (nil . 1)) "equals" (((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:symbol "pre") . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/greedy.java") . 1) ((:symbol "nil") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/grathreeph.java") . 1) ((:file "h:/leetcodeCoding/twoPointers.java") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1)) "votes" (((:file "h:/leetcodeCoding/sort.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "heit" (((:file "h:/leetcodeCoding/TreeAncestor.java") . 1) (csharp-mode . 1) (nil . 1)) "Override" (((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "triplets" (((:keyword "for") . 1)) "indices" (((:file "h:/leetcodeCoding/sort.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "for") . 1)) "isMultiIsland" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/depthFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "maxChunksToSortedRecursive" (((:file "h:/leetcodeCoding/greedy.java") . 1) (csharp-mode . 1) (nil . 1)) "valid" (((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/competition.java") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1) ((:file "h:/leetcodeCoding/dpnine.java") . 1)) "maxCorresKey" (((:keyword "private") . 1)) "isolatedInfectedMax" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "getPermutations" (((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "rightsize" (((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "getNext" (((:file "h:/leetcodeCoding/greedy.java") . 1) (csharp-mode . 1) (nil . 1)) "updateIdx" (((:file "h:/leetcodeCoding/greedy.java") . 1) (csharp-mode . 1) (nil . 1)) "tmpA" (((:keyword "out") . 1)) "bfsUnblockable" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "freq" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) (csharp-mode . 1) (nil . 1)) "ancestor" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "numCnt" (((:keyword "if") . 1)) "LinkedList" (((:file "h:/leetcodeCoding/sort.java") . 1) (csharp-mode . 1) (nil . 1)) "maxProductPath" (((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "hasOne" (((:keyword "return") . 1) ((:file "h:/leetcodeCoding/depthFirstSearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1)) "rest" (((:file "h:/leetcodeCoding/greedy.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "minimax" (((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "rowSum" (((:keyword "for") . 1) ((:keyword "if") . 1)) "colSum" (((:keyword "for") . 1)) "memo" (((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "return") . 1)) "people" (((:keyword "for") . 1) ((:keyword "public") . 1) ((:keyword "if") . 1) ((:keyword "else") . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1)) "rods" (((:keyword "continue") . 1) ((:file "h:/leetcodeCoding/dynasixmicProgramming.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "arrayCopy" (((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "Stream" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:file "h:/leetcodeCoding/hdsix.java") . 1)) "keys" (((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "locMin" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "restaurants" (((:keyword "public") . 1)) "minDistance" (((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "hasKey" (((:file "h:/leetcodeCoding/breadFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "exist" (((:file "h:/leetcodeCoding/sort.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "import" (((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "cfirst" (((:file "h:/leetcodeCoding/trieB.java") . 1) (csharp-mode . 1) (nil . 1)) "forbidden" (((:keyword "if") . 1)) "getVal" (((:file "h:/leetcodeCoding/backTracking.java") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "tilingRectangle" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) (csharp-mode . 1) (nil . 1)) "isUpperCase" (((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:symbol "Character") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/string.java") . 1)) "width" (((:keyword "else") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "maxSide" (((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "presum" (((:keyword "for") . 1)) "minIdx" (((:keyword "if") . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "for") . 1) ((:keyword "base") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:keyword "continue") . 1) ((:file "h:/leetcodeCoding/dpfive.java") . 1)) "tmpCnt" (((:keyword "while") . 1)) "isPossibleIndex" (((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "canPlayerMove" (((:keyword "if") . 1)) "forest" (((:keyword "public") . 1) ((:keyword "if") . 1)) "countDigitOne" (((:file "h:/leetcodeCoding/trieB.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "makeZigZag" (((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "getDp" (((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "leftsize" (((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "lmax" (((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "sessionTime" (((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "else") . 1)) "costBalls" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "minDifficulty" (((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) ((:symbol "s") . 1) ((:keyword "out") . 1) (csharp-mode . 1) (nil . 1)) "BitSet" (((:keyword "new") . 1)) "curVal" (((:symbol "preVal") . 1) ((:symbol "curRes") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:keyword "else") . 1) (csharp-mode . 1) (nil . 1)) "endsum" (((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "curStr" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) (csharp-mode . 1) (nil . 1)) "checkPerfectSquare" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) (csharp-mode . 1) (nil . 1)) "maxPresum" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "finish" (((:keyword "return") . 1)) "maxEndsum" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "subsum" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "else") . 1) (csharp-mode . 1) (nil . 1)) "maxSubsum" (((:keyword "else") . 1) ((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "sold" (((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "idx1" (((:file "h:/leetcodeCoding/sort.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "numWanted" (((:file "h:/leetcodeCoding/greedy.java") . 1) (csharp-mode . 1) (nil . 1)) "largestSubmatrix" (((:file "h:/leetcodeCoding/greedy.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "resRight" (((:keyword "if") . 1)) "resLeft" (((:keyword "if") . 1)) "errorCnt" (((:file "h:/leetcodeCoding/greedy.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "interface" (((:file "h:/leetcodeCoding/sort.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1)) "tops" (((:file "h:/leetcodeCoding/gretwoedy.java") . 1) (csharp-mode . 1) (nil . 1)) "bottoms" (((:file "h:/leetcodeCoding/gretwoedy.java") . 1) (csharp-mode . 1) (nil . 1)) "minOperations" (((:file "h:/leetcodeCoding/gretwoedy.java") . 1) (csharp-mode . 1) (nil . 1)) "startValue" (((:keyword "public") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "while") . 1)) "cherryPickupRecursion" (((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "minNumberOperationsRecursive" (((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "return") . 1)) "range" (((:file "h:/leetcodeCoding/greedy.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:keyword "if") . 1) ((:keyword "new") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dpone.java") . 1)) "curRg" (((:file "h:/leetcodeCoding/sort.java") . 1) ((:keyword "while") . 1) (csharp-mode . 1) (nil . 1)) "ranges" (((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:keyword "for") . 1)) "multipliers" (((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "new") . 1) ((:symbol "nil") . 1) ((:keyword "for") . 1)) "cntOne" (((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpone.java") . 1) ((:file "h:/leetcodeCoding/dpfive.java") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dpsix.java") . 1) ((:symbol "j") . 1) ((:keyword "for") . 1)) "inside" (((:keyword "if") . 1)) "minSeg" (((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dptwo.java") . 1) ((:file "h:/leetcodeCoding/dpfive.java") . 1)) "getMin" (((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1)) "primes" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) ((:keyword "new") . 1)) "prime" (((:keyword "while") . 1)) "cost" (((:keyword "for") . 1) ((:symbol "j") . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:keyword "else") . 1) ((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/dpfour.java") . 1) ((:keyword "if") . 1)) "cherryPickup" (((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "cherryPickupRecursionBackward" (((:keyword "return") . 1)) "cherryPickupRecursionForward" (((:file "h:/leetcodeCoding/dynathreemicProgramming.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "minNumberOperations" (((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "subRes" (((:file "h:/leetcodeCoding/backtwoTracking.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "jobDifficulty" (((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dptwo.java") . 1) ((:keyword "for") . 1)) "curRes" (((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/recursion.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "buckets" (((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "satisfies" (((:keyword "while") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "cuboids" (((:keyword "for") . 1) ((:keyword "out") . 1)) "startTime" (((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpfour.java") . 1) ((:keyword "for") . 1)) "gloMax" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "hold" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dpfour.java") . 1) (csharp-mode . 1) (nil . 1)) "getPrimes" (((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "notPrime" (((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "factorMap" (((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "stoneValue" (((:keyword "public") . 1)) "getMindist" (((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "maxChoosableInteger" (((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "if") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/dpfour.java") . 1)) "longestPalindromeSubseq" (((:keyword "for") . 1)) "bits" (((:file "h:/leetcodeCoding/dynasixmicProgramming.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "maxSeg" (((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "masks" (((:file "h:/leetcodeCoding/dynafourmicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "slices" (((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "remainTime" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "getIdx" (((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1) (csharp-mode . 1) (nil . 1)) "idx2" (((:file "h:/leetcodeCoding/sort.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "memorizedSearch" (((:keyword "for") . 1)) "maxPos" (((:file "h:/leetcodeCoding/dynasixmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "nextVisit" (((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) ((:file "h:/leetcodeCoding/dpfour.java") . 1)) "rollMax" (((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "curLen" (((:file "h:/leetcodeCoding/dynasixmicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "continue") . 1)) "locations" (((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "globalMax" (((:keyword "for") . 1)) "peekFirst" (((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:symbol "q") . 1) ((:keyword "while") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:symbol "min") . 1)) "cuts" (((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "desiredTotal" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpfour.java") . 1)) "state" (((:keyword "if") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/dpfive.java") . 1)) "query_row" (((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "query_glass" (((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "noNeed" (((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "base" (((:file "h:/leetcodeCoding/dynafivemicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "containsAll" (((:keyword "if") . 1)) "msorted" (((:file "h:/leetcodeCoding/bitMask.java") . 1) (csharp-mode . 1) (nil . 1)) "dist" (((:keyword "return") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpnine.java") . 1)) "newMask" (((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "largest" (((:file "h:/leetcodeCoding/bitMask.java") . 1) (csharp-mode . 1) (nil . 1)) "requests" (((:keyword "if") . 1)) "minSteps" (((:keyword "if") . 1)) "apppear" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dynasixmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "maxStudents" (((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "maxidx" (((:keyword "out") . 1)) "retainAll" (((:file "h:/leetcodeCoding/dynasixmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "rides" (((:keyword "for") . 1) ((:keyword "new") . 1) ((:keyword "while") . 1)) "distanceThreshold" (((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "bitCount" (((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:symbol "Integer") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/bittwoManipulation.java") . 1)) "arrLen" (((:file "h:/leetcodeCoding/dynasixmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dpseven.java") . 1) ((:keyword "new") . 1)) "steps" (((:keyword "new") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynasixmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/trieB.java") . 1) ((:keyword "if") . 1)) "curSum" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynasixmicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpseven.java") . 1)) "cache" (((:keyword "if") . 1)) "larger" (((:file "h:/leetcodeCoding/dynasixmicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "startRow" (((:keyword "return") . 1)) "startColumn" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "mark" (((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "diffX" (((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "total" (((:file "h:/leetcodeCoding/dynasixmicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1)) "heightMap" (((:keyword "public") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1)) "maxNumInWindo" (((:keyword "if") . 1)) "teamSize" (((:keyword "if") . 1)) "catJump" (((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "getHashCode" (((:symbol "node") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1) ((:keyword "private") . 1) (csharp-mode . 1) (nil . 1)) "tokens" (((:keyword "public") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) (csharp-mode . 1) (nil . 1)) "power" (((:keyword "if") . 1)) "digit" (((:keyword "return") . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:keyword "break") . 1) (csharp-mode . 1) (nil . 1)) "ages" (((:keyword "if") . 1)) "curEnd" (((:keyword "while") . 1) ((:keyword "if") . 1)) "maxEnd" (((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "distance" (((:keyword "if") . 1)) "child" (((:symbol "p") . 1)) "seats" (((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "for") . 1)) "hashPre" (((:keyword "while") . 1)) "changed" (((:symbol "j") . 1) ((:keyword "for") . 1) ((:keyword "if") . 1)) "leftCost" (((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "catWin" (((:keyword "if") . 1)) "mouseTurn" (((:symbol "nil") . 1) ((:keyword "if") . 1)) "point" (((:file "h:/leetcodeCoding/DetectSquares.java") . 1) ((:keyword "add") . 1) (csharp-mode . 1) (nil . 1)) "voyage" (((:file "h:/leetcodeCoding/tree.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "floor" (((:file "h:/leetcodeCoding/dynasevenmicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "idxSec" (((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "stations" (((:keyword "public") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/dpnine.java") . 1)) "backTracking" (((:keyword "for") . 1) ((:keyword "new") . 1) ((:keyword "private") . 1) ((:file "h:/leetcodeCoding/dpone.java") . 1) (csharp-mode . 1) (nil . 1)) "hats" (((:file "h:/leetcodeCoding/bitMask.java") . 1) (csharp-mode . 1) (nil . 1)) "startFuel" (((:keyword "if") . 1)) "minDays" (((:keyword "return") . 1)) "goal" (((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) ((:keyword "out") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "if") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1)) "indexOf" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:symbol "vo") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpthree.java") . 1) ((:symbol "t") . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1) ((:symbol "cur") . 1)) "sessions" (((:keyword "if") . 1)) "mouseWin" (((:keyword "else") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "mouseJump" (((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "numSet" (((:file "h:/leetcodeCoding/unionFind.java") . 1) (csharp-mode . 1) (nil . 1)) "leftCnt" (((:keyword "break") . 1) ((:keyword "else") . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:keyword "out") . 1)) "preOrder" (((:file "h:/leetcodeCoding/tree.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "keyCnt" (((:keyword "if") . 1) ((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) (csharp-mode . 1) (nil . 1)) "properties" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/sort.java") . 1) (csharp-mode . 1) (nil . 3) ((:file "c:/Users/blue_/AppData/Roaming/.emacs.d/lisp/init-text.el") . 2) ((:keyword "setq") . 2) (emacs-lisp-mode . 2)) "checkOut" (((:file "h:/leetcodeCoding/UndergroundSystem.java") . 1) ((:symbol "s") . 1) (csharp-mode . 1) (nil . 1)) "insertRecursive" (((:file "h:/leetcodeCoding/MKAverage.java") . 1) (csharp-mode . 1) (nil . 1)) "removeOccurrences" (((:keyword "return") . 1)) "batchSize" (((:keyword "new") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:keyword "continue") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "this") . 1)) "maskCol" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "groups" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1)) "getReverse" (((:file "h:/leetcodeCoding/string.java") . 1) (csharp-mode . 1) (nil . 1)) "backtracking" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "continue") . 1)) "fact" (((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "lastGroup" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:keyword "continue") . 1) (csharp-mode . 1) (nil . 1)) "leftOverGroups" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) (csharp-mode . 1) (nil . 1)) "winSum" (((:keyword "if") . 1)) "destination" (((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1)) "bitmaskDp" (((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "isKey" (((:symbol "p") . 1) ((:file "h:/leetcodeCoding/trieC.java") . 1) (csharp-mode . 1) (nil . 1)) "aXorSum" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) (csharp-mode . 1) (nil . 1)) "bXorSum" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) (csharp-mode . 1) (nil . 1)) "forward" (((:file "h:/leetcodeCoding/trieC.java") . 1) (csharp-mode . 1) (nil . 1)) "getDist" (((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "kthGrammar" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "hashSuf" (((:keyword "while") . 1)) "isPalindrome" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/twoPointers.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/mixed.java") . 1)) "minimumIncompatibility" (((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "cardPoints" (((:keyword "public") . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) (csharp-mode . 1) (nil . 1)) "minCost" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:keyword "else") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) "allowed" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/bittwoManipulation.java") . 1)) "MinSeg" (((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/segmentTree.java") . 1) ((:file "h:/leetcodeCoding/dptwo.java") . 1) ((:file "h:/leetcodeCoding/dpfive.java") . 1)) "diffCnt" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) (csharp-mode . 1) (nil . 1)) "idxAtS" (((:file "h:/leetcodeCoding/trieC.java") . 1) ((:keyword "break") . 1) (csharp-mode . 1) (nil . 1)) "disS" (((:keyword "return") . 1)) "hashCode" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/bitManipulation.java") . 1)) "occurs" (((:keyword "for") . 1)) "findOccurs" (((:file "h:/leetcodeCoding/trieC.java") . 1) (csharp-mode . 1) (nil . 1)) "req_skills" (((:file "h:/leetcodeCoding/bitMask.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpseven.java") . 1)) "maxLen" (((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dpnine.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "part" (((:keyword "return") . 1) ((:file "h:/leetcodeCoding/string.java") . 1) (csharp-mode . 1) (nil . 1)) "bottom" (((:keyword "for") . 1) ((:keyword "out") . 1)) "preIdx" (((:keyword "for") . 1)) "makeLargestSpecial" (((:file "h:/leetcodeCoding/string.java") . 1) (csharp-mode . 1) (nil . 1)) "removeVal" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) (csharp-mode . 1) (nil . 1)) "isVal" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:symbol "cur") . 1) (csharp-mode . 1) (nil . 1)) "qnodes" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) (csharp-mode . 1) (nil . 1)) "maxPts" (((:symbol "k") . 1) ((:keyword "if") . 1) ((:keyword "else") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "return") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dpthree.java") . 1)) "computeIfAbsent" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/FreqStack.java") . 1)) "queVal" (((:keyword "for") . 1)) "maxVowels" (((:file "h:/leetcodeCoding/slidingWindow.java") . 1) (csharp-mode . 1) (nil . 1)) "books" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpfour.java") . 1)) "getGoodFiles" (((:file "h:/leetcodeCoding/trieC.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "preRes" (((:keyword "while") . 1)) "rowDif" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) (csharp-mode . 1) (nil . 1)) "colDif" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) (csharp-mode . 1) (nil . 1)) "setNums" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) (csharp-mode . 1) (nil . 1)) "maxHeight" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/segmentTree.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1)) "rolls" (((:file "h:/leetcodeCoding/competition.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "childIdx" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) (csharp-mode . 1) (nil . 1)) "curm" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) (csharp-mode . 1) (nil . 1)) "pattern" (((:file "h:/leetcodeCoding/string.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/mixed.java") . 1) ((:keyword "public") . 1)) "firstPlayer" (((:keyword "for") . 1) ((:keyword "return") . 1)) "stationName" (((:file "h:/leetcodeCoding/UndergroundSystem.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "tickets" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/grathreeph.java") . 1)) "endStation" (((:file "h:/leetcodeCoding/UndergroundSystem.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "longestSubstring" (((:file "h:/leetcodeCoding/slidingWindow.java") . 1) (csharp-mode . 1) (nil . 1)) "startStation" (((:file "h:/leetcodeCoding/UndergroundSystem.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "generateLayerMask" (((:file "h:/leetcodeCoding/bitManipulation.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "glbMin" (((:keyword "for") . 1)) "scoreOfParentheses" (((:file "h:/leetcodeCoding/string.java") . 1) (csharp-mode . 1) (nil . 1)) "toBinaryString" (((:file "h:/leetcodeCoding/string.java") . 1) ((:symbol "Integer") . 1)) "allCases" (((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "fstOne" (((:keyword "if") . 1)) "casesWithEqualDistinctBalls" (((:keyword "return") . 1)) "fstTwo" (((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "getEncodedLength" (((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "grumpy" (((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "customers" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) (csharp-mode . 1) (nil . 1)) "numDupDigitsAtMostN" (((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "height" (((:file "h:/leetcodeCoding/dynaeightmicProgramming.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "idxMap" (((:keyword "if") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/RandomizedCollection.java") . 1) (csharp-mode . 1) (nil . 1)) "valIdx" (((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "FreqStack" (((:file "h:/leetcodeCoding/FreqStack.java") . 1) (csharp-mode . 1) (nil . 1)) "maxFreq" (((:file "h:/leetcodeCoding/slidingWindow.java") . 1) (csharp-mode . 1) (nil . 1)) "neighbours" (((:file "h:/leetcodeCoding/grathreeph.java") . 1) (csharp-mode . 1) (nil . 1)) "getToMedianDist" (((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "repetition" (((:file "h:/leetcodeCoding/competition.java") . 1) ((:keyword "while") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1)) "stoneGameIX" (((:file "h:/leetcodeCoding/competition.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "retainsAll" (((:keyword "if") . 1)) "pizza" (((:keyword "public") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "secondPlayer" (((:keyword "for") . 1) ((:keyword "if") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "inCnt" (((:keyword "if") . 1) ((:keyword "else") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "dominoes" (((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "maxRight" (((:keyword "while") . 1) ((:keyword "return") . 1)) "extrovertsCount" (((:file "h:/leetcodeCoding/bitMask.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "new") . 1) ((:keyword "return") . 1)) "binarySearchMin" ((nil . 1)) "locH" (((:keyword "new") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) (csharp-mode . 1) (nil . 1)) "secOne" (((:keyword "if") . 1) ((:keyword "out") . 1) ((:file "h:/leetcodeCoding/dpone.java") . 1) (csharp-mode . 1) (nil . 1)) "secTwo" (((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dpone.java") . 1)) "pushIdxSet" (((:keyword "new") . 1) ((:keyword "if") . 1)) "overlap" (((:file "h:/leetcodeCoding/bitMask.java") . 1) (csharp-mode . 1) (nil . 1)) "sameVal" (((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "locCnt" (((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:keyword "out") . 1) (csharp-mode . 1) (nil . 1)) "nextCourses" (((:file "h:/leetcodeCoding/bitMask.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/competition.java") . 1)) "maxLetters" (((:keyword "if") . 1)) "exCnt" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "else") . 1) ((:keyword "return") . 1)) "maxCost" (((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "charCnt" (((:keyword "for") . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "strs" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/twoPointers.java") . 1) ((:keyword "for") . 1)) "maxRepOpt1" (((:file "h:/leetcodeCoding/slidingWindow.java") . 1) (csharp-mode . 1) (nil . 1)) "binary" (((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "if") . 1)) "uniqueCnt" (((:keyword "if") . 1)) "change" (((:file "h:/leetcodeCoding/competition.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1)) "notEq" (((:file "h:/leetcodeCoding/grathreeph.java") . 1) (csharp-mode . 1) (nil . 1)) "offerLast" (((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:symbol "q") . 1) (csharp-mode . 1) (nil . 1) ((:symbol "min") . 1)) "peekLast" (((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:symbol "q") . 1) ((:keyword "while") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpseven.java") . 1) ((:symbol "s") . 1) ((:file "h:/leetcodeCoding/stack.java") . 1) ((:keyword "if") . 1)) "PriorityQueue" (((:keyword "for") . 1) ((:keyword "private") . 1) ((:file "h:/leetcodeCoding/grathreeph.java") . 1) (csharp-mode . 1) (nil . 1)) "getOrPut" (((:file "h:/leetcodeCoding/heaptwo.java") . 1) (csharp-mode . 1) (nil . 1)) "tmpCost" (((:keyword "if") . 1)) "best" (((:file "h:/leetcodeCoding/bitMask.java") . 1) (csharp-mode . 1) (nil . 1)) "tmpPath" (((:keyword "continue") . 1)) "lastVal" (((:file "h:/leetcodeCoding/FreqStack.java") . 1) (csharp-mode . 1) (nil . 1)) "maxCnt" (((:keyword "if") . 1) ((:keyword "out") . 1) ((:file "h:/leetcodeCoding/hashtable.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpseven.java") . 1) ((:file "h:/leetcodeCoding/mixed.java") . 1)) "richer" (((:file "h:/leetcodeCoding/grathreeph.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "quiet" (((:file "h:/leetcodeCoding/grathreeph.java") . 1) (csharp-mode . 1) (nil . 1)) "minQuiet" (((:file "h:/leetcodeCoding/grathreeph.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "countOfAtoms" (((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:file "h:/leetcodeCoding/string.java") . 1) (csharp-mode . 1) (nil . 1)) "letters" (((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "nextNodes" (((:file "h:/leetcodeCoding/grathreeph.java") . 1) (csharp-mode . 1) (nil . 1)) "totalSum" (((:file "h:/leetcodeCoding/competition.java") . 1) ((:keyword "else") . 1) (csharp-mode . 1) (nil . 1)) "leftKSum" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "eleCnt" (((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:symbol "2") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "firstList" (((:file "h:/leetcodeCoding/twoPointers.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "shiftByVal" (((:keyword "for") . 1)) "delete" (((:file "h:/leetcodeCoding/MKAverage.java") . 1) (csharp-mode . 1) (nil . 1)) "preZoo" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "endOne" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "endZoo" (((:keyword "else") . 1) ((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "cntMap" (((:keyword "for") . 1)) "available" (((:file "h:/leetcodeCoding/bitMask.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "for") . 1) ((:keyword "public") . 1)) "rightSum" (((:keyword "for") . 1) ((:keyword "else") . 1) ((:file "h:/leetcodeCoding/competition.java") . 1) (csharp-mode . 1) (nil . 1)) "inQueue" (((:file "h:/leetcodeCoding/grathreeph.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "leftSum" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/competition.java") . 1) ((:keyword "continue") . 1) (csharp-mode . 1) (nil . 1)) "increasing" (((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:keyword "new") . 1)) "FenWick" (((:keyword "new") . 1)) "apples" (((:keyword "new") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) (csharp-mode . 1) (nil . 1)) "chars" (((:keyword "for") . 1) ((:keyword "if") . 1) ((:keyword "out") . 1) ((:file "h:/leetcodeCoding/gretwoedy.java") . 1) (csharp-mode . 1) (nil . 1)) "shortestPalindrome" (((:file "h:/leetcodeCoding/string.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "popIdxSet" (((:keyword "if") . 1)) "numSubmatrixSumTarget" (((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "hasZoo" (((:file "h:/leetcodeCoding/dynaninemicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "minProfit" (((:keyword "private") . 1) ((:keyword "new") . 1) ((:keyword "for") . 1)) "leastOpsExpressTarget" (((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "return") . 1)) "minVal" (((:keyword "private") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dptwo.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "if") . 1) ((:keyword "out") . 1)) "inOrderTraverse" (((:file "h:/leetcodeCoding/MKAverage.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "inOrder" (((:keyword "return") . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/MKAverage.java") . 1) (csharp-mode . 1) (nil . 1)) "travelTime" (((:keyword "if") . 1)) "minM" (((:file "h:/leetcodeCoding/MKAverage.java") . 1) (csharp-mode . 1) (nil . 1)) "buildings" (((:keyword "if") . 1) ((:keyword "new") . 1)) "100001" (((:file "h:/leetcodeCoding/MKAverage.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/prefixSum.java") . 1)) "cnt1" (((:file "h:/leetcodeCoding/MKAverage.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "speed" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "efficiency" (((:keyword "for") . 1)) "offer" (((:file "h:/leetcodeCoding/MKAverage.java") . 1) ((:keyword "else") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:keyword "if") . 1) ((:keyword "new") . 1) ((:symbol "q") . 2) (csharp-mode . 2) (nil . 2) ((:file "h:/leetcodeCoding/dpfour.java") . 1) ((:file "h:/leetcodeCoding/dpsix.java") . 1) ((:file "h:/leetcodeCoding/dpseven.java") . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1) ((:file "h:/leetcodeCoding/dpnine.java") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1) ((:keyword "for") . 1)) "visited" (((:keyword "private") . 1) ((:file "h:/leetcodeCoding/grathreeph.java") . 1) (csharp-mode . 1) (nil . 1)) "arrival" (((:keyword "new") . 1)) "sortedCnt" (((:file "h:/leetcodeCoding/grathreeph.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "binarySearchLow" (((:file "h:/leetcodeCoding/binarySearch.java") . 1) (csharp-mode . 1) (nil . 1)) "pushIdx" (((:file "h:/leetcodeCoding/DinnerPlates.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "stacks" (((:symbol "nil") . 1) ((:keyword "while") . 1) ((:keyword "if") . 1)) "union" (((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:symbol "uf") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1) ((:symbol "dsu") . 1)) "regions" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "inOrderTraverseRecursive" (((:keyword "return") . 1)) "level" (((:file "h:/leetcodeCoding/competition.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1)) "calculateMKAverage" (((:file "h:/leetcodeCoding/MKAverage.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "mink" (((:keyword "while") . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/MKAverage.java") . 1) (csharp-mode . 1) (nil . 1)) "maxKVal" (((:keyword "while") . 1) ((:keyword "else") . 1)) "sentence" (((:file "h:/leetcodeCoding/competition.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "kSmallest" (((:keyword "return") . 1)) "exhausted" (((:keyword "if") . 1)) "blacklist" (((:file "h:/leetcodeCoding/strtwoing.java") . 1) (csharp-mode . 1) (nil . 1)) "totDigit" (((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:keyword "break") . 1) (csharp-mode . 1) (nil . 1)) "solution" (((:file "h:/leetcodeCoding/codeforces/codeforcesComp.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/strthreeing.java") . 1) ((:keyword "return") . 1)) "popIdx" (((:file "h:/leetcodeCoding/DinnerPlates.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "rootI" (((:file "h:/leetcodeCoding/unionFind.java") . 1) (csharp-mode . 1) (nil . 1)) "getSums" (((:file "h:/leetcodeCoding/gretwoedy.java") . 1) (csharp-mode . 1) (nil . 1)) "locDif" (((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "Stack" (((:file "h:/leetcodeCoding/DinnerPlates.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "deliciousness" (((:keyword "for") . 1)) "leftMinIdx" (((:keyword "if") . 1)) "rightMinIdx" (((:keyword "if") . 1) ((:keyword "while") . 1)) "maxScore" (((:keyword "while") . 1)) "nright" (((:keyword "while") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "nleft" (((:keyword "while") . 1) ((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "maxF" (((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "maxDif" (((:file "h:/leetcodeCoding/binarySearch.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "delta" (((:keyword "if") . 1) ((:keyword "for") . 1)) "cntb" (((:file "h:/leetcodeCoding/competition.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "return") . 1)) "cnta" (((:file "h:/leetcodeCoding/competition.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "isPos" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "decodeAtIndex" (((:keyword "return") . 1)) "fruits" (((:keyword "if") . 1)) "litInRegion" (((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "movie" (((:keyword "public") . 1)) "profits" (((:file "h:/leetcodeCoding/heaptwo.java") . 1) (csharp-mode . 1) (nil . 1)) "isFull" (((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "minHeight" (((:keyword "if") . 1)) "adjacentPairs" (((:file "h:/leetcodeCoding/hashtable.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "store" (((:keyword "return") . 1)) "visiting" (((:file "h:/leetcodeCoding/grathreeph.java") . 1) (csharp-mode . 1) (nil . 1)) "topologicalSort" (((:file "h:/leetcodeCoding/grathreeph.java") . 1) (csharp-mode . 1) (nil . 1)) "maxWeight" (((:file "h:/leetcodeCoding/stack.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "while") . 1) ((:keyword "if") . 1)) "unionAround" (((:file "h:/leetcodeCoding/unionFind.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "lastIdxSet" (((:file "h:/leetcodeCoding/RandomizedCollection.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "region" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "uninfected" (((:keyword "break") . 1) ((:keyword "if") . 1)) "mostDangerous" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "wallsRequired" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "infected" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "profit" (((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "private") . 1)) "getLargesetTimeNeeded" (((:keyword "if") . 1)) "extra" (((:keyword "return") . 1)) "removeLast" (((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:symbol "q") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "hashB" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "mulmod" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) (csharp-mode . 1) (nil . 1)) "newHash" (((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "parsesur" (((:file "h:/leetcodeCoding/cmp.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "discnt" (((:file "h:/leetcodeCoding/Cashier.java") . 1) (csharp-mode . 1) (nil . 1)) "FindSumPairs" (((:file "h:/leetcodeCoding/FindSumPairs.java") . 1) (csharp-mode . 1) (nil . 1)) "tests" (((:file "h:/leetcodeCoding/codeforces/mat.java") . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/codeforces/one.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "for") . 1)) "curCnts" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1) (csharp-mode . 1) (nil . 1)) "hours" (((:keyword "for") . 1)) "getLast" (((:keyword "if") . 1)) "customfunction" (((:file "h:/leetcodeCoding/binarySearch.java") . 1) (csharp-mode . 1) (nil . 1)) "minJump" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/twoPointers.java") . 1)) "lowerTwo" (((:file "h:/leetcodeCoding/binarySearch.java") . 1) (csharp-mode . 1) (nil . 1)) "idCheck" (((:symbol "nil") . 1) ((:keyword "if") . 1)) "countOrders" (((:keyword "return") . 1)) "spots" (((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "random" (((:keyword "new") . 1)) "iterator" ((csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:symbol "nil") . 1) ((:keyword "if") . 1)) "idxToBeRemoved" (((:file "h:/leetcodeCoding/RandomizedCollection.java") . 1) (csharp-mode . 1) (nil . 1)) "popped" (((:keyword "while") . 1)) "rented" (((:keyword "public") . 1)) "courses" (((:symbol "now") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "blockBase" (((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "click" (((:keyword "public") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "locked" (((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "cntv" (((:keyword "for") . 1)) "master" (((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "curCnt" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1)) "bucket" (((:file "h:/leetcodeCoding/binarySearchinSortedArray.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "machines" (((:keyword "public") . 1)) "rightDisCnt" (((:file "h:/leetcodeCoding/dpone.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "minInteger" (((:file "h:/leetcodeCoding/gretwoedy.java") . 1) (csharp-mode . 1) (nil . 1)) "leftMaxEndTime" (((:file "h:/leetcodeCoding/cmp.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "getString" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1) (csharp-mode . 1) (nil . 1)) "capacityY" (((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "maxJump" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/twoPointers.java") . 1) (csharp-mode . 1) (nil . 1)) "keyTime" (((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "keyName" (((:keyword "for") . 1)) "curWit" (((:keyword "while") . 1)) "scores" (((:file "h:/leetcodeCoding/dpthree.java") . 1) (csharp-mode . 1) (nil . 1)) "winState" (((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "temperatures" (((:file "h:/leetcodeCoding/stack.java") . 1) ((:keyword "while") . 1) (csharp-mode . 1) (nil . 1)) "heaptwo" (((:file "h:/leetcodeCoding/heaptwo.java") . 1) (csharp-mode . 1) (nil . 1)) "transactions" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1) (csharp-mode . 1) (nil . 1)) "matches" (((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:symbol "nil") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "parents" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/competition.java") . 1) (csharp-mode . 1) (nil . 1)) "done" (((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "rungs" (((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "colsum" (((:file "h:/leetcodeCoding/gretwoedy.java") . 1) (csharp-mode . 1) (nil . 1)) "wordlist" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/strtwoing.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "while") . 1) ((:keyword "public") . 1) ((:keyword "new") . 1)) "hasNext" (((:symbol "it") . 1)) "milestones" (((:keyword "for") . 1)) "getMap" (((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "removed" (((:file "h:/leetcodeCoding/gretwoedy.java") . 1) ((:keyword "if") . 3) (csharp-mode . 3) (nil . 3) ((:file "h:/leetcodeCoding/hdseven.java") . 2) ((:symbol "nil") . 1)) "asteroids" (((:keyword "while") . 1) ((:keyword "if") . 1)) "asteroidCollision" (((:file "h:/leetcodeCoding/stack.java") . 1) (csharp-mode . 1) (nil . 1)) "oneMore" (((:file "h:/leetcodeCoding/stack.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "removeKdigits" (((:file "h:/leetcodeCoding/stack.java") . 1) (csharp-mode . 1) (nil . 1)) "cnttmp" (((:keyword "return") . 1)) "longUrl" (((:file "h:/leetcodeCoding/strtwoing.java") . 1) (csharp-mode . 1) (nil . 1)) "Neither" (((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "followeeId" (((:keyword "new") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) (csharp-mode . 1) (nil . 1)) "addAll" (((:file "h:/leetcodeCoding/string.java") . 1) ((:symbol "res") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:symbol "vis") . 1) ((:file "h:/leetcodeCoding/dpthree.java") . 1) ((:symbol "ss") . 1) ((:keyword "out") . 1) ((:symbol "ans") . 1)) "followerId" (((:keyword "public") . 1)) "currExpression" (((:keyword "if") . 1)) "cars" (((:keyword "while") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "generateCombinations" (((:file "h:/leetcodeCoding/competition_1030_1.java") . 1) (csharp-mode . 1) (nil . 1)) "comp" (((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "getCandidates" (((:file "h:/leetcodeCoding/strtwoing.java") . 1) (csharp-mode . 1) (nil . 1)) "isAnyAncestorsLocked" (((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "strtwoing" (((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "getAllPerm" (((:file "h:/leetcodeCoding/dpthree.java") . 1) (csharp-mode . 1) (nil . 1)) "oriIt" (((:file "h:/leetcodeCoding/stack.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "encoding" (((:keyword "if") . 1) ((:keyword "this") . 1)) "getGCD" (((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/array.java") . 1)) "replaceAll" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:symbol "s") . 1) (csharp-mode . 1) (nil . 1)) "capacityX" (((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "combineToLong" (((:file "h:/leetcodeCoding/strtwoing.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "location" (((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "generateAllSur" (((:file "h:/leetcodeCoding/dptwo.java") . 1) (csharp-mode . 1) (nil . 1)) "longestPalindrome" (((:file "h:/leetcodeCoding/mixed.java") . 1) (csharp-mode . 1) (nil . 1)) "hasOdd" (((:file "h:/leetcodeCoding/mixed.java") . 1) (csharp-mode . 1) (nil . 1)) "topIdx" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/stack.java") . 1) (csharp-mode . 1) (nil . 1)) "input" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1)) "pushed" (((:file "h:/leetcodeCoding/stack.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "curArr" (((:file "h:/leetcodeCoding/sort.java") . 1) (csharp-mode . 1) (nil . 1)) "maxOnLeftKey" (((:file "h:/leetcodeCoding/cmp.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "maxSeenRight" (((:file "h:/leetcodeCoding/cmp.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "platesBetweenCandles" (((:file "h:/leetcodeCoding/cmp.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "maxTwoEvents" (((:file "h:/leetcodeCoding/cmp.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "positions" (((:keyword "public") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/competition_1030_1.java") . 1) (csharp-mode . 1) (nil . 1)) "pieces" (((:file "h:/leetcodeCoding/cmp.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "return") . 1) ((:keyword "for") . 1)) "eventVal" (((:keyword "if") . 1)) "event" (((:keyword "event") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 2) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteViewModel.kt") . 1) ((:keyword "is") . 1) (kotlin-mode . 1)) "getAllSums" (((:file "h:/leetcodeCoding/dpone.java") . 1) (csharp-mode . 1) (nil . 1)) "leftMax" (((:file "h:/leetcodeCoding/cmp.java") . 1) (csharp-mode . 1) (nil . 1) ((:keyword "for") . 1)) "userId" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/heaptwo.java") . 1) (csharp-mode . 1) (nil . 1)) "tweetId" (((:keyword "new") . 1)) "braceExpansionIIHelper" (((:file "h:/leetcodeCoding/string.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "dryIdx" (((:keyword "for") . 1) ((:keyword "if") . 1)) "compare" (((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1)) "friends" (((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "levCnt" (((:keyword "continue") . 1)) "maxBoxes" (((:file "h:/leetcodeCoding/stack.java") . 1) (csharp-mode . 1) (nil . 1)) "quality" (((:file "h:/leetcodeCoding/breadtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "split" (((:symbol "nil") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1) ((:symbol "tmp") . 1) ((:keyword "in") . 1)) "10001" (((:file "h:/leetcodeCoding/dpone.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "oddIdx" (((:keyword "for") . 1) ((:keyword "if") . 1)) "nextLine" (((:file "h:/leetcodeCoding/codeforces/mat.java") . 1) ((:symbol "sc") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/codeforces/one.java") . 1) ((:symbol "in") . 1) ((:keyword "in") . 1) ((:file "h:/leetcodeCoding/codeforces/five.java") . 1) ((:file "h:/leetcodeCoding/codeforces/three.java") . 1) ((:file "h:/leetcodeCoding/codeforces/six.java") . 1)) "isScramble" (((:keyword "if") . 1)) "leftMaxSeen" (((:file "h:/leetcodeCoding/cmp.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "curMax" (((:file "h:/leetcodeCoding/dptwo.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1) ((:keyword "if") . 1)) "probs" (((:keyword "new") . 1)) "nextMove" (((:file "h:/leetcodeCoding/competition_1030_1.java") . 1) (csharp-mode . 1) (nil . 1)) "segments" (((:keyword "public") . 1)) "B_DIRS" (((:file "h:/leetcodeCoding/competition_1030_1.java") . 1) (csharp-mode . 1) (nil . 1)) "ListNode" (((:keyword "new") . 1) ((:keyword "public") . 1) ((:keyword "private") . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) (csharp-mode . 1) (nil . 1)) "cntZoo" (((:file "h:/leetcodeCoding/dpone.java") . 1) (csharp-mode . 1) (nil . 1)) "isSquare" (((:keyword "if") . 1)) "maxzigZag" (((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dpone.java") . 1) ((:keyword "else") . 1) (csharp-mode . -7) (nil . -7) ((:keyword "if") . 1)) "newDp" (((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "diffWaysToCompute" (((:file "h:/leetcodeCoding/dpthree.java") . 1) (csharp-mode . 1) (nil . 1)) "entityParser" (((:file "h:/leetcodeCoding/strtwoing.java") . 1) (csharp-mode . 1) (nil . 1)) "maxReach" (((:keyword "for") . 1)) "minTwo" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dpone.java") . 1) (csharp-mode . 1) (nil . 1)) "minDif" (((:file "h:/leetcodeCoding/dpfive.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpseven.java") . 1) ((:keyword "for") . 1)) "workers" (((:file "h:/leetcodeCoding/cmp.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "pollLast" (((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:keyword "while") . 1) (csharp-mode . 2) (nil . 2) ((:keyword "if") . 2) ((:symbol "s") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) "removeT" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "parts" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "atMostK" (((:file "h:/leetcodeCoding/slidingWindow.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "getLevel" (((:file "h:/leetcodeCoding/depthtwoFirstSearch.java") . 1) (csharp-mode . 1) (nil . 1)) "ransomNote" (((:file "h:/leetcodeCoding/mixed.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "magazine" (((:file "h:/leetcodeCoding/mixed.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "difList" (((:file "h:/leetcodeCoding/dynatenmicProgramming.java") . 1) (csharp-mode . 1) (nil . 1)) "isPalindrom" (((:file "h:/leetcodeCoding/twoPointers.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "maxMove" (((:file "h:/leetcodeCoding/dpthree.java") . 1) (csharp-mode . 1) (nil . 1)) "password" (((:keyword "while") . 1)) "updateMatrix" (((:file "h:/leetcodeCoding/dpthree.java") . 1)) "sums" (((:file "h:/leetcodeCoding/dpone.java") . 1) (csharp-mode . 1) (nil . 1)) "list" (((:file "h:/leetcodeCoding/dptwo.java") . 1) (csharp-mode . 1) (nil . 1)) "calSteps" (((:file "h:/leetcodeCoding/trieB.java") . 1) (csharp-mode . 1) (nil . 1)) "minMap" (((:file "h:/leetcodeCoding/dpfour.java") . 1) (csharp-mode . 1) (nil . 1)) "lastMove" (((:keyword "if") . 1)) "R_DIRS" (((:file "h:/leetcodeCoding/competition_1030_1.java") . 1) (csharp-mode . 1) (nil . 1)) "Q_DIRS" (((:file "h:/leetcodeCoding/competition_1030_1.java") . 1) (csharp-mode . 1) (nil . 1)) "leftDisCnt" (((:file "h:/leetcodeCoding/dpone.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "validLen" (((:file "h:/leetcodeCoding/dpsix.java") . 1) (csharp-mode . 1) (nil . 1)) "getLength" (((:file "h:/leetcodeCoding/cmp.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "rless" (((:file "h:/leetcodeCoding/dpten.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "getLeafNodes" (((:file "h:/leetcodeCoding/dpthree.java") . 1) (csharp-mode . 1) (nil . 1)) "isSameTree" (((:keyword "return") . 1)) "word1" (((:file "h:/leetcodeCoding/dpone.java") . 1) (csharp-mode . 1) (nil . 1)) "maskPII" (((:file "h:/leetcodeCoding/strtwoing.java") . 1) (csharp-mode . 1) (nil . 1)) "findLUSlength" (((:file "h:/leetcodeCoding/twoPointers.java") . 1) (csharp-mode . 1) (nil . 1)) "inblock" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/strthreeing.java") . 1) (csharp-mode . 1) (nil . 1)) "wordDict" (((:keyword "for") . 1)) "reader" (((:file "h:/leetcodeCoding/codeforces/one.java") . 1) ((:keyword "while") . 1) (csharp-mode . 1) (nil . 1)) "cloneTree" (((:keyword "new") . 1)) "preMin" (((:keyword "private") . 1) ((:file "h:/leetcodeCoding/cmp.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "minOne" (((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dpone.java") . 1) (csharp-mode . 1) (nil . 1)) "minimizeTheDifference" (((:file "h:/leetcodeCoding/dpseven.java") . 1) (csharp-mode . 1) (nil . 1)) "getBitsCnt" (((:file "h:/leetcodeCoding/bittwoManipulation.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "printList" (((:file "h:/leetcodeCoding/cmp.java") . 1) (csharp-mode . 1) (nil . 1)) "invalid" (((:symbol "nil") . 1)) "same" (((:file "h:/leetcodeCoding/dpten.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "minSumOfLengths" (((:file "h:/leetcodeCoding/dptwo.java") . 1) (csharp-mode . 1) (nil . 1)) "need" (((:file "h:/leetcodeCoding/dpfour.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "checkValidString" (((:file "h:/leetcodeCoding/dpfour.java") . 1) (csharp-mode . 1) (nil . 1)) "cntZero" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dpsix.java") . 1) ((:symbol "i") . 1) (csharp-mode . 1) (nil . 1)) "minCostToOOO" (((:keyword "if") . 1)) "hasA" (((:file "h:/leetcodeCoding/strthreeing.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "再想想这个题" (((:file "h:/leetcodeCoding/dpone.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "leaves" (((:file "h:/leetcodeCoding/dpthree.java") . 1) (csharp-mode . 1) (nil . 1)) "tmpAns" (((:keyword "new") . 1) ((:file "h:/leetcodeCoding/dpthree.java") . 1) (csharp-mode . 1) (nil . 1)) "getLongestPalinSubsequence" (((:file "h:/leetcodeCoding/dpthree.java") . 1) ((:keyword "else") . 1) (csharp-mode . 1) (nil . 1)) "newS" (((:keyword "else") . 1) ((:file "h:/leetcodeCoding/dpnine.java") . 1) (csharp-mode . 1) (nil . 1)) "maxLeft" (((:file "h:/leetcodeCoding/dptwo.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "getCompoent" (((:file "h:/leetcodeCoding/cmp.java") . 1) ((:symbol "uf") . 1) ((:keyword "else") . 1) (csharp-mode . 1) (nil . 1)) "mask" (((:file "h:/leetcodeCoding/dpten.java") . 1)) "longestDecomposition" (((:file "h:/leetcodeCoding/dpfour.java") . 1) (csharp-mode . 1) (nil . 1)) "minCostToOne" (((:file "h:/leetcodeCoding/dpfour.java") . 1) (csharp-mode . 1) (nil . 1)) "sumLeft" (((:file "h:/leetcodeCoding/dpeight.java") . 1) (csharp-mode . 1) (nil . 1)) "traverse" (((:file "h:/leetcodeCoding/dpfive.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dpnine.java") . 1)) "candi" (((:file "h:/leetcodeCoding/dpeight.java") . 1) (csharp-mode . 1) (nil . 1)) "cntCorner" (((:file "h:/leetcodeCoding/mixed.java") . 1) (csharp-mode . 1) (nil . 1)) "odIdx" (((:file "h:/leetcodeCoding/dpnine.java") . 1) (csharp-mode . 1) (nil . 1)) "getGcd" (((:file "h:/leetcodeCoding/dpseven.java") . 1) (csharp-mode . 1) (nil . 1) ((:file "h:/leetcodeCoding/strthreeing.java") . 1)) "dummy" (((:file "h:/leetcodeCoding/cmp.java") . 1) (csharp-mode . 1) (nil . 1)) "abov" (((:keyword "else") . 1) ((:keyword "if") . 1)) "canMouseWin" (((:keyword "else") . 1) ((:file "h:/leetcodeCoding/dpseven.java") . 1) (csharp-mode . 1) (nil . 1)) "maxTurbulenceSize" (((:file "h:/leetcodeCoding/dpfive.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "generateAllPossCandiAns" (((:keyword "if") . 1)) "getPermutation" (((:keyword "if") . 1)) "leftDelta" (((:file "h:/leetcodeCoding/dpseven.java") . 1) (csharp-mode . 1) (nil . 1)) "equT" (((:keyword "from") . 1)) "hand" (((:file "h:/leetcodeCoding/dpten.java") . 1) (csharp-mode . 1) (nil . 1)) "bottomUpTraverse" (((:file "h:/leetcodeCoding/dpeight.java") . 1) (csharp-mode . 1) (nil . 1)) "maxList" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dpsix.java") . 1) (csharp-mode . 1) (nil . 1)) "isBst" (((:keyword "if") . 1)) "pushing" (((:file "h:/leetcodeCoding/dpseven.java") . 1) (csharp-mode . 1) (nil . 1)) "smallestGreaterVal" (((:file "h:/leetcodeCoding/dpseven.java") . 1) (csharp-mode . 1) (nil . 1)) "unite" (((:file "h:/leetcodeCoding/cmp.java") . 1) ((:symbol "uf") . 1) (csharp-mode . 1) (nil . 1)) "oneIdx" (((:keyword "if") . 1)) "rightDelta" (((:file "h:/leetcodeCoding/dpseven.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "ceiling" (((:keyword "return") . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "sumRight" (((:file "h:/leetcodeCoding/dpeight.java") . 1) (csharp-mode . 1) (nil . 1)) "leftOver" (((:file "h:/leetcodeCoding/dpten.java") . 1) (csharp-mode . 1) (nil . 1)) "minLen" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/dpeight.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "canCompose" (((:keyword "if") . 1)) "curDp" (((:keyword "new") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "s_prime" (((:file "h:/leetcodeCoding/dpeight.java") . 1) (csharp-mode . 1) (nil . 1)) "getPrimeFactors" (((:file "h:/leetcodeCoding/dpten.java") . 1) (csharp-mode . 1) (nil . 1)) "firstKey" (((:file "h:/leetcodeCoding/hdseven.java") . 2) ((:symbol "m") . 2) ((:keyword "if") . 2) (csharp-mode . 2) (nil . 2)) "recursion" (((:file "h:/leetcodeCoding/dpeight.java") . 1) (csharp-mode . 1) (nil . 1)) "postOrderDfs" (((:file "h:/leetcodeCoding/dpten.java") . 1) (csharp-mode . 1) (nil . 1)) "preMask" (((:keyword "out") . 1) ((:keyword "return") . 1)) "introvertsCount" (((:keyword "new") . 1) ((:keyword "return") . 1)) "xorNum" (((:file "h:/leetcodeCoding/dpten.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "mSurface" (((:file "g:/andrprac/BasicVideoRecorder/app/src/main/java/com/me/vd/MedioRecorderCamera1Activity.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "mytask" (((:file "h:/andrprac/MultiThread_learning/app/src/main/java/com/example/carson_ho/handler_learning/MainActivity.java") . 1) (csharp-mode . 1) (nil . 1)) "weiSum" (((:keyword "while") . 1)) "onItemClick" (((:file "h:/andrprac/listview/app/src/main/java/com/me/listview/MainActivity.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "enIdx" (((:file "h:/leetcodeCoding/dpnine.java") . 1) (csharp-mode . 1) (nil . 1)) "gameState" ((kotlin-mode . 1) (nil . 1)) "preOrderDfs" (((:file "h:/leetcodeCoding/dpten.java") . 1) (csharp-mode . 1) (nil . 1)) "preMax" (((:file "h:/leetcodeCoding/cmp.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "added" (((:file "h:/leetcodeCoding/cmp.java") . 1) ((:keyword "if") . 1) (csharp-mode . 3) (nil . 3) ((:file "h:/leetcodeCoding/mixed.java") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 2) ((:symbol "nil") . 2) ((:keyword "for") . 2)) "gethash" (((:keyword "if") . 1)) "setBit" (((:file "h:/leetcodeCoding/dpten.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "addon" (((:keyword "if") . 1) ((:file "h:/leetcodeCoding/dpten.java") . 1) ((:keyword "else") . 1) (csharp-mode . 1) (nil . 1)) "PercentView" ((nil . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/PercentView.java") . 1) ((:keyword "super") . 1) (csharp-mode . 1)) "MainApp" (((:file "g:/andrprac/opengl/app/src/main/AndroidManifest.xml") . 1) ((:symbol "name=") . 1) (nxml-mode . 1) (nil . 1)) "flag" (((:file "h:/leetcodeCoding/strthreeing.java") . 1) (csharp-mode . 1) (nil . 1)) "denominator" (((:keyword "return") . 1)) "difCnt" (((:file "h:/leetcodeCoding/dpten.java") . 1) (csharp-mode . 1) (nil . 1)) "stodJava" (((:file "h:/leetcodeCoding/strthreeing.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "snakeBody" ((kotlin-mode . 1) (nil . 1)) "looping" (((:file "h:/leetcodeCoding/cmp.java") . 1) (csharp-mode . 1) (nil . 1)) "meet" (((:file "h:/leetcodeCoding/cmp.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "hash_left" (((:file "h:/leetcodeCoding/dpten.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "oddVal" (((:keyword "for") . 1)) "nextFood" (((:file "h:/andrprac/snake2/app/src/main/java/com/me/snake/viewModel/SnakeViewModel.kt") . 1) (kotlin-mode . 1) (nil . 1)) "nextInt" (((:file "h:/leetcodeCoding/strthreeing.java") . 1) ((:symbol "in") . 1) ((:keyword "in") . 1) (csharp-mode . 1) (nil . 1)) "getBit" (((:file "h:/leetcodeCoding/dpten.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "meetZero" (((:file "h:/leetcodeCoding/strthreeing.java") . 1) (csharp-mode . 1) (nil . 1)) "minSwaps" (((:file "h:/leetcodeCoding/cmp.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "nodes" (((:file "h:/leetcodeCoding/grathreeph.java") . 1) (csharp-mode . 1) (nil . 1)) "allPar" (((:keyword "if") . 1)) "cntR" (((:file "h:/leetcodeCoding/twoPointers.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "maxDoubles" (((:file "g:/leetcodeCoding/cmp.java") . 6) ((:keyword "if") . 2) (csharp-mode . 6) (nil . 6) ((:keyword "while") . 1) ((:keyword "out") . 1) ((:keyword "return") . 2)) "startPos" (((:file "h:/leetcodeCoding/mixed.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "maxRunTime" (((:file "g:/leetcodeCoding/cmp.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "gcdNum" (((:keyword "else") . 1) ((:file "h:/leetcodeCoding/array.java") . 1) (csharp-mode . 1) (nil . 1)) "curBanR" (((:file "h:/leetcodeCoding/strthreeing.java") . 1) (csharp-mode . 1) (nil . 1)) "superPow" (((:keyword "return") . 1)) "LinearLayout" (((:file "h:/andrprac/RealTimeEval/app/src/main/res/layout/activity_main.xml") . 1) ((:symbol "widget") . 1) (nxml-mode . 2) (nil . 2) ((:file "g:/andrprac/opengl/app/src/main/res/layout/activity_main.xml") . 1)) "mContext" (((:file "h:/andrprac/MultiThread_learning/app/src/main/java/com/example/carson_ho/handler_learning/MainActivity.java") . 1) (csharp-mode . 1) (nil . 1)) "movesToStamp" (((:file "h:/leetcodeCoding/hdsix.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "pollFirst" (((:file "h:/leetcodeCoding/hdseven.java") . 2) ((:symbol "m") . 1) ((:keyword "if") . 1) (csharp-mode . 2) (nil . 2) ((:symbol "nil") . 1) ((:keyword "else") . 1)) "lastj" (((:file "h:/leetcodeCoding/dpten.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "maxBox" (((:file "h:/leetcodeCoding/dpten.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "generalprac" (((:symbol "me") . 1) (nxml-mode . 1) (nil . 1)) "custom_title" (((:file "h:/andrprac/generalPrac/app/src/main/java/com/me/generalprac/MainActivity.java") . 1) ((:keyword "super") . 1) (csharp-mode . 1)) "class" (((:file "h:/andrprac/tmp.cpp") . 1) (c++-mode . 1)) "constructor" (((:file "h:/andrprac/snake2/app/src/main/java/com/me/snake/model/Pos.kt") . 1) (kotlin-mode . 1) (nil . 1)) "AppConfig" ((kotlin-mode . 1) (nil . 1)) "GAME_COLUMN_COUNT" (((:file "h:/andrprac/snake2/app/src/main/java/com/me/snake/model/Pos.kt") . 1) ((:symbol "AppConfig") . 1) ((:keyword "fun") . 1) (kotlin-mode . 1) (nil . 1)) "setIJ" (((:file "h:/andrprac/snake2/app/src/main/java/com/me/snake/model/Pos.kt") . 1) ((:keyword "fun") . 1) (kotlin-mode . 1) (nil . 1)) "Entry" (((:symbol "Map") . 1) ((:keyword "out") . 1)) "viewModel" (((:keyword "class") . 1) ((:keyword "this") . 1) ((:file "h:/andrprac/snake2/app/src/main/java/com/me/snake/MainActivity.kt") . 1) (kotlin-mode . 1) (nil . 1)) "onImageFile" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainContent.kt") . 1) ((:keyword "else") . 1) (kotlin-mode . 1) (nil . 1)) "MutableListOf<Pos>" (((:file "h:/andrprac/snake2/app/src/main/java/com/me/snake/viewModel/SnakeViewModel.kt") . 1) ((:keyword "var") . 1) (kotlin-mode . 1) (nil . 1)) "SnakeViewModel" (((:keyword "import") . 1) (kotlin-mode . 1) (nil . 1)) "autoFil" (((:file "h:/leetcodeCoding/cmp.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "attrs" (((:file "h:/andrprac/snake2/app/src/main/java/com/me/snake/view/GameView.kt") . 1) ((:keyword "class") . 1) (kotlin-mode . 1) (nil . 4) ((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/MyView.java") . 3) ((:keyword "for") . 2) (csharp-mode . 3) ((:symbol "R") . 1) ((:keyword "this") . 1)) "MediaPlayerSurfaceStubActivity" (((:file "g:/andrprac/MediaPlayerSurface/app/src/main/java/me/crossle/demo/surfacetexture/MediaPlayerSurfaceStubActivity.java") . 1) ((:keyword "static") . 1) (csharp-mode . 1) (nil . 1)) "override" (((:file "h:/andrprac/snake2/app/src/main/java/com/me/snake/view/GameView.kt") . 1) (kotlin-mode . 2) ((:file "h:/andrprac/MultiThread_learning/app/src/main/java/com/example/carson_ho/handler_learning/MainActivity.java") . 1) (csharp-mode . 2) (nil . 3) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.java") . 1) ((:keyword "var") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1) ((:keyword "val") . 1)) "canvas" (((:file "h:/andrprac/snake2/app/src/main/java/com/me/snake/view/GameView.kt") . 1) ((:keyword "super") . 1) (kotlin-mode . 1) (nil . 1)) "kruskal" (((:keyword "if") . 1)) "EnteredContent" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteViewModel.kt") . 1) ((:keyword "is") . 1) (kotlin-mode . 1) (nil . 1)) "findset" (((:file "h:/leetcodeCoding/cmp.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "minimumBoxes" (((:file "h:/leetcodeCoding/hdseven.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "observe" (((:file "h:/andrprac/snake2/app/src/main/java/com/me/snake/MainActivity.kt") . 1) ((:keyword "it") . 1) (kotlin-mode . 1) (nil . 1)) "GameState" ((kotlin-mode . 1) (nil . 1)) "GAMEOVER" (((:symbol "GameState") . 1) (kotlin-mode . 1) (nil . 1)) "binding" (((:file "h:/andrprac/ktl/app/src/main/java/com/me/ktl/MainActivity.kt") . 1) ((:file "h:/andrprac/SamplePaging/app/src/main/java/com/qingmei2/samplepaging/ui/MainActivity.kt") . 1)) "activity" (((:file "h:/andrprac/FragmentDemo/app/src/main/java/com/example/fragmentdemo/fragment/RightFragment.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1)) "CusTreeMap" (((:file "h:/leetcodeCoding/hdseven.java") . 4) ((:keyword "public") . 1) (csharp-mode . 4) (nil . 4) ((:keyword "new") . 3)) "minWeiGlo" (((:keyword "if") . 1)) "hdseven" (((:file "h:/leetcodeCoding/hdseven.java") . 3) ((:keyword "public") . 3) (csharp-mode . 3) (nil . 3)) "Object" (((:file "h:/leetcodeCoding/hdseven.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "postValue" (((:file "h:/andrprac/snake2/app/src/main/java/com/me/snake/viewModel/SnakeViewModel.kt") . 1) (kotlin-mode . 1) (nil . 1)) "databinding" (((:symbol "samplepaging") . 1) ((:keyword "import") . 1)) "isPrime" (((:file "h:/leetcodeCoding/codeforces/three.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "minK" (((:file "h:/leetcodeCoding/hdseven.java") . 2) ((:keyword "if") . 1) (csharp-mode . 2) (nil . 2) ((:keyword "break") . 1)) "getMinCostOfMST" (((:keyword "if") . 1)) "mPaintLine" (((:file "h:/andrprac/snake2/app/src/main/java/com/me/snake/view/SnakeView.kt") . 1) (kotlin-mode . 1) (nil . 1)) "invalidate" (((:file "h:/andrprac/snake2/app/src/main/java/com/me/snake/MainActivity.kt") . 1) (kotlin-mode . 1) (nil . 1)) "personKotlin" (((:file "c:/Users/blue_/AppData/Roaming/Google/AndroidStudio2020.3/scratches/scratch_2.kts") . 1) (kotlin-mode . 1) (nil . 1)) "validArrangement" (((:file "h:/leetcodeCoding/hdeight.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "lifecycle" (((:file "h:/andrprac/ktl/app/src/main/java/com/me/ktl/MainActivity.kt") . 1) (kotlin-mode . 1) (nil . 1)) "getMask" (((:keyword "for") . 1) ((:keyword "if") . 1)) "subsub" (((:file "h:/leetcodeCoding/strthreeing.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "onDestroy" (((:file "h:/andrprac/MultiThread_learning/app/src/main/java/com/example/carson_ho/handler_learning/MainActivity.java") . 1) ((:keyword "super") . 2) (csharp-mode . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1) ((:symbol "super") . 1) (kotlin-mode . 2) (nil . 2) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainActivity.kt") . 1) ((:keyword "fun") . 1)) "size" (((:file "h:/leetcodeCoding/hdeight.java") . 1) ((:symbol "next") . 1) ((:keyword "while") . 1) (csharp-mode . 1) (nil . 1)) "ActivityMainBinding" (((:file "h:/andrprac/SamplePaging/app/src/main/java/com/qingmei2/samplepaging/ui/MainActivity.kt") . 1) ((:symbol "databinding") . 1) ((:keyword "import") . 1) (kotlin-mode . 1) (nil . 1)) "maximalPathQuality" (((:file "h:/leetcodeCoding/hdeight.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "ActivityBasicUsageBinding" (((:file "h:/andrprac/SamplePaging/app/src/main/java/com/qingmei2/samplepaging/ui/basic/BasicUsageActivity.kt") . 1) (kotlin-mode . 1) (nil . 1)) "ActivityHeaderProxyBinding" (((:file "h:/andrprac/SamplePaging/app/src/main/java/com/qingmei2/samplepaging/ui/header_proxy/HeaderProxyActivity.kt") . 1) (kotlin-mode . 1) (nil . 1)) "ActivityHeaderSimpleBinding" (((:file "h:/andrprac/SamplePaging/app/src/main/java/com/qingmei2/samplepaging/ui/header_simple/HeaderSimpleActivity.kt") . 1) (kotlin-mode . 1) (nil . 1)) "Node" (((:keyword "add") . 1)) "MainActivity" (((:file "h:/andrprac/listview/app/src/main/java/com/me/listview/MainActivity.java") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainActivity.kt") . 1) ((:keyword "val") . 2) (kotlin-mode . 2) (nil . 2) ((:file "g:/andrprac/PlayAndroid/app/src/main/java/com/zj/play/main/MainActivity.kt") . 1)) "getAppKey" (((:file "g:/andrprac/ndk/app/src/main/java/com/me/ndk/MainActivity.java") . 1) ((:symbol "NativeHelper") . 1) ((:keyword "super") . 1) (csharp-mode . 1) (nil . 1)) "connectTCPServer" (((:file "h:/andrprac/socket/app/src/main/java/com/me/socket/TCPClientActivity.java") . 1) (csharp-mode . 1) (nil . 1)) "processNameString" (((:file "h:/andrprac/android-progress/app/src/main/java/com/example/liuwangshu/myprogress/MyApplication.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "break" (((:keyword "if") . 1)) "MyService" ((csharp-mode . 1) (nil . 1)) "savedInstanceBundle" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 2) ((:keyword "fun") . 1) (kotlin-mode . 2) (nil . 2) ((:keyword "super") . 1)) "zoos" (((:keyword "for") . 1) ((:keyword "out") . 1)) "release" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/drawer/IDrawer.kt") . 1) ((:keyword "fun") . 1) (kotlin-mode . 1) (nil . 1)) "Sender" (((:file "c:/Users/blue_/AppData/Roaming/Google/AndroidStudio2020.3/scratches/scratch_1.java") . 1) (csharp-mode . 1) (nil . 1)) "inBlock" (((:file "h:/leetcodeCoding/strthreeing.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "gl_surface" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "recyclerview" (((:symbol "me") . 1) (nxml-mode . 1) (nil . 1)) "FragmentDemo" (((:keyword "private") . 1) (csharp-mode . 1) (nil . 1)) "lifeCycleTest2" (((:file "h:/andrprac/FragmentDemo/app/src/main/java/com/example/fragmentdemo/activity/LifeCycleActivity.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "videoW" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/drawer/IDrawer.kt") . 1) ((:keyword "fun") . 1) (kotlin-mode . 1) (nil . 1)) "GLSurfaceView" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/elg/SimpleRender.kt") . 2) ((:keyword "package") . 1) (kotlin-mode . 4) (nil . 4) ((:keyword "fun") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/TriangleActivity.kt") . 2) ((:keyword "var") . 1) ((:keyword "super") . 1)) "jniRender" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/TriangleActivity.kt") . 2) ((:keyword "this") . 2) (kotlin-mode . 2) (nil . 2)) "curBanD" (((:keyword "if") . 1)) "CONTEXT" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainActivity.kt") . 1) ((:keyword "super") . 1) (kotlin-mode . 1) (nil . 1)) "onProgressUpdate" (((:file "h:/andrprac/MultiThread_learning/app/src/main/java/com/example/carson_ho/handler_learning/MainActivity.java") . 1) ((:keyword "protected") . 1) (csharp-mode . 1) (nil . 1)) "preStr" (((:file "h:/leetcodeCoding/mtwoixed.java") . 1) (csharp-mode . 1) (nil . 1)) "VideoEditActivity" (((:file "g:/andrprac/VideoEdit/app/src/main/java/com/ringdroid/activity/VideoEditActivity.java") . 1) ((:keyword "private") . 1) (csharp-mode . 1) (nil . 1)) "recenter-last-op" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/notes/NotesViewModel.kt") . 1) ((:keyword "is") . 1) (kotlin-mode . 1) (nil . 1)) "CustomScrollView" (((:file "h:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/CustomScrollView.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1)) "multi-isearch-buffer-list" (((:file "g:/andrprac/jv/readme.org") . 1) (org-mode . 1) (nil . 1)) "stringBuilder" (((:file "g:/andrprac/jv2/app/src/main/java/com/me/jv/repository/HttpCallTest.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "parseHtml" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/html/parseHtml.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 2) (nil . 2) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 1) ((:keyword "else") . 1)) "getCollisionTimes" (((:file "h:/leetcodeCoding/hdeight.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "minInterval" (((:file "h:/leetcodeCoding/hdeight.java") . 2) ((:symbol "s") . 2) ((:keyword "new") . 2) (csharp-mode . 2) (nil . 2)) "befAft" (((:file "h:/leetcodeCoding/cmp.java") . 1) (csharp-mode . 1) (nil . 1)) "divideString" (((:file "g:/leetcodeCoding/cmp.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "mostPoints" (((:file "g:/leetcodeCoding/cmp.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "RectActivity" (((:file "g:/andrprac/ndk/app/src/main/AndroidManifest.xml") . 1) ((:symbol "name=") . 2) (nxml-mode . 2) (nil . 2) ((:file "g:/andrprac/opengl/app/src/main/AndroidManifest.xml") . 1)) "canConvertString" (((:file "h:/leetcodeCoding/mixed.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "clickNDKDrawTriangle" (((:file "g:/andrprac/opengl/app/src/main/res/layout/activity_main.xml") . 1) ((:symbol "onClick=") . 1) (nxml-mode . 1) (nil . 1)) "progress" (((:file "h:/andrprac/MultiThread_learning/app/src/main/java/com/example/carson_ho/handler_learning/MainActivity.java") . 1) ((:keyword "protected") . 1) (csharp-mode . 1) (nil . 1)) "RenderJni" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/RenderJni.kt") . 1) ((:keyword "class") . 1) (kotlin-mode . 3) (nil . 3) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/TriangleActivity.kt") . 2) ((:keyword "var") . 1) ((:keyword "this") . 1)) "playVideo" (((:file "g:/andrprac/BasicVideoRecorder/app/src/main/java/com/me/vd/MedioRecorderCamera1Activity.java") . 1) ((:keyword "private") . 1) (csharp-mode . 1) (nil . 1)) "openxu" (((:symbol "<com") . 1) (nxml-mode . 2) (nil . 2) ((:file "g:/andrprac/View-CustomLayout/app/src/main/res/layout/activity_main.xml") . 2) ((:symbol "</com") . 1)) "customlayout" (((:symbol "openxu") . 2) (nxml-mode . 2) (nil . 2) ((:file "g:/andrprac/View-CustomLayout/app/src/main/res/layout/activity_main.xml") . 2)) "notZero" (((:keyword "for") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "ImageMainContent" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainContent.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "removeElement" (((:file "h:/leetcodeCoding/hdseven.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "vtoAdd" (((:file "h:/leetcodeCoding/hdseven.java") . 3) ((:keyword "if") . 1) (csharp-mode . 3) (nil . 3) ((:keyword "for") . 2)) "waysToPartition" (((:file "h:/leetcodeCoding/hdeight.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "w32-pass-lalt-modifier" (((:file "j:/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "supercite" (((:file "j:/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "configure" (((:file "g:/android/readme.org") . 1) (org-mode . 1) (nil . 1)) "environment" (((:file "g:/android/readme.org") . 1) (org-mode . 1) (nil . 1)) "yesterday" (((:file "g:/android/readme.org") . 1) (org-mode . 1) (nil . 1)) "andrprac" (((:file "//wsl$/Ubuntu-20.04/home/blue_/.zshrc") . 1) (conf-unix-mode . 1) (nil . 1)) "largestPalindrome" (((:file "g:/leetcodeCoding/mtwoixed.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "generatePalindrome" (((:file "g:/leetcodeCoding/mtwoixed.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "pick" (((:file "g:/leetcodeCoding/summary/plan.org") . 1) (org-mode . 1) (nil . 1)) "configuration" (((:file "g:/leetcodeCoding/summary/plan.org") . 1) (org-mode . 1) (nil . 1)) "hello" (((:file "g:/andrprac/View-CustomLayout/app/src/main/res/values/strings.xml") . 1) ((:symbol "name=") . 1) (nxml-mode . 1) (nil . 1)) "world" (((:file "g:/andrprac/View-CustomLayout/app/src/main/res/values/strings.xml") . 1) (nxml-mode . 1) (nil . 1)) "onMeasure" (((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/PercentView.java") . 1) ((:keyword "super") . 1) (csharp-mode . 1) (nil . 1)) "onDraw" (((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/PercentView.java") . 1) ((:keyword "super") . 1) (csharp-mode . 1) (nil . 1)) "wordCount" (((:file "h:/leetcodeCoding/cmp.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "textSize" (((:file "g:/andrprac/View-CustomLayout/app/src/main/res/layout/activity_myview.xml") . 1) ((:symbol "me") . 1) (nxml-mode . 1) (nil . 1)) "defStyleRes" (((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/MyView.java") . 1) ((:keyword "this") . 1) (csharp-mode . 1) (nil . 1)) "defStyle" (((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/MyView.java") . 2) ((:keyword "this") . 2) (csharp-mode . 2) (nil . 2)) "MyView" (((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/MyView.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "getAttributeCount" (((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/MyView.java") . 1) ((:symbol "attrs") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "rippleColor" (((:file "g:/andrprac/View-CustomLayout/app/src/main/res/values/colors.xml") . 1) ((:symbol "name=") . 1) (nxml-mode . 1) (nil . 1)) "Inconsolata" (((:file "c:/Users/blue_/AppData/Roaming/.emacs.d/init.el") . 2) ((:keyword "setq") . 2) (emacs-lisp-mode . 2) (nil . 2)) "onRequestPermissionsResult" (((:file "g:/andrprac/CameraDemo/app/src/main/java/com/afei/camerademo/MainActivity.java") . 1) ((:keyword "this") . 1) (csharp-mode . 1) (nil . 1)) "fill" (((:file "g:/leetcodeCoding/cmp.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "minMoves" (((:file "g:/leetcodeCoding/cmp.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "CusMap" (((:file "g:/leetcodeCoding/cmp.java") . 10) ((:keyword "public") . 2) (csharp-mode . 10) (nil . 10) ((:keyword "out") . 2) ((:keyword "for") . 2) ((:keyword "new") . 1) ((:keyword "class") . 1) ((:symbol "List") . 2) ((:keyword "if") . 2)) "loadLibrary" (((:file "g:/andrprac/ndk/app/src/main/java/com/me/ndk/NativeHelper.java") . 1) ((:symbol "System") . 1) ((:keyword "static") . 1) (csharp-mode . 1) (nil . 1)) "NativeHelper" (((:file "g:/andrprac/ndk/app/src/main/java/com/me/ndk/MainActivity.java") . 1) ((:keyword "super") . 1) (csharp-mode . 1) (nil . 1)) "Module1Api" (((:file "g:/android/gradle.org") . 2) ((:keyword "new") . 2) (org-mode . 2) (nil . 2)) "depends" (((:file "g:/android/gradle.org") . 1) ((:keyword "new") . 1) (org-mode . 1) (nil . 1)) "Module2Api" (((:file "g:/android/gradle.org") . 1) ((:keyword "new") . 1) (org-mode . 1) (nil . 1)) "deeper-blue" (((:file "c:/Users/blue_/AppData/Roaming/.emacs.d/init.el") . 1) ((:keyword "bound-and-true-p") . 1) (emacs-lisp-mode . 1) (nil . 1)) "speedbar-get-focus" (((:file "c:/Users/blue_/AppData/Roaming/.emacs.d/lisp/init-sr-speedbar.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "Download" (((:file "g:/andrprac/openGLTexture/app/src/main/java/com/example/yllds/androidopengldemo/PngFboActivity.java") . 1) ((:symbol "sdcard") . 1) ((:keyword "private") . 1) (csharp-mode . 1) (nil . 1)) "AppCompatActivity" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1) ((:keyword "class") . 1) (kotlin-mode . 1) (nil . 1)) "IDrawer" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 2) ((:keyword "var") . 1) (kotlin-mode . 3) (nil . 3) ((:keyword "fun") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/drawer/TriangleDrawer.kt") . 1) ((:keyword "class") . 1)) "onCreate" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 2) ((:keyword "fun") . 1) (kotlin-mode . 6) (nil . 8) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainApp.kt") . 1) ((:keyword "super") . 7) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainActivity.kt") . 2) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/TriangleActivity.kt") . 1) ((:file "g:/andrprac/MediaPlayerSurface/app/src/main/java/me/crossle/demo/surfacetexture/MediaPlayerSurfaceStubActivity.java") . 1) (csharp-mode . 2) ((:file "g:/andrprac/VideoEdit/app/src/main/java/com/ringdroid/activity/GuideActivity.java") . 1)) "drawer" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 4) ((:keyword "super") . 1) (kotlin-mode . 4) (nil . 4) ((:keyword "fun") . 2) ((:keyword "val") . 1)) "initRender" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 2) ((:keyword "fun") . 3) (kotlin-mode . 3) (nil . 3) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainActivity.kt") . 1)) "SimpleRenderActivity" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 2) ((:keyword "val") . 2) (kotlin-mode . 2) (nil . 2)) "render" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 2) ((:keyword "val") . 2) (kotlin-mode . 2) (nil . 2)) "Renderer" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/elg/SimpleRender.kt") . 1) ((:symbol "实现GLSurfaceView") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "activity_simple_render" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainActivity.kt") . 1) ((:symbol "layout") . 1) ((:keyword "super") . 1) (kotlin-mode . 1) (nil . 1)) "BitmapDrawer" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1) ((:keyword "else") . 1) (kotlin-mode . 1) (nil . 1)) "onPause" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/TriangleActivity.kt") . 1) ((:keyword "super") . 1) (kotlin-mode . 1) (nil . 1)) "onResume" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/TriangleActivity.kt") . 1) ((:keyword "super") . 1) (kotlin-mode . 1) (nil . 1)) "context呢" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainApp.kt") . 1) ((:keyword "var") . 1) (kotlin-mode . 1) (nil . 1)) "TriangleView" (((:file "g:/andrprac/opengl/app/src/main/res/layout/activity_simple_render.xml") . 1) ((:symbol "opengl") . 1) (nxml-mode . 1) (nil . 2) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainActivity.kt") . 1) ((:keyword "var") . 1) (kotlin-mode . 1)) "TriangleActivity" (((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/TriangleActivity.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 3) ((:file "g:/andrprac/opengl/app/src/main/AndroidManifest.xml") . 2) ((:symbol "name=") . 2) (nxml-mode . 2)) "btn_drawRectangle" (((:file "g:/andrprac/ndk/app/src/main/java/com/me/ndk/MainActivity.kt") . 2) ((:keyword "super") . 2) (kotlin-mode . 2) (nil . 2) ((:symbol "id") . 1)) "Shanghai" (((:file "i:/cv/resume_Heyan Huang.tex") . 1) ((:keyword "\\resumeSubheading") . 1) (latex-mode . 1) (nil . 1)) "Developer" (((:file "i:/cv/resume_Heyan Huang.tex") . 1) ((:keyword "\\resumeItem") . 1) (latex-mode . 1) (nil . 1)) "rendering" (((:file "i:/cv/resume_Heyan Huang.tex") . 1) ((:keyword "\\resumeOneItem") . 1) (latex-mode . 1) (nil . 1)) "RecordButton" (((:file "g:/andrprac/LearnOpenGL/app/src/main/java/com/ben/android/learnopengl/widgets/RecordButton.java") . 1) ((:keyword "private") . 1) (csharp-mode . 1) (nil . 1)) "onRecordFinishedListener" (((:file "g:/andrprac/LearnOpenGL/app/src/main/java/com/ben/android/learnopengl/MainActivity.java") . 2) ((:keyword "public") . 2) (csharp-mode . 2) (nil . 2)) "tag-lines-already-matched" (((:file "g:/andrprac/LearnOpenGL/app/src/main/java/com/ben/android/learnopengl/widgets/CameraRender.java") . 1) ((:keyword "implements") . 1) (csharp-mode . 1) (nil . 1)) "CameraRender" (((:file "g:/andrprac/LearnOpenGL/app/src/main/java/com/ben/android/learnopengl/widgets/CameraRender.java") . 1) ((:keyword "private") . 1) (csharp-mode . 1) (nil . 1)) "SurfaceViewActivity" (((:file "g:/andrprac/MediaPlayerSurface/app/src/main/java/me/crossle/demo/surfacetexture/SurfaceViewActivity.java") . 1) ((:keyword "private") . 1) (csharp-mode . 1) (nil . 1)) "VideoSurfaceView" (((:file "g:/andrprac/MediaPlayerSurface/app/src/main/java/me/crossle/demo/surfacetexture/VideoSurfaceView.java") . 1) ((:keyword "private") . 1) (csharp-mode . 1) (nil . 1)) "surfaceCreated" (((:file "g:/andrprac/MediaPlayerSurface/app/src/main/java/me/crossle/demo/surfacetexture/SurfaceViewActivity.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "onCreateOptionsMenu" (((:file "g:/andrprac/MediaPlayerSurface/app/src/main/java/me/crossle/demo/surfacetexture/SurfaceViewActivity.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "nearestPalindromic" (((:file "h:/leetcodeCoding/mtwoixed.java") . 1) ((:symbol "s") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "start-file-process" (((:file "g:/leetcodeCoding/cmp.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "lineHeight" (((:file "g:/andrprac/CusViewGroup/app/src/main/java/com/me/cusviewgroup/FlowGroupView.java") . 1) ((:keyword "continue") . 1) (csharp-mode . 1) (nil . 1)) "init-file-debug" (((:file "g:/andrprac/BasicVideoRecorder/app/src/main/java/com/me/vd/MainActivity.java") . 1) ((:keyword "else") . 1) (csharp-mode . 1) (nil . 1)) "mPreviewWidth" (((:file "g:/andrprac/BasicVideoRecorder/app/src/main/java/com/me/vd/MainActivity.java") . 1) ((:keyword "return") . 1) (csharp-mode . 1) (nil . 1)) "VideoExtractor" (((:file "g:/andrprac/VideoEdit/app/src/main/java/com/ringdroid/mediacodec/VideoExtractor.java") . 2) ((:keyword "private") . 1) (csharp-mode . 2) (nil . 2) ((:keyword "public") . 1)) "GuideActivity" (((:file "g:/andrprac/VideoEdit/app/src/main/java/com/ringdroid/activity/GuideActivity.java") . 1) ((:keyword "private") . 1) (csharp-mode . 1) (nil . 1)) "videoExtractor" (((:file "g:/andrprac/VideoEdit/app/src/main/java/com/ringdroid/mediacodec/VideoExtractor.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "null-device" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/notes/NotesViewModel.kt") . 2) ((:keyword "val") . 2) (kotlin-mode . 2) (nil . 2)) "content" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/domain/use_case/AddNote.kt") . 1) ((:keyword "throw") . 1) (kotlin-mode . 1) (nil . 1)) "interactive" (((:file "g:/leetcodeCoding/cmp.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 2) ((:file "/Users/hhj/.emacs.d/lisp/init-swift-mode.el") . 1) ((:keyword "defun") . 1) (emacs-lisp-mode . 1)) "subtract" (((:file "h:/leetcodeCoding/mtwoixed.java") . 1) ((:symbol "nil") . 1) ((:keyword "while") . 1) (csharp-mode . 1) (nil . 1)) "bookmark--annotation-from-bookmark-list" (((:file "g:/leetcodeCoding/cmp.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "actionStart" (((:file "g:/andrprac/PlayAndroid/app/src/main/java/com/zj/play/main/MainActivity.kt") . 1) ((:keyword "fun") . 1) (kotlin-mode . 1) (nil . 1)) "request" (((:file "g:/andrprac/jv2/app/src/main/java/com/me/jv/repository/datasource/http/Api.java") . 1) ((:keyword "interface") . 1) (csharp-mode . 1) (nil . 1)) "repository" (((:file "g:/andrprac/jv2/app/src/main/AndroidManifest.xml") . 1) ((:symbol "name=") . 1) (nxml-mode . 1) (nil . 1)) "HttpCallTest" (((:file "g:/andrprac/jv2/app/src/main/AndroidManifest.xml") . 1) ((:symbol "repository") . 1) (nxml-mode . 1) (nil . 1)) "timeItem" (((:file "g:/andrprac/jv2/app/src/main/java/com/me/jv/repository/HttpCallTest.java") . 1) ((:keyword "class") . 1) (csharp-mode . 4) (nil . 4) ((:file "g:/andrprac/jv/app/src/main/java/com/me/jv/repository/HttpCallTest.java") . 3) ((:keyword "if") . 3)) "getUpdated" (((:file "g:/andrprac/jv2/app/src/main/java/com/me/jv/repository/HttpCallTest.java") . 1) ((:symbol "timeItem") . 1) ((:keyword "class") . 1) (csharp-mode . 1) (nil . 1)) "colorAccent" (((:file "g:/andrprac/prackotlin/kp/app/src/main/res/values/colors.xml") . 1) ((:symbol "name=") . 1) (nxml-mode . 1) (nil . 1)) "starttls-extra-arguments" (((:file "g:/leetcodeCoding/cmp.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "startAt" (((:file "g:/leetcodeCoding/cmp.java") . 1) ((:keyword "out") . 1) (csharp-mode . 1) (nil . 1)) "moveCost" (((:file "g:/leetcodeCoding/cmp.java") . 1) ((:keyword "out") . 1) (csharp-mode . 1) (nil . 1)) "pushCost" (((:file "g:/leetcodeCoding/cmp.java") . 1) ((:symbol "2") . 1) ((:keyword "out") . 1) (csharp-mode . 1) (nil . 1)) "find-alias-regexp" (((:file "g:/andrprac/jv/app/src/main/java/com/me/jv/ui/SecondActivity.java") . 1) ((:keyword "private") . 1) (csharp-mode . 1) (nil . 1)) "reference-point-alist" (((:file "g:/andrprac/jv/readme.org") . 1) (org-mode . 1) (nil . 1)) "PackageActivity" (((:file "g:/andrprac/jv_AndroidX/app/src/main/AndroidManifest.xml") . 1) ((:symbol "ui") . 1) (nxml-mode . 1) (nil . 1)) "activities" (((:file "g:/andrprac/jv_AndroidX/app/src/main/res/layout/activity_digitalcoin.xml") . 1) ((:symbol "ui") . 1) (nxml-mode . 1) (nil . 1)) "DigitalCoin" (((:file "g:/andrprac/jv_AndroidX/app/src/main/res/layout/item_digital_coin.xml") . 1) ((:symbol "bean") . 1) (nxml-mode . 3) (nil . 3) ((:file "g:/andrprac/jv/app/src/main/AndroidManifest.xml") . 1) ((:symbol "activities") . 1) ((:file "g:/andrprac/jv/app/src/main/res/layout/item_coin.xml") . 1) ((:symbol "model") . 1)) "DigitalCoinViewModel" (((:file "g:/andrprac/jv_AndroidX/app/src/main/res/layout/second_fragment.xml") . 1) ((:symbol "viewmodel") . 1) (nxml-mode . 1) (nil . 1)) "viewmodels" (((:file "g:/andrprac/jv/app/src/main/res/layout/item_coin.xml") . 1) ((:symbol "jv") . 1) (nxml-mode . 1) (nil . 1)) "itemClick" (((:file "g:/andrprac/jv/app/src/main/java/com/me/jv/ui/adapters/DigitalCoinAdapter.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "ClickBinding" (((:file "g:/andrprac/jv/app/src/main/java/com/me/jv/ui/adapters/DigitalCoinAdapter.java") . 1) ((:keyword "public") . 1) (csharp-mode . 1) (nil . 1)) "DigitalCoinAdapter" (((:file "g:/andrprac/jv/app/src/main/java/com/me/jv/ui/adapters/DigitalCoinAdapter.java") . 1) ((:keyword "private") . 1) (csharp-mode . 1) (nil . 1)) "idCoin" (((:file "g:/andrprac/jv/app/src/main/res/layout/item_layout.xml") . 1) (nxml-mode . 1) (nil . 1)) "DigitalCoinActivity" (((:file "g:/andrprac/jv/app/src/main/java/com/me/jv/ui/activities/DigitalCoinActivity.java") . 1) ((:keyword "private") . 1) (csharp-mode . 1) (nil . 2) ((:file "g:/andrprac/jv/app/src/main/AndroidManifest.xml") . 1) ((:symbol "activities") . 1) (nxml-mode . 1)) "DigitalCoinResponse" (((:file "g:/andrprac/jv/app/src/main/res/layout/item_coin.xml") . 1) ((:symbol "model") . 1) (nxml-mode . 1) (nil . 1)) "DCoinRepository" (((:file "g:/andrprac/jv/app/src/main/java/com/me/jv/repository/DCoinRepository.java") . 1) ((:keyword "private") . 1) (csharp-mode . 1) (nil . 1)) "integer" (((:file "g:/andrprac/mvvm/mvvmPrac/app/src/main/java/com/me/jv/ui/activities/tests/FlowablePrac.java") . 1) ((:keyword "if") . 1) (csharp-mode . 1) (nil . 1)) "current-input-method" (((:file "g:/leetcodeCoding/cmp.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "help-at-pt-display-when-idle" (((:file "g:/leetcodeCoding/cmp.java") . 3) ((:keyword "if") . 2) (csharp-mode . 3) (nil . 3) ((:keyword "return") . 1)) "noteId" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/MainActivity.kt") . 1) ((:keyword "it") . 1) (kotlin-mode . 1) (nil . 1)) "&noteColor=" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/MainActivity.kt") . 1) ((:keyword "it") . 1) (kotlin-mode . 1) (nil . 1)) "noteColor" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/MainActivity.kt") . 1) ((:keyword "it") . 1) (kotlin-mode . 1) (nil . 1)) "pick_a_color" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/MainActivity.kt") . 1) ((:keyword "it") . 1) (kotlin-mode . 1) (nil . 1)) "AddEditNoteScreen" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "AddEditNoteViewModel" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteViewModel.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 2) (nil . 2) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainContent.kt") . 1) ((:keyword "fun") . 1)) "PickAColorSection" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/PickAColorSection.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "onColorChanged" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/PickAColorSection.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "onColorChange" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 1) ((:keyword "if") . 1) (kotlin-mode . 1) (nil . 1)) "IconButton" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 1) ((:keyword "if") . 1) (kotlin-mode . 1) (nil . 1)) "isColorSectionVisible" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 1) ((:keyword "if") . 1) (kotlin-mode . 1) (nil . 1)) "TestOne" (((:file "g:/andrprac/ktl/app/src/main/java/com/me/ktl/TestOne.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "runBloTest" (((:file "g:/andrprac/ktl/app/src/main/java/com/me/ktl/MainActivity.kt") . 1) ((:keyword "fun") . 1) (kotlin-mode . 1) (nil . 1)) "runBlocking" (((:file "g:/andrprac/ktl/app/src/main/java/com/me/ktl/MainActivity.kt") . 1) ((:keyword "fun") . 1) (kotlin-mode . 1) (nil . 1)) "asyncOne" (((:file "g:/andrprac/ktl/app/src/main/java/com/me/ktl/MainActivity.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "MyBaseActivity" (((:file "g:/andrprac/mvvm/MvvmArchitecture/app/src/main/java/com/mythmayor/mvvmarchitecture/base/MyBaseActivity.java") . 1) ((:keyword "private") . 1) (csharp-mode . 1) (nil . 1)) "ActivityCollector" (((:file "g:/andrprac/mvvm/MvvmArchitecture/app/src/main/java/com/mythmayor/mvvmarchitecture/utils/ActivityCollector.java") . 1) ((:keyword "private") . 1) (csharp-mode . 1) (nil . 1)) "onTouchEvent" (((:file "g:/andrprac/mvvm/MvvmArchitecture/app/src/main/java/com/mythmayor/mvvmarchitecture/base/MyBaseActivity.java") . 1) ((:keyword "event") . 1) (csharp-mode . 1) (nil . 1)) "MyBaseFragment" (((:file "g:/andrprac/mvvm/MvvmArchitecture/app/src/main/java/com/mythmayor/mvvmarchitecture/base/MyBaseFragment.java") . 1) ((:keyword "private") . 1) (csharp-mode . 1) (nil . 1)) "KeyboardListener" (((:file "g:/andrprac/mvvm/MvvmArchitecture/app/src/main/java/com/mythmayor/mvvmarchitecture/itype/KeyboardListener.java") . 2) ((:keyword "private") . 1) (csharp-mode . 2) (nil . 2) ((:keyword "public") . 1)) "loginActivity" (((:file "g:/andrprac/mvvm/MvvmArchitecture/app/src/main/java/com/mythmayor/mvvmarchitecture/ui/activity/LoginActivity.java") . 1) ((:keyword "this") . 1) (csharp-mode . 1) (nil . 1)) "loginRequest" (((:file "g:/andrprac/mvvm/MvvmArchitecture/app/src/main/java/com/mythmayor/mvvmarchitecture/ui/activity/LoginActivity.java") . 1) ((:keyword "new") . 1) (csharp-mode . 1) (nil . 1)) "LazyColumn" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 1) ((:keyword "it") . 1) (kotlin-mode . 1) (nil . 1)) "LoadPicture" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/LoadPictureSection.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "glideUrl" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/util/ImageUtil.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "ImageMainScreen" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainViewModel.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "ToggleGallerySection" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteViewModel.kt") . 1) ((:keyword "is") . 1) (kotlin-mode . 1) (nil . 1)) "GallerySelect" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/GallerySelect.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "onResult" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/GallerySelect.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "onImageUri" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/GallerySelect.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 2) (nil . 2) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainContent.kt") . 1) ((:keyword "if") . 1)) "capture" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainContent.kt") . 1) ((:keyword "if") . 1) (kotlin-mode . 1) (nil . 1)) "ToggleImageSection" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteViewModel.kt") . 1) ((:keyword "is") . 1) (kotlin-mode . 1) (nil . 1)) "imgaes" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainContent.kt") . 1) ((:keyword "else") . 1) (kotlin-mode . 1) (nil . 1)) "_imgUri" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteViewModel.kt") . 1) ((:keyword "var") . 1) (kotlin-mode . 1) (nil . 1)) "EMPTY_IMAGE_URI" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteViewModel.kt") . 1) ((:keyword "var") . 1) (kotlin-mode . 1) (nil . 1)) "imageUri" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainContent.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "runCatching" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/ext.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "CameraCapture" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/CameraCapture.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "orgDigits" (((:file "g:/leetcodeCoding/mtwoixed.java") . 1) ((:keyword "out") . 1) (csharp-mode . 1) (nil . 1)) "large-file-warning-threshold" (((:file "g:/leetcodeCoding/prevCmp/cmp_22_2_19_1.java") . 1) ((:keyword "for") . 1) (csharp-mode . 1) (nil . 1)) "poll" (((:file "g:/leetcodeCoding/cmp.java") . 1) ((:symbol "q") . 1) ((:keyword "while") . 1) (csharp-mode . 1) (nil . 1)) "annotatedStringResource" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/html/annotatedStringResource.kt") . 1) ((:keyword "val") . 1) (kotlin-mode . 2) (nil . 2) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 1) ((:keyword "else") . 1)) "Typeface" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/html/annotatedStringResource.kt") . 1) ((:keyword "when") . 1) (kotlin-mode . 1) (nil . 1)) "spanned" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/html/annotatedStringResource.kt") . 2) ((:keyword "val") . 1) (kotlin-mode . 2) (nil . 2) ((:keyword "return") . 1)) "newlineReplace" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/html/parseHtml.kt") . 1) ((:keyword "this") . 1) (kotlin-mode . 1) (nil . 1)) "@Composable" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/html/parseHtml.kt") . 1) ((:keyword "this") . 1) (kotlin-mode . 1) (nil . 1)) "toAnnotatedString" (((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 1) ((:symbol "tmp") . 1) ((:keyword "val") . 1) (kotlin-mode . 1) (nil . 1)) "swift" (((:file "/Users/hhj/.emacs.d/lisp/init-swift-mode.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "swift-mode" (((:file "/Users/hhj/.emacs.d/lisp/init-swift-mode.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "A2C_Disconnect" (((:file "/Users/hhj/pubFrameWorks/ET-EUI/Tools/Analyzer/Analyzer/AddChildTypeAnalyzer.cs") . 1) ((:keyword "namespace") . 1) (csharp-mode . 1) (nil . 1)))) company-statistics--log [("Object" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("Entry" (nil . 1) (csharp-mode . 1) ((:keyword "out") . 1) ((:symbol "Map") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("Integer" (nil . 1) (csharp-mode . 1) ((:keyword "out") . 1) ((:symbol "Entry") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("Integer" (nil . 1) (csharp-mode . 1) ((:keyword "out") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("getKey" (nil . 1) (csharp-mode . 1) ((:keyword "out") . 1) ((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("getValue" (nil . 1) (csharp-mode . 1) ((:keyword "out") . 1) ((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("minimumBoxes" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:symbol "s") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("public" (nil . 1) (csharp-mode . 1) ((:keyword "class") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("insert" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 5)) ("insert" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("query" (nil . 1) (csharp-mode . 1) ((:keyword "return") . 5) ((:file "h:/leetcodeCoding/hdseven.java") . 5)) ("insert" (nil . 1) (csharp-mode . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("insert" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("insert" (nil . 1) (csharp-mode . 1) ((:keyword "else") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("query" (nil . 1) (csharp-mode . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("query" (nil . 1) (csharp-mode . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("query" (nil . 1) (csharp-mode . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("query" (nil . 1) (csharp-mode . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("hdseven" (nil . 3) (csharp-mode . 3) ((:keyword "public") . 3) ((:file "h:/leetcodeCoding/hdseven.java") . 3)) ("hdseven" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("capacity" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 5)) ("public" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("CusTreeMap" (nil . 4) (csharp-mode . 4) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 4)) ("capacity" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("capacity" (nil . 1) (csharp-mode . 1) ((:keyword "this") . 1) ((:symbol "this") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("capacity" (nil . 1) (csharp-mode . 1) ((:keyword "this") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("public" (nil . 1) (csharp-mode . 1) ((:keyword "this") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("boolean" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("public" (nil . 1) (csharp-mode . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("Integer" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("Integer" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("firstKey" (nil . 2) (csharp-mode . 2) ((:keyword "if") . 2) ((:symbol "m") . 2) ((:file "h:/leetcodeCoding/hdseven.java") . 2)) ("pollFirst" (nil . 2) (csharp-mode . 2) ((:keyword "if") . 1) ((:symbol "m") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 2)) ("public" (nil . 1) (csharp-mode . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("Integer" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("capacity" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("last" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 2)) ("public" (nil . 1) (csharp-mode . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("CusTreeMap" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 3) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("CusTreeMap" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("CusTreeMap" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("removed" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 2)) ("removed" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("remove" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("Integer" (nil . 1) (csharp-mode . 1) ((:keyword "else") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("pollFirst" (nil . 1) (csharp-mode . 1) ((:keyword "else") . 1) ((:symbol "nil") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("minK" (nil . 2) (csharp-mode . 2) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 2)) ("break" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("minK" (nil . 1) (csharp-mode . 1) ((:keyword "break") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("removeElement" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("Integer" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("vtoAdd" (nil . 3) (csharp-mode . 3) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 3)) ("vtoAdd" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 2) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("vtoAdd" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("hdseven" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("last" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:symbol "m") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("firstKey" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:symbol "m") . 1) ((:file "h:/leetcodeCoding/hdseven.java") . 1)) ("double" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 4)) ("double" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("getCollisionTimes" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:symbol "s") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("while" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("double" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("pollLast" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:symbol "s") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("double" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("intervals" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 4)) ("minInterval" (nil . 2) (csharp-mode . 2) ((:keyword "new") . 2) ((:symbol "s") . 2) ((:file "h:/leetcodeCoding/hdeight.java") . 2)) ("minInterval" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:symbol "s") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("intervals" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("intervals" (nil . 1) (csharp-mode . 1) ((:keyword "while") . 2) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("intervals" (nil . 1) (csharp-mode . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("waysToPartition" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:symbol "s") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("continue" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 2)) ("continue" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("right" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("left" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("contains" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:symbol "left") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("HashMap" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("Integer" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 7)) ("Integer" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("Integer" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("Integer" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("Integer" (nil . 1) (csharp-mode . 1) ((:keyword "out") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("keySet" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:symbol "ins") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 2)) ("length" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:symbol "pa") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("next" (nil . 1) (csharp-mode . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 2)) ("next" (nil . 1) (csharp-mode . 1) ((:keyword "while") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("size" (nil . 1) (csharp-mode . 1) ((:keyword "while") . 1) ((:symbol "next") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("validArrangement" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:symbol "s") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("maxTime" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 2)) ("edges" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("maxTime" (nil . 1) (csharp-mode . 1) ((:keyword "return") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("Integer" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("HashSet" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("Integer" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:symbol "Set") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("maximalPathQuality" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:symbol "s") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("keySet" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:symbol "m") . 1) ((:file "h:/leetcodeCoding/hdeight.java") . 1)) ("w32-pass-lalt-modifier" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "j:/.emacs.d/init.el") . 1)) ("supercite" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "j:/.emacs.d/init.el") . 1)) ("configure" (nil . 1) (org-mode . 1) ((:file "g:/android/readme.org") . 1)) ("environment" (nil . 1) (org-mode . 1) ((:file "g:/android/readme.org") . 1)) ("yesterday" (nil . 1) (org-mode . 1) ((:file "g:/android/readme.org") . 1)) ("andrprac" (nil . 1) (conf-unix-mode . 1) ((:file "//wsl$/Ubuntu-20.04/home/blue_/.zshrc") . 1)) ("largestPalindrome" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:symbol "s") . 1) ((:file "g:/leetcodeCoding/mtwoixed.java") . 1)) ("generatePalindrome" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:file "g:/leetcodeCoding/mtwoixed.java") . 1)) ("reverse" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:symbol "nil") . 1) ((:file "g:/leetcodeCoding/mtwoixed.java") . 2)) ("reverse" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:symbol "nil") . 1) ((:file "g:/leetcodeCoding/mtwoixed.java") . 1)) ("pick" (nil . 1) (org-mode . 1) ((:file "g:/leetcodeCoding/summary/plan.org") . 1)) ("configuration" (nil . 1) (org-mode . 1) ((:file "g:/leetcodeCoding/summary/plan.org") . 1)) ("hello" (nil . 1) (nxml-mode . 1) ((:symbol "name=") . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/res/values/strings.xml") . 1)) ("world" (nil . 1) (nxml-mode . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/res/values/strings.xml") . 1)) ("PercentView" (nil . 1) (csharp-mode . 1) ((:keyword "super") . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/PercentView.java") . 1)) ("onMeasure" (nil . 1) (csharp-mode . 1) ((:keyword "super") . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/PercentView.java") . 1)) ("onDraw" (nil . 1) (csharp-mode . 1) ((:keyword "super") . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/PercentView.java") . 1)) ("textSize" (nil . 1) (nxml-mode . 1) ((:symbol "me") . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/res/layout/activity_myview.xml") . 1)) ("defStyleRes" (nil . 1) (csharp-mode . 1) ((:keyword "this") . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/MyView.java") . 1)) ("defStyle" (nil . 2) (csharp-mode . 2) ((:keyword "this") . 2) ((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/MyView.java") . 2)) ("attrs" (nil . 1) (csharp-mode . 3) ((:keyword "for") . 2) ((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/MyView.java") . 3)) ("MyView" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/MyView.java") . 1)) ("attrs" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/MyView.java") . 1)) ("getAttributeCount" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:symbol "attrs") . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/MyView.java") . 1)) ("android" (nil . 1) (csharp-mode . 1) ((:keyword "this") . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/MyView.java") . 1)) ("attrs" (nil . 1) (csharp-mode . 1) ((:keyword "this") . 1) ((:symbol "R") . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/MyView.java") . 1)) ("defStyle" (nil . 1) (csharp-mode . 1) ((:keyword "this") . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/java/com/openxu/customlayout/MyView.java") . 1)) ("rippleColor" (nil . 1) (nxml-mode . 1) ((:symbol "name=") . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/res/values/colors.xml") . 1)) ("openxu" (nil . 1) (nxml-mode . 1) ((:symbol "<com") . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/res/layout/activity_main.xml") . 2)) ("customlayout" (nil . 1) (nxml-mode . 1) ((:symbol "openxu") . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/res/layout/activity_main.xml") . 2)) ("openxu" (nil . 1) (nxml-mode . 1) ((:symbol "</com") . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/res/layout/activity_main.xml") . 1)) ("customlayout" (nil . 1) (nxml-mode . 1) ((:symbol "openxu") . 1) ((:file "g:/andrprac/View-CustomLayout/app/src/main/res/layout/activity_main.xml") . 1)) ("properties" (nil . 1) (emacs-lisp-mode . 2) ((:keyword "setq") . 2) ((:file "c:/Users/blue_/AppData/Roaming/.emacs.d/lisp/init-text.el") . 2)) ("properties" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/blue_/AppData/Roaming/.emacs.d/lisp/init-text.el") . 1)) ("Inconsolata" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/blue_/AppData/Roaming/.emacs.d/init.el") . 1)) ("Inconsolata" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/blue_/AppData/Roaming/.emacs.d/init.el") . 1)) ("onRequestPermissionsResult" (nil . 1) (csharp-mode . 1) ((:keyword "this") . 1) ((:file "g:/andrprac/CameraDemo/app/src/main/java/com/afei/camerademo/MainActivity.java") . 1)) ("length" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:symbol "s") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 2)) ("fill" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("length" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:symbol "s") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("String" (nil . 1) (csharp-mode . 1) ((:keyword "out") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 3)) ("String" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("divideString" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:symbol "s") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("String" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("minMoves" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:symbol "s") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("maxDoubles" (nil . 6) (csharp-mode . 6) ((:keyword "if") . 2) ((:file "g:/leetcodeCoding/cmp.java") . 6)) ("target" (nil . 1) (csharp-mode . 1) ((:keyword "return") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 2)) ("target" (nil . 1) (csharp-mode . 1) ((:keyword "return") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("maxDoubles" (nil . 1) (csharp-mode . 1) ((:keyword "while") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("maxDoubles" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("maxDoubles" (nil . 1) (csharp-mode . 1) ((:keyword "out") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("maxDoubles" (nil . 1) (csharp-mode . 1) ((:keyword "return") . 2) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("maxDoubles" (nil . 1) (csharp-mode . 1) ((:keyword "return") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("mostPoints" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:symbol "s") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("maxRunTime" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:symbol "s") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("TreeMap" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("public" (nil . 1) (csharp-mode . 1) ((:keyword "class") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 5)) ("CusMap" (nil . 10) (csharp-mode . 10) ((:keyword "public") . 2) ((:file "g:/leetcodeCoding/cmp.java") . 10)) ("boolean" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("public" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("CusMap" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("CusMap" (nil . 1) (csharp-mode . 1) ((:keyword "out") . 2) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("Integer" (nil . 1) (csharp-mode . 1) ((:keyword "out") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 3)) ("CusMap" (nil . 1) (csharp-mode . 1) ((:keyword "out") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("CusMap" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 2) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("CusMap" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("Integer" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:symbol "CusMap") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("Integer" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("public" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("CusMap" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("offer" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:symbol "q") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("public" (nil . 1) (csharp-mode . 1) ((:keyword "class") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("CusMap" (nil . 1) (csharp-mode . 1) ((:keyword "class") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("public" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("CusMap" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 2) ((:symbol "List") . 2) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("CusMap" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:symbol "List") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("loadLibrary" (nil . 1) (csharp-mode . 1) ((:keyword "static") . 1) ((:symbol "System") . 1) ((:file "g:/andrprac/ndk/app/src/main/java/com/me/ndk/NativeHelper.java") . 1)) ("public" (nil . 1) (csharp-mode . 1) ((:keyword "static") . 1) ((:file "g:/andrprac/ndk/app/src/main/java/com/me/ndk/NativeHelper.java") . 1)) ("static" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "g:/andrprac/ndk/app/src/main/java/com/me/ndk/NativeHelper.java") . 1)) ("NativeHelper" (nil . 1) (csharp-mode . 1) ((:keyword "super") . 1) ((:file "g:/andrprac/ndk/app/src/main/java/com/me/ndk/MainActivity.java") . 1)) ("getAppKey" (nil . 1) (csharp-mode . 1) ((:keyword "super") . 1) ((:symbol "NativeHelper") . 1) ((:file "g:/andrprac/ndk/app/src/main/java/com/me/ndk/MainActivity.java") . 1)) ("Module1Api" (nil . 2) (org-mode . 2) ((:keyword "new") . 2) ((:file "g:/android/gradle.org") . 2)) ("Module1Api" (nil . 1) (org-mode . 1) ((:keyword "new") . 1) ((:file "g:/android/gradle.org") . 1)) ("depends" (nil . 1) (org-mode . 1) ((:keyword "new") . 1) ((:file "g:/android/gradle.org") . 1)) ("Module2Api" (nil . 1) (org-mode . 1) ((:keyword "new") . 1) ((:file "g:/android/gradle.org") . 1)) ("deeper-blue" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "bound-and-true-p") . 1) ((:file "c:/Users/blue_/AppData/Roaming/.emacs.d/init.el") . 1)) ("speedbar-get-focus" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "c:/Users/blue_/AppData/Roaming/.emacs.d/lisp/init-sr-speedbar.el") . 1)) ("Download" (nil . 1) (csharp-mode . 1) ((:keyword "private") . 1) ((:symbol "sdcard") . 1) ((:file "g:/andrprac/openGLTexture/app/src/main/java/com/example/yllds/androidopengldemo/PngFboActivity.java") . 1)) ("public" (nil . 1) (kotlin-mode . 1) ((:keyword "super") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainActivity.kt") . 1)) ("private" (nil . 4) (csharp-mode . 1) ((:keyword "class") . 3) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.java") . 1)) ("override" (nil . 1) (csharp-mode . 1) ((:keyword "var") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.java") . 1)) ("AppCompatActivity" (nil . 1) (kotlin-mode . 1) ((:keyword "class") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1)) ("private" (nil . 1) (kotlin-mode . 3) ((:keyword "class") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 2)) ("IDrawer" (nil . 3) (kotlin-mode . 3) ((:keyword "var") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 2)) ("onCreate" (nil . 3) (kotlin-mode . 3) ((:keyword "fun") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1)) ("savedInstanceBundle" (nil . 2) (kotlin-mode . 2) ((:keyword "fun") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 2)) ("savedInstanceBundle" (nil . 1) (kotlin-mode . 1) ((:keyword "super") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1)) ("drawer" (nil . 4) (kotlin-mode . 4) ((:keyword "super") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 4)) ("private" (nil . 1) (kotlin-mode . 1) ((:keyword "else") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1)) ("initRender" (nil . 2) (kotlin-mode . 2) ((:keyword "fun") . 2) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1)) ("drawer" (nil . 1) (kotlin-mode . 1) ((:keyword "fun") . 2) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1)) ("IDrawer" (nil . 1) (kotlin-mode . 1) ((:keyword "fun") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1)) ("SimpleRenderActivity" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1)) ("render" (nil . 2) (kotlin-mode . 2) ((:keyword "val") . 2) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 2)) ("drawer" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1)) ("gl_surface" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1)) ("render" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1)) ("override" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1)) ("drawer" (nil . 1) (kotlin-mode . 1) ((:keyword "fun") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1)) ("onDestroy" (nil . 2) (kotlin-mode . 2) ((:keyword "super") . 1) ((:symbol "super") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1)) ("videoW" (nil . 1) (kotlin-mode . 1) ((:keyword "fun") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/drawer/IDrawer.kt") . 1)) ("release" (nil . 1) (kotlin-mode . 1) ((:keyword "fun") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/drawer/IDrawer.kt") . 1)) ("IDrawer" (nil . 1) (kotlin-mode . 1) ((:keyword "class") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/drawer/TriangleDrawer.kt") . 1)) ("private" (nil . 1) (kotlin-mode . 1) ((:keyword "class") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/drawer/TriangleDrawer.kt") . 1)) ("GLSurfaceView" (nil . 2) (kotlin-mode . 2) ((:keyword "package") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/elg/SimpleRender.kt") . 2)) ("Renderer" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:symbol "实现GLSurfaceView") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/elg/SimpleRender.kt") . 1)) ("GLSurfaceView" (nil . 1) (kotlin-mode . 1) ((:keyword "fun") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/elg/SimpleRender.kt") . 1)) ("activity_simple_render" (nil . 1) (kotlin-mode . 1) ((:keyword "super") . 1) ((:symbol "layout") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainActivity.kt") . 1)) ("LinearLayout" (nil . 1) (nxml-mode . 1) ((:file "g:/andrprac/opengl/app/src/main/res/layout/activity_main.xml") . 1)) ("BitmapDrawer" (nil . 1) (kotlin-mode . 1) ((:keyword "else") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1)) ("onCreate" (nil . 1) (kotlin-mode . 1) ((:keyword "super") . 2) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainApp.kt") . 1)) ("onCreate" (nil . 1) (kotlin-mode . 1) ((:keyword "super") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainActivity.kt") . 1)) ("MainActivity" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainActivity.kt") . 1)) ("initRender" (nil . 1) (kotlin-mode . 1) ((:keyword "fun") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainActivity.kt") . 1)) ("onDestroy" (nil . 1) (kotlin-mode . 1) ((:keyword "fun") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainActivity.kt") . 1)) ("CONTEXT" (nil . 1) (kotlin-mode . 1) ((:keyword "super") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainActivity.kt") . 1)) ("SimpleRenderActivity" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1)) ("onCreate" (nil . 1) (kotlin-mode . 1) ((:keyword "super") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1)) ("initRender" (nil . 1) (kotlin-mode . 1) ((:keyword "fun") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/SimpleRenderActivity.kt") . 1)) ("onCreate" (nil . 1) (kotlin-mode . 1) ((:keyword "super") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainActivity.kt") . 1)) ("android" (nil . 1) (nxml-mode . 1) ((:file "g:/andrprac/opengl/app/src/main/AndroidManifest.xml") . 1)) ("MainApp" (nil . 1) (nxml-mode . 1) ((:symbol "name=") . 1) ((:file "g:/andrprac/opengl/app/src/main/AndroidManifest.xml") . 1)) ("context呢" (nil . 1) (kotlin-mode . 1) ((:keyword "var") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainApp.kt") . 1)) ("TriangleView" (nil . 2) (nxml-mode . 1) ((:symbol "opengl") . 1) ((:file "g:/andrprac/opengl/app/src/main/res/layout/activity_simple_render.xml") . 1)) ("TriangleActivity" (nil . 2) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/TriangleActivity.kt") . 1)) ("onCreate" (nil . 1) (kotlin-mode . 1) ((:keyword "super") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/TriangleActivity.kt") . 1)) ("TriangleActivity" (nil . 1) (nxml-mode . 1) ((:symbol "name=") . 1) ((:file "g:/andrprac/opengl/app/src/main/AndroidManifest.xml") . 1)) ("TriangleView" (nil . 1) (kotlin-mode . 1) ((:keyword "var") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/MainActivity.kt") . 1)) ("onPause" (nil . 1) (kotlin-mode . 1) ((:keyword "super") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/TriangleActivity.kt") . 1)) ("onResume" (nil . 1) (kotlin-mode . 1) ((:keyword "super") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/TriangleActivity.kt") . 1)) ("clickNDKDrawTriangle" (nil . 1) (nxml-mode . 1) ((:symbol "onClick=") . 1) ((:file "g:/andrprac/opengl/app/src/main/res/layout/activity_main.xml") . 1)) ("RenderJni" (nil . 3) (kotlin-mode . 3) ((:keyword "class") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/RenderJni.kt") . 1)) ("GLSurfaceView" (nil . 1) (kotlin-mode . 1) ((:keyword "var") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/TriangleActivity.kt") . 2)) ("GLSurfaceView" (nil . 1) (kotlin-mode . 1) ((:keyword "super") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/TriangleActivity.kt") . 1)) ("RenderJni" (nil . 1) (kotlin-mode . 1) ((:keyword "var") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/TriangleActivity.kt") . 2)) ("jniRender" (nil . 2) (kotlin-mode . 2) ((:keyword "this") . 2) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/TriangleActivity.kt") . 2)) ("RenderJni" (nil . 1) (kotlin-mode . 1) ((:keyword "this") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/TriangleActivity.kt") . 1)) ("jniRender" (nil . 1) (kotlin-mode . 1) ((:keyword "this") . 1) ((:file "g:/andrprac/opengl/app/src/main/java/com/me/opengl/TriangleActivity.kt") . 1)) ("btn_drawRectangle" (nil . 2) (kotlin-mode . 2) ((:keyword "super") . 2) ((:file "g:/andrprac/ndk/app/src/main/java/com/me/ndk/MainActivity.kt") . 2)) ("btn_drawRectangle" (nil . 1) (kotlin-mode . 1) ((:keyword "super") . 1) ((:symbol "id") . 1) ((:file "g:/andrprac/ndk/app/src/main/java/com/me/ndk/MainActivity.kt") . 1)) ("RectActivity" (nil . 1) (nxml-mode . 1) ((:symbol "name=") . 1) ((:file "g:/andrprac/ndk/app/src/main/AndroidManifest.xml") . 1)) ("TriangleActivity" (nil . 1) (nxml-mode . 1) ((:symbol "name=") . 1) ((:file "g:/andrprac/opengl/app/src/main/AndroidManifest.xml") . 1)) ("RectActivity" (nil . 1) (nxml-mode . 1) ((:symbol "name=") . 1) ((:file "g:/andrprac/opengl/app/src/main/AndroidManifest.xml") . 1)) ("Shanghai" (nil . 1) (latex-mode . 1) ((:keyword "\\resumeSubheading") . 1) ((:file "i:/cv/resume_Heyan Huang.tex") . 1)) ("Developer" (nil . 1) (latex-mode . 1) ((:keyword "\\resumeItem") . 1) ((:file "i:/cv/resume_Heyan Huang.tex") . 1)) ("rendering" (nil . 1) (latex-mode . 1) ((:keyword "\\resumeOneItem") . 1) ((:file "i:/cv/resume_Heyan Huang.tex") . 1)) ("RecordButton" (nil . 1) (csharp-mode . 1) ((:keyword "private") . 1) ((:file "g:/andrprac/LearnOpenGL/app/src/main/java/com/ben/android/learnopengl/widgets/RecordButton.java") . 1)) ("onRecordFinishedListener" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "g:/andrprac/LearnOpenGL/app/src/main/java/com/ben/android/learnopengl/MainActivity.java") . 1)) ("tag-lines-already-matched" (nil . 1) (csharp-mode . 1) ((:keyword "implements") . 1) ((:file "g:/andrprac/LearnOpenGL/app/src/main/java/com/ben/android/learnopengl/widgets/CameraRender.java") . 1)) ("CameraRender" (nil . 1) (csharp-mode . 1) ((:keyword "private") . 1) ((:file "g:/andrprac/LearnOpenGL/app/src/main/java/com/ben/android/learnopengl/widgets/CameraRender.java") . 1)) ("SurfaceViewActivity" (nil . 1) (csharp-mode . 1) ((:keyword "private") . 1) ((:file "g:/andrprac/MediaPlayerSurface/app/src/main/java/me/crossle/demo/surfacetexture/SurfaceViewActivity.java") . 1)) ("MediaPlayerSurfaceStubActivity" (nil . 1) (csharp-mode . 1) ((:keyword "static") . 1) ((:file "g:/andrprac/MediaPlayerSurface/app/src/main/java/me/crossle/demo/surfacetexture/MediaPlayerSurfaceStubActivity.java") . 1)) ("onCreate" (nil . 1) (csharp-mode . 1) ((:keyword "super") . 1) ((:file "g:/andrprac/MediaPlayerSurface/app/src/main/java/me/crossle/demo/surfacetexture/MediaPlayerSurfaceStubActivity.java") . 1)) ("VideoSurfaceView" (nil . 1) (csharp-mode . 1) ((:keyword "private") . 1) ((:file "g:/andrprac/MediaPlayerSurface/app/src/main/java/me/crossle/demo/surfacetexture/VideoSurfaceView.java") . 1)) ("surfaceCreated" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "g:/andrprac/MediaPlayerSurface/app/src/main/java/me/crossle/demo/surfacetexture/SurfaceViewActivity.java") . 1)) ("onCreateOptionsMenu" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "g:/andrprac/MediaPlayerSurface/app/src/main/java/me/crossle/demo/surfacetexture/SurfaceViewActivity.java") . 1)) ("onRecordFinishedListener" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "g:/andrprac/LearnOpenGL/app/src/main/java/com/ben/android/learnopengl/MainActivity.java") . 1)) ("length" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:symbol "q") . 1) ((:file "g:/leetcodeCoding/mtwoixed.java") . 1)) ("start-file-process" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("lineHeight" (nil . 1) (csharp-mode . 1) ((:keyword "continue") . 1) ((:file "g:/andrprac/CusViewGroup/app/src/main/java/com/me/cusviewgroup/FlowGroupView.java") . 1)) ("init-file-debug" (nil . 1) (csharp-mode . 1) ((:keyword "else") . 1) ((:file "g:/andrprac/BasicVideoRecorder/app/src/main/java/com/me/vd/MainActivity.java") . 1)) ("mPreviewWidth" (nil . 1) (csharp-mode . 1) ((:keyword "return") . 1) ((:file "g:/andrprac/BasicVideoRecorder/app/src/main/java/com/me/vd/MainActivity.java") . 1)) ("mSurface" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "g:/andrprac/BasicVideoRecorder/app/src/main/java/com/me/vd/MedioRecorderCamera1Activity.java") . 1)) ("playVideo" (nil . 1) (csharp-mode . 1) ((:keyword "private") . 1) ((:file "g:/andrprac/BasicVideoRecorder/app/src/main/java/com/me/vd/MedioRecorderCamera1Activity.java") . 1)) ("VideoExtractor" (nil . 1) (csharp-mode . 1) ((:keyword "private") . 1) ((:file "g:/andrprac/VideoEdit/app/src/main/java/com/ringdroid/mediacodec/VideoExtractor.java") . 1)) ("GuideActivity" (nil . 1) (csharp-mode . 1) ((:keyword "private") . 1) ((:file "g:/andrprac/VideoEdit/app/src/main/java/com/ringdroid/activity/GuideActivity.java") . 1)) ("onCreate" (nil . 1) (csharp-mode . 1) ((:keyword "super") . 1) ((:file "g:/andrprac/VideoEdit/app/src/main/java/com/ringdroid/activity/GuideActivity.java") . 1)) ("VideoEditActivity" (nil . 1) (csharp-mode . 1) ((:keyword "private") . 1) ((:file "g:/andrprac/VideoEdit/app/src/main/java/com/ringdroid/activity/VideoEditActivity.java") . 1)) ("VideoExtractor" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "g:/andrprac/VideoEdit/app/src/main/java/com/ringdroid/mediacodec/VideoExtractor.java") . 1)) ("videoExtractor" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "g:/andrprac/VideoEdit/app/src/main/java/com/ringdroid/mediacodec/VideoExtractor.java") . 1)) ("toString" (nil . 1) (csharp-mode . 1) ((:keyword "try") . 1) ((:symbol "file") . 1) ((:file "g:/andrprac/VideoEdit/app/src/main/java/com/ringdroid/mediacodec/VideoExtractor.java") . 1)) ("null-device" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/notes/NotesViewModel.kt") . 1)) ("recenter-last-op" (nil . 1) (kotlin-mode . 1) ((:keyword "is") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/notes/NotesViewModel.kt") . 1)) ("content" (nil . 1) (kotlin-mode . 1) ((:keyword "throw") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/domain/use_case/AddNote.kt") . 1)) ("interactive" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("bookmark--annotation-from-bookmark-list" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("length" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:symbol "t") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("length" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:symbol "par") . 2) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("length" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:symbol "par") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("length" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:symbol "nil") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("null-device" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/notes/NotesViewModel.kt") . 1)) ("MainActivity" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/PlayAndroid/app/src/main/java/com/zj/play/main/MainActivity.kt") . 1)) ("actionStart" (nil . 1) (kotlin-mode . 1) ((:keyword "fun") . 1) ((:file "g:/andrprac/PlayAndroid/app/src/main/java/com/zj/play/main/MainActivity.kt") . 1)) ("request" (nil . 1) (csharp-mode . 1) ((:keyword "interface") . 1) ((:file "g:/andrprac/jv2/app/src/main/java/com/me/jv/repository/datasource/http/Api.java") . 1)) ("repository" (nil . 1) (nxml-mode . 1) ((:symbol "name=") . 1) ((:file "g:/andrprac/jv2/app/src/main/AndroidManifest.xml") . 1)) ("HttpCallTest" (nil . 1) (nxml-mode . 1) ((:symbol "repository") . 1) ((:file "g:/andrprac/jv2/app/src/main/AndroidManifest.xml") . 1)) ("timeItem" (nil . 1) (csharp-mode . 1) ((:keyword "class") . 1) ((:file "g:/andrprac/jv2/app/src/main/java/com/me/jv/repository/HttpCallTest.java") . 1)) ("getUpdated" (nil . 1) (csharp-mode . 1) ((:keyword "class") . 1) ((:symbol "timeItem") . 1) ((:file "g:/andrprac/jv2/app/src/main/java/com/me/jv/repository/HttpCallTest.java") . 1)) ("stringBuilder" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "g:/andrprac/jv2/app/src/main/java/com/me/jv/repository/HttpCallTest.java") . 1)) ("timeItem" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 3) ((:file "g:/andrprac/jv/app/src/main/java/com/me/jv/repository/HttpCallTest.java") . 3)) ("timeItem" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "g:/andrprac/jv/app/src/main/java/com/me/jv/repository/HttpCallTest.java") . 1)) ("timeItem" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "g:/andrprac/jv/app/src/main/java/com/me/jv/repository/HttpCallTest.java") . 1)) ("multi-isearch-buffer-list" (nil . 1) (org-mode . 1) ((:file "g:/andrprac/jv/readme.org") . 1)) ("colorAccent" (nil . 1) (nxml-mode . 1) ((:symbol "name=") . 1) ((:file "g:/andrprac/prackotlin/kp/app/src/main/res/values/colors.xml") . 1)) ("starttls-extra-arguments" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("startAt" (nil . 1) (csharp-mode . 1) ((:keyword "out") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("moveCost" (nil . 1) (csharp-mode . 1) ((:keyword "out") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("pushCost" (nil . 1) (csharp-mode . 1) ((:keyword "out") . 1) ((:symbol "2") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("find-alias-regexp" (nil . 1) (csharp-mode . 1) ((:keyword "private") . 1) ((:file "g:/andrprac/jv/app/src/main/java/com/me/jv/ui/SecondActivity.java") . 1)) ("reference-point-alist" (nil . 1) (org-mode . 1) ((:file "g:/andrprac/jv/readme.org") . 1)) ("PackageActivity" (nil . 1) (nxml-mode . 1) ((:symbol "ui") . 1) ((:file "g:/andrprac/jv_AndroidX/app/src/main/AndroidManifest.xml") . 1)) ("activities" (nil . 1) (nxml-mode . 1) ((:symbol "ui") . 1) ((:file "g:/andrprac/jv_AndroidX/app/src/main/res/layout/activity_digitalcoin.xml") . 1)) ("DigitalCoin" (nil . 1) (nxml-mode . 1) ((:symbol "bean") . 1) ((:file "g:/andrprac/jv_AndroidX/app/src/main/res/layout/item_digital_coin.xml") . 1)) ("DigitalCoinViewModel" (nil . 1) (nxml-mode . 1) ((:symbol "viewmodel") . 1) ((:file "g:/andrprac/jv_AndroidX/app/src/main/res/layout/second_fragment.xml") . 1)) ("viewmodels" (nil . 1) (nxml-mode . 1) ((:symbol "jv") . 1) ((:file "g:/andrprac/jv/app/src/main/res/layout/item_coin.xml") . 1)) ("itemClick" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "g:/andrprac/jv/app/src/main/java/com/me/jv/ui/adapters/DigitalCoinAdapter.java") . 1)) ("ClickBinding" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "g:/andrprac/jv/app/src/main/java/com/me/jv/ui/adapters/DigitalCoinAdapter.java") . 1)) ("DigitalCoinAdapter" (nil . 1) (csharp-mode . 1) ((:keyword "private") . 1) ((:file "g:/andrprac/jv/app/src/main/java/com/me/jv/ui/adapters/DigitalCoinAdapter.java") . 1)) ("idCoin" (nil . 1) (nxml-mode . 1) ((:file "g:/andrprac/jv/app/src/main/res/layout/item_layout.xml") . 1)) ("DigitalCoinActivity" (nil . 2) (csharp-mode . 1) ((:keyword "private") . 1) ((:file "g:/andrprac/jv/app/src/main/java/com/me/jv/ui/activities/DigitalCoinActivity.java") . 1)) ("DigitalCoin" (nil . 1) (nxml-mode . 1) ((:symbol "activities") . 1) ((:file "g:/andrprac/jv/app/src/main/AndroidManifest.xml") . 1)) ("DigitalCoinActivity" (nil . 1) (nxml-mode . 1) ((:symbol "activities") . 1) ((:file "g:/andrprac/jv/app/src/main/AndroidManifest.xml") . 1)) ("DigitalCoin" (nil . 1) (nxml-mode . 1) ((:symbol "model") . 1) ((:file "g:/andrprac/jv/app/src/main/res/layout/item_coin.xml") . 1)) ("DigitalCoinResponse" (nil . 1) (nxml-mode . 1) ((:symbol "model") . 1) ((:file "g:/andrprac/jv/app/src/main/res/layout/item_coin.xml") . 1)) ("DCoinRepository" (nil . 1) (csharp-mode . 1) ((:keyword "private") . 1) ((:file "g:/andrprac/jv/app/src/main/java/com/me/jv/repository/DCoinRepository.java") . 1)) ("integer" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "g:/andrprac/mvvm/mvvmPrac/app/src/main/java/com/me/jv/ui/activities/tests/FlowablePrac.java") . 1)) ("current-input-method" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("help-at-pt-display-when-idle" (nil . 2) (csharp-mode . 2) ((:keyword "if") . 2) ((:file "g:/leetcodeCoding/cmp.java") . 2)) ("help-at-pt-display-when-idle" (nil . 1) (csharp-mode . 1) ((:keyword "if") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("noteId" (nil . 1) (kotlin-mode . 1) ((:keyword "it") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/MainActivity.kt") . 1)) ("&noteColor=" (nil . 1) (kotlin-mode . 1) ((:keyword "it") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/MainActivity.kt") . 1)) ("noteColor" (nil . 1) (kotlin-mode . 1) ((:keyword "it") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/MainActivity.kt") . 1)) ("pick_a_color" (nil . 1) (kotlin-mode . 1) ((:keyword "it") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/MainActivity.kt") . 1)) ("AddEditNoteScreen" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 1)) ("event" (nil . 1) (kotlin-mode . 1) ((:keyword "is") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteViewModel.kt") . 1)) ("AddEditNoteViewModel" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteViewModel.kt") . 1)) ("PickAColorSection" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/PickAColorSection.kt") . 1)) ("onColorChanged" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/PickAColorSection.kt") . 1)) ("onColorChange" (nil . 1) (kotlin-mode . 1) ((:keyword "if") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 1)) ("IconButton" (nil . 1) (kotlin-mode . 1) ((:keyword "if") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 1)) ("isColorSectionVisible" (nil . 1) (kotlin-mode . 1) ((:keyword "if") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 1)) ("TestOne" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/ktl/app/src/main/java/com/me/ktl/TestOne.kt") . 1)) ("value" (nil . 1) (kotlin-mode . 1) ((:keyword "in") . 1) ((:file "g:/andrprac/ktl/app/src/main/java/com/me/ktl/MainActivity.kt") . 1)) ("runBloTest" (nil . 1) (kotlin-mode . 1) ((:keyword "fun") . 1) ((:file "g:/andrprac/ktl/app/src/main/java/com/me/ktl/MainActivity.kt") . 1)) ("runBlocking" (nil . 1) (kotlin-mode . 1) ((:keyword "fun") . 1) ((:file "g:/andrprac/ktl/app/src/main/java/com/me/ktl/MainActivity.kt") . 1)) ("asyncOne" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/ktl/app/src/main/java/com/me/ktl/MainActivity.kt") . 1)) ("result" (nil . 1) (kotlin-mode . 2) ((:keyword "val") . 2) ((:file "g:/andrprac/ktl/app/src/main/java/com/me/ktl/MainActivity.kt") . 2)) ("result" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/ktl/app/src/main/java/com/me/ktl/MainActivity.kt") . 1)) ("MyBaseActivity" (nil . 1) (csharp-mode . 1) ((:keyword "private") . 1) ((:file "g:/andrprac/mvvm/MvvmArchitecture/app/src/main/java/com/mythmayor/mvvmarchitecture/base/MyBaseActivity.java") . 1)) ("ActivityCollector" (nil . 1) (csharp-mode . 1) ((:keyword "private") . 1) ((:file "g:/andrprac/mvvm/MvvmArchitecture/app/src/main/java/com/mythmayor/mvvmarchitecture/utils/ActivityCollector.java") . 1)) ("onTouchEvent" (nil . 1) (csharp-mode . 1) ((:keyword "event") . 1) ((:file "g:/andrprac/mvvm/MvvmArchitecture/app/src/main/java/com/mythmayor/mvvmarchitecture/base/MyBaseActivity.java") . 1)) ("MyBaseFragment" (nil . 1) (csharp-mode . 1) ((:keyword "private") . 1) ((:file "g:/andrprac/mvvm/MvvmArchitecture/app/src/main/java/com/mythmayor/mvvmarchitecture/base/MyBaseFragment.java") . 1)) ("KeyboardListener" (nil . 2) (csharp-mode . 2) ((:keyword "private") . 1) ((:file "g:/andrprac/mvvm/MvvmArchitecture/app/src/main/java/com/mythmayor/mvvmarchitecture/itype/KeyboardListener.java") . 2)) ("KeyboardListener" (nil . 1) (csharp-mode . 1) ((:keyword "public") . 1) ((:file "g:/andrprac/mvvm/MvvmArchitecture/app/src/main/java/com/mythmayor/mvvmarchitecture/itype/KeyboardListener.java") . 1)) ("loginActivity" (nil . 1) (csharp-mode . 1) ((:keyword "this") . 1) ((:file "g:/andrprac/mvvm/MvvmArchitecture/app/src/main/java/com/mythmayor/mvvmarchitecture/ui/activity/LoginActivity.java") . 1)) ("loginRequest" (nil . 1) (csharp-mode . 1) ((:keyword "new") . 1) ((:file "g:/andrprac/mvvm/MvvmArchitecture/app/src/main/java/com/mythmayor/mvvmarchitecture/ui/activity/LoginActivity.java") . 1)) ("onClick" (nil . 1) (kotlin-mode . 1) ((:keyword "else") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 1)) ("LazyColumn" (nil . 1) (kotlin-mode . 1) ((:keyword "it") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 1)) ("LoadPicture" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/LoadPictureSection.kt") . 1)) ("glideUrl" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/util/ImageUtil.kt") . 1)) ("ImageMainScreen" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainViewModel.kt") . 1)) ("ToggleGallerySection" (nil . 1) (kotlin-mode . 1) ((:keyword "is") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteViewModel.kt") . 1)) ("GallerySelect" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/GallerySelect.kt") . 1)) ("onResult" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/GallerySelect.kt") . 1)) ("onImageUri" (nil . 2) (kotlin-mode . 2) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/GallerySelect.kt") . 1)) ("AddEditNoteViewModel" (nil . 1) (kotlin-mode . 1) ((:keyword "fun") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainContent.kt") . 1)) ("ImageMainContent" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainContent.kt") . 1)) ("capture" (nil . 1) (kotlin-mode . 1) ((:keyword "if") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainContent.kt") . 1)) ("onImageUri" (nil . 1) (kotlin-mode . 1) ((:keyword "if") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainContent.kt") . 1)) ("onClick" (nil . 1) (kotlin-mode . 1) ((:keyword "else") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 1)) ("ToggleImageSection" (nil . 1) (kotlin-mode . 1) ((:keyword "is") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteViewModel.kt") . 1)) ("toString" (nil . 1) (kotlin-mode . 3) ((:keyword "if") . 1) ((:symbol "uri") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainContent.kt") . 3)) ("imgaes" (nil . 1) (kotlin-mode . 1) ((:keyword "else") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainContent.kt") . 1)) ("toString" (nil . 1) (kotlin-mode . 1) ((:keyword "else") . 1) ((:symbol "value") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainContent.kt") . 1)) ("_imgUri" (nil . 1) (kotlin-mode . 1) ((:keyword "var") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteViewModel.kt") . 1)) ("EMPTY_IMAGE_URI" (nil . 1) (kotlin-mode . 1) ((:keyword "var") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteViewModel.kt") . 1)) ("imageUri" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainContent.kt") . 1)) ("toString" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:symbol "imageUri") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainContent.kt") . 1)) ("runCatching" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/ext.kt") . 1)) ("CameraCapture" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/CameraCapture.kt") . 1)) ("onImageFile" (nil . 1) (kotlin-mode . 1) ((:keyword "else") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/ImageMainContent.kt") . 1)) ("orgDigits" (nil . 1) (csharp-mode . 1) ((:keyword "out") . 1) ((:file "g:/leetcodeCoding/mtwoixed.java") . 1)) ("help-at-pt-display-when-idle" (nil . 1) (csharp-mode . 1) ((:keyword "return") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("added" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 2) ((:symbol "nil") . 2) ((:file "g:/leetcodeCoding/cmp.java") . 2)) ("added" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:symbol "nil") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("large-file-warning-threshold" (nil . 1) (csharp-mode . 1) ((:keyword "for") . 1) ((:file "g:/leetcodeCoding/prevCmp/cmp_22_2_19_1.java") . 1)) ("length" (nil . 1) (csharp-mode . 1) ((:keyword "out") . 1) ((:symbol "ans") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("poll" (nil . 1) (csharp-mode . 1) ((:keyword "while") . 1) ((:symbol "q") . 1) ((:file "g:/leetcodeCoding/cmp.java") . 1)) ("annotatedStringResource" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/html/annotatedStringResource.kt") . 1)) ("Typeface" (nil . 1) (kotlin-mode . 1) ((:keyword "when") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/html/annotatedStringResource.kt") . 1)) ("spanned" (nil . 2) (kotlin-mode . 2) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/html/annotatedStringResource.kt") . 2)) ("spanned" (nil . 1) (kotlin-mode . 1) ((:keyword "return") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/html/annotatedStringResource.kt") . 1)) ("toString" (nil . 1) (kotlin-mode . 1) ((:keyword "return") . 1) ((:symbol "spanned") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/html/annotatedStringResource.kt") . 1)) ("parseHtml" (nil . 2) (kotlin-mode . 2) ((:keyword "val") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/html/parseHtml.kt") . 1)) ("newlineReplace" (nil . 1) (kotlin-mode . 1) ((:keyword "this") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/html/parseHtml.kt") . 1)) ("@Composable" (nil . 1) (kotlin-mode . 1) ((:keyword "this") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/components/html/parseHtml.kt") . 1)) ("parseHtml" (nil . 1) (kotlin-mode . 1) ((:keyword "else") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 1)) ("annotatedStringResource" (nil . 1) (kotlin-mode . 1) ((:keyword "else") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 1)) ("toAnnotatedString" (nil . 1) (kotlin-mode . 1) ((:keyword "val") . 1) ((:symbol "tmp") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteScreen.kt") . 1)) ("EnteredContent" (nil . 1) (kotlin-mode . 1) ((:keyword "is") . 1) ((:file "g:/andrprac/CleanArchitectureNoteApp/app/src/main/java/com/plcoding/cleanarchitecturenoteapp/feature_note/presentation/add_edit_note/AddEditNoteViewModel.kt") . 1)) ("swift" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/hhj/.emacs.d/lisp/init-swift-mode.el") . 1)) ("interactive" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/Users/hhj/.emacs.d/lisp/init-swift-mode.el") . 1)) ("swift-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/Users/hhj/.emacs.d/lisp/init-swift-mode.el") . 1)) ("A2C_Disconnect" (nil . 1) (csharp-mode . 1) ((:keyword "namespace") . 1) ((:file "/Users/hhj/pubFrameWorks/ET-EUI/Tools/Analyzer/Analyzer/AddChildTypeAnalyzer.cs") . 1))] company-statistics--index 0)